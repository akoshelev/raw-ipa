<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="869.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="10006"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (2 samples, 0.02%)</title><rect x="0.0000%" y="805" width="0.0200%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.02%)</title><rect x="0.0000%" y="789" width="0.0200%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="799.50"></text></g><g><title>dyld`start (3 samples, 0.03%)</title><rect x="0.0000%" y="821" width="0.0300%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3"/><text x="0.2500%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.03%)</title><rect x="0.0300%" y="821" width="0.0300%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="3"/><text x="0.2800%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (14 samples, 0.14%)</title><rect x="0.0600%" y="789" width="0.1399%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="14"/><text x="0.3100%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (14 samples, 0.14%)</title><rect x="0.0600%" y="773" width="0.1399%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="14"/><text x="0.3100%" y="783.50"></text></g><g><title>oprf`tsd_cleanup_wrapper (14 samples, 0.14%)</title><rect x="0.0600%" y="757" width="0.1399%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="14"/><text x="0.3100%" y="767.50"></text></g><g><title>oprf`_rjem_je_tsd_cleanup (14 samples, 0.14%)</title><rect x="0.0600%" y="741" width="0.1399%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="14"/><text x="0.3100%" y="751.50"></text></g><g><title>oprf`tcache_destroy (14 samples, 0.14%)</title><rect x="0.0600%" y="725" width="0.1399%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="14"/><text x="0.3100%" y="735.50"></text></g><g><title>oprf`_rjem_je_arena_decay (14 samples, 0.14%)</title><rect x="0.0600%" y="709" width="0.1399%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="14"/><text x="0.3100%" y="719.50"></text></g><g><title>oprf`arena_decay_impl (14 samples, 0.14%)</title><rect x="0.0600%" y="693" width="0.1399%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="14"/><text x="0.3100%" y="703.50"></text></g><g><title>oprf`pac_decay_to_limit (14 samples, 0.14%)</title><rect x="0.0600%" y="677" width="0.1399%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="14"/><text x="0.3100%" y="687.50"></text></g><g><title>oprf`_rjem_je_extent_dalloc_wrapper (14 samples, 0.14%)</title><rect x="0.0600%" y="661" width="0.1399%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="14"/><text x="0.3100%" y="671.50"></text></g><g><title>oprf`_rjem_je_extent_dalloc_mmap (14 samples, 0.14%)</title><rect x="0.0600%" y="645" width="0.1399%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="14"/><text x="0.3100%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (14 samples, 0.14%)</title><rect x="0.0600%" y="629" width="0.1399%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="14"/><text x="0.3100%" y="639.50"></text></g><g><title>oprf`__floatuntidf (2 samples, 0.02%)</title><rect x="0.2099%" y="645" width="0.0200%" height="15" fill="rgb(231,73,38)" fg:x="21" fg:w="2"/><text x="0.4599%" y="655.50"></text></g><g><title>oprf`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (27 samples, 0.27%)</title><rect x="0.2798%" y="629" width="0.2698%" height="15" fill="rgb(225,20,46)" fg:x="28" fg:w="27"/><text x="0.5298%" y="639.50"></text></g><g><title>oprf`tokio::runtime::scheduler::multi_thread::park::Parker::park (25 samples, 0.25%)</title><rect x="0.2998%" y="613" width="0.2499%" height="15" fill="rgb(210,31,41)" fg:x="30" fg:w="25"/><text x="0.5498%" y="623.50"></text></g><g><title>oprf`std::sync::condvar::Condvar::wait (25 samples, 0.25%)</title><rect x="0.2998%" y="597" width="0.2499%" height="15" fill="rgb(221,200,47)" fg:x="30" fg:w="25"/><text x="0.5498%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (25 samples, 0.25%)</title><rect x="0.2998%" y="581" width="0.2499%" height="15" fill="rgb(226,26,5)" fg:x="30" fg:w="25"/><text x="0.5498%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (8 samples, 0.08%)</title><rect x="0.5497%" y="613" width="0.0800%" height="15" fill="rgb(249,33,26)" fg:x="55" fg:w="8"/><text x="0.7997%" y="623.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (3 samples, 0.03%)</title><rect x="0.6596%" y="549" width="0.0300%" height="15" fill="rgb(235,183,28)" fg:x="66" fg:w="3"/><text x="0.9096%" y="559.50"></text></g><g><title>oprf`ipa::helpers::transport::stream::collection::StreamCollection&lt;S&gt;::add_stream (2 samples, 0.02%)</title><rect x="0.6896%" y="549" width="0.0200%" height="15" fill="rgb(221,5,38)" fg:x="69" fg:w="2"/><text x="0.9396%" y="559.50"></text></g><g><title>oprf`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (2 samples, 0.02%)</title><rect x="0.7096%" y="549" width="0.0200%" height="15" fill="rgb(247,18,42)" fg:x="71" fg:w="2"/><text x="0.9596%" y="559.50"></text></g><g><title>oprf`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="0.7096%" y="533" width="0.0200%" height="15" fill="rgb(241,131,45)" fg:x="71" fg:w="2"/><text x="0.9596%" y="543.50"></text></g><g><title>oprf`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.09%)</title><rect x="0.6496%" y="565" width="0.0899%" height="15" fill="rgb(249,31,29)" fg:x="65" fg:w="9"/><text x="0.8996%" y="575.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_sender::_{{closure}} (4 samples, 0.04%)</title><rect x="0.7496%" y="565" width="0.0400%" height="15" fill="rgb(225,111,53)" fg:x="75" fg:w="4"/><text x="0.9996%" y="575.50"></text></g><g><title>oprf`ipa::helpers::transport::in_memory::transport::_&lt;impl ipa::helpers::transport::Transport for alloc::sync::Weak&lt;ipa::helpers::transport::in_memory::transport::InMemoryTransport&gt;&gt;::send::_{{closure}} (2 samples, 0.02%)</title><rect x="0.7695%" y="549" width="0.0200%" height="15" fill="rgb(238,160,17)" fg:x="77" fg:w="2"/><text x="1.0195%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="0.8095%" y="469" width="0.0200%" height="15" fill="rgb(214,148,48)" fg:x="81" fg:w="2"/><text x="1.0595%" y="479.50"></text></g><g><title>oprf`&lt;ipa::protocol::step::descriptive::Descriptive as ipa::protocol::step::StepNarrow&lt;S&gt;&gt;::narrow (2 samples, 0.02%)</title><rect x="0.8795%" y="453" width="0.0200%" height="15" fill="rgb(232,36,49)" fg:x="88" fg:w="2"/><text x="1.1295%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.17%)</title><rect x="1.2692%" y="437" width="0.1699%" height="15" fill="rgb(209,103,24)" fg:x="127" fg:w="17"/><text x="1.5192%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (7 samples, 0.07%)</title><rect x="1.4391%" y="437" width="0.0700%" height="15" fill="rgb(229,88,8)" fg:x="144" fg:w="7"/><text x="1.6891%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="1.5791%" y="389" width="0.0300%" height="15" fill="rgb(213,181,19)" fg:x="158" fg:w="3"/><text x="1.8291%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="1.6590%" y="373" width="0.0200%" height="15" fill="rgb(254,191,54)" fg:x="166" fg:w="2"/><text x="1.9090%" y="383.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="1.6790%" y="373" width="0.0200%" height="15" fill="rgb(241,83,37)" fg:x="168" fg:w="2"/><text x="1.9290%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="1.7490%" y="341" width="0.0400%" height="15" fill="rgb(233,36,39)" fg:x="175" fg:w="4"/><text x="1.9990%" y="351.50"></text></g><g><title>oprf`_rjem_realloc (2 samples, 0.02%)</title><rect x="1.7889%" y="341" width="0.0200%" height="15" fill="rgb(226,3,54)" fg:x="179" fg:w="2"/><text x="2.0389%" y="351.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (9 samples, 0.09%)</title><rect x="1.8289%" y="325" width="0.0899%" height="15" fill="rgb(245,192,40)" fg:x="183" fg:w="9"/><text x="2.0789%" y="335.50"></text></g><g><title>oprf`_rjem_je_tcache_alloc_small_hard (3 samples, 0.03%)</title><rect x="1.8889%" y="309" width="0.0300%" height="15" fill="rgb(238,167,29)" fg:x="189" fg:w="3"/><text x="2.1389%" y="319.50"></text></g><g><title>oprf`_rjem_je_arena_cache_bin_fill_small (3 samples, 0.03%)</title><rect x="1.8889%" y="293" width="0.0300%" height="15" fill="rgb(232,182,51)" fg:x="189" fg:w="3"/><text x="2.1389%" y="303.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (19 samples, 0.19%)</title><rect x="1.7390%" y="357" width="0.1899%" height="15" fill="rgb(231,60,39)" fg:x="174" fg:w="19"/><text x="1.9890%" y="367.50"></text></g><g><title>oprf`do_rallocx (12 samples, 0.12%)</title><rect x="1.8089%" y="341" width="0.1199%" height="15" fill="rgb(208,69,12)" fg:x="181" fg:w="12"/><text x="2.0589%" y="351.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.24%)</title><rect x="1.6990%" y="373" width="0.2399%" height="15" fill="rgb(235,93,37)" fg:x="170" fg:w="24"/><text x="1.9490%" y="383.50"></text></g><g><title>oprf`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.43%)</title><rect x="1.5191%" y="405" width="0.4297%" height="15" fill="rgb(213,116,39)" fg:x="152" fg:w="43"/><text x="1.7691%" y="415.50"></text></g><g><title>oprf`&lt;ipa::protocol::step::descriptive::Descriptive as ipa::protocol::step::StepNarrow&lt;S&gt;&gt;::narrow (34 samples, 0.34%)</title><rect x="1.6090%" y="389" width="0.3398%" height="15" fill="rgb(222,207,29)" fg:x="161" fg:w="34"/><text x="1.8590%" y="399.50"></text></g><g><title>oprf`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 0.45%)</title><rect x="1.5091%" y="421" width="0.4497%" height="15" fill="rgb(206,96,30)" fg:x="151" fg:w="45"/><text x="1.7591%" y="431.50"></text></g><g><title>oprf`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (46 samples, 0.46%)</title><rect x="1.5091%" y="437" width="0.4597%" height="15" fill="rgb(218,138,4)" fg:x="151" fg:w="46"/><text x="1.7591%" y="447.50"></text></g><g><title>oprf`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="1.9688%" y="437" width="0.0200%" height="15" fill="rgb(250,191,14)" fg:x="197" fg:w="2"/><text x="2.2188%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.07%)</title><rect x="2.0887%" y="405" width="0.0700%" height="15" fill="rgb(239,60,40)" fg:x="209" fg:w="7"/><text x="2.3387%" y="415.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="2.2586%" y="341" width="0.0200%" height="15" fill="rgb(206,27,48)" fg:x="226" fg:w="2"/><text x="2.5086%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="2.3386%" y="293" width="0.0200%" height="15" fill="rgb(225,35,8)" fg:x="234" fg:w="2"/><text x="2.5886%" y="303.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (3 samples, 0.03%)</title><rect x="2.3586%" y="277" width="0.0300%" height="15" fill="rgb(250,213,24)" fg:x="236" fg:w="3"/><text x="2.6086%" y="287.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (7 samples, 0.07%)</title><rect x="2.3586%" y="293" width="0.0700%" height="15" fill="rgb(247,123,22)" fg:x="236" fg:w="7"/><text x="2.6086%" y="303.50"></text></g><g><title>oprf`_rjem_je_tcache_alloc_small_hard (3 samples, 0.03%)</title><rect x="2.3986%" y="277" width="0.0300%" height="15" fill="rgb(231,138,38)" fg:x="240" fg:w="3"/><text x="2.6486%" y="287.50"></text></g><g><title>oprf`_rjem_je_arena_cache_bin_fill_small (2 samples, 0.02%)</title><rect x="2.4086%" y="261" width="0.0200%" height="15" fill="rgb(231,145,46)" fg:x="241" fg:w="2"/><text x="2.6586%" y="271.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.16%)</title><rect x="2.2786%" y="341" width="0.1599%" height="15" fill="rgb(251,118,11)" fg:x="228" fg:w="16"/><text x="2.5286%" y="351.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (14 samples, 0.14%)</title><rect x="2.2986%" y="325" width="0.1399%" height="15" fill="rgb(217,147,25)" fg:x="230" fg:w="14"/><text x="2.5486%" y="335.50"></text></g><g><title>oprf`do_rallocx (12 samples, 0.12%)</title><rect x="2.3186%" y="309" width="0.1199%" height="15" fill="rgb(247,81,37)" fg:x="232" fg:w="12"/><text x="2.5686%" y="319.50"></text></g><g><title>oprf`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.28%)</title><rect x="2.1687%" y="373" width="0.2798%" height="15" fill="rgb(209,12,38)" fg:x="217" fg:w="28"/><text x="2.4187%" y="383.50"></text></g><g><title>oprf`&lt;ipa::protocol::step::descriptive::Descriptive as ipa::protocol::step::StepNarrow&lt;S&gt;&gt;::narrow (23 samples, 0.23%)</title><rect x="2.2187%" y="357" width="0.2299%" height="15" fill="rgb(227,1,9)" fg:x="222" fg:w="23"/><text x="2.4687%" y="367.50"></text></g><g><title>oprf`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (30 samples, 0.30%)</title><rect x="2.1687%" y="405" width="0.2998%" height="15" fill="rgb(248,47,43)" fg:x="217" fg:w="30"/><text x="2.4187%" y="415.50"></text></g><g><title>oprf`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30 samples, 0.30%)</title><rect x="2.1687%" y="389" width="0.2998%" height="15" fill="rgb(221,10,30)" fg:x="217" fg:w="30"/><text x="2.4187%" y="399.50"></text></g><g><title>oprf`_rjem_je_malloc_default (2 samples, 0.02%)</title><rect x="2.4485%" y="373" width="0.0200%" height="15" fill="rgb(210,229,1)" fg:x="245" fg:w="2"/><text x="2.6985%" y="383.50"></text></g><g><title>oprf`_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="2.4485%" y="357" width="0.0200%" height="15" fill="rgb(222,148,37)" fg:x="245" fg:w="2"/><text x="2.6985%" y="367.50"></text></g><g><title>oprf`_rjem_je_arena_cache_bin_fill_small (2 samples, 0.02%)</title><rect x="2.4485%" y="341" width="0.0200%" height="15" fill="rgb(234,67,33)" fg:x="245" fg:w="2"/><text x="2.6985%" y="351.50"></text></g><g><title>oprf`arena_slab_alloc (2 samples, 0.02%)</title><rect x="2.4485%" y="325" width="0.0200%" height="15" fill="rgb(247,98,35)" fg:x="245" fg:w="2"/><text x="2.6985%" y="335.50"></text></g><g><title>oprf`_rjem_je_pa_alloc (2 samples, 0.02%)</title><rect x="2.4485%" y="309" width="0.0200%" height="15" fill="rgb(247,138,52)" fg:x="245" fg:w="2"/><text x="2.6985%" y="319.50"></text></g><g><title>oprf`pac_alloc_impl (2 samples, 0.02%)</title><rect x="2.4485%" y="293" width="0.0200%" height="15" fill="rgb(213,79,30)" fg:x="245" fg:w="2"/><text x="2.6985%" y="303.50"></text></g><g><title>oprf`_rjem_je_ecache_alloc_grow (2 samples, 0.02%)</title><rect x="2.4485%" y="277" width="0.0200%" height="15" fill="rgb(246,177,23)" fg:x="245" fg:w="2"/><text x="2.6985%" y="287.50"></text></g><g><title>oprf`_rjem_je_extent_alloc_wrapper (2 samples, 0.02%)</title><rect x="2.4485%" y="261" width="0.0200%" height="15" fill="rgb(230,62,27)" fg:x="245" fg:w="2"/><text x="2.6985%" y="271.50"></text></g><g><title>oprf`_rjem_je_extent_alloc_mmap (2 samples, 0.02%)</title><rect x="2.4485%" y="245" width="0.0200%" height="15" fill="rgb(216,154,8)" fg:x="245" fg:w="2"/><text x="2.6985%" y="255.50"></text></g><g><title>oprf`_rjem_je_pages_map (2 samples, 0.02%)</title><rect x="2.4485%" y="229" width="0.0200%" height="15" fill="rgb(244,35,45)" fg:x="245" fg:w="2"/><text x="2.6985%" y="239.50"></text></g><g><title>oprf`os_pages_map (2 samples, 0.02%)</title><rect x="2.4485%" y="213" width="0.0200%" height="15" fill="rgb(251,115,12)" fg:x="245" fg:w="2"/><text x="2.6985%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (2 samples, 0.02%)</title><rect x="2.4485%" y="197" width="0.0200%" height="15" fill="rgb(240,54,50)" fg:x="245" fg:w="2"/><text x="2.6985%" y="207.50"></text></g><g><title>oprf`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="2.4885%" y="389" width="0.0300%" height="15" fill="rgb(233,84,52)" fg:x="249" fg:w="3"/><text x="2.7385%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.12%)</title><rect x="2.5984%" y="357" width="0.1199%" height="15" fill="rgb(207,117,47)" fg:x="260" fg:w="12"/><text x="2.8484%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="2.7184%" y="357" width="0.0400%" height="15" fill="rgb(249,43,39)" fg:x="272" fg:w="4"/><text x="2.9684%" y="367.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="2.7883%" y="357" width="0.0200%" height="15" fill="rgb(209,38,44)" fg:x="279" fg:w="2"/><text x="3.0383%" y="367.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="2.8083%" y="357" width="0.0200%" height="15" fill="rgb(236,212,23)" fg:x="281" fg:w="2"/><text x="3.0583%" y="367.50"></text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (4 samples, 0.04%)</title><rect x="2.8483%" y="341" width="0.0400%" height="15" fill="rgb(242,79,21)" fg:x="285" fg:w="4"/><text x="3.0983%" y="351.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (55 samples, 0.55%)</title><rect x="2.8283%" y="357" width="0.5497%" height="15" fill="rgb(211,96,35)" fg:x="283" fg:w="55"/><text x="3.0783%" y="367.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (49 samples, 0.49%)</title><rect x="2.8883%" y="341" width="0.4897%" height="15" fill="rgb(253,215,40)" fg:x="289" fg:w="49"/><text x="3.1383%" y="351.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (3 samples, 0.03%)</title><rect x="3.3780%" y="357" width="0.0300%" height="15" fill="rgb(211,81,21)" fg:x="338" fg:w="3"/><text x="3.6280%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="3.4479%" y="341" width="0.0400%" height="15" fill="rgb(208,190,38)" fg:x="345" fg:w="4"/><text x="3.6979%" y="351.50"></text></g><g><title>oprf`&lt;ipa::ff::galois_field::bit_array_1::Gf2 as core::ops::arith::Mul&gt;::mul (2 samples, 0.02%)</title><rect x="3.4879%" y="341" width="0.0200%" height="15" fill="rgb(235,213,38)" fg:x="349" fg:w="2"/><text x="3.7379%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.11%)</title><rect x="3.7478%" y="325" width="0.1099%" height="15" fill="rgb(237,122,38)" fg:x="375" fg:w="11"/><text x="3.9978%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (10 samples, 0.10%)</title><rect x="3.8577%" y="325" width="0.0999%" height="15" fill="rgb(244,218,35)" fg:x="386" fg:w="10"/><text x="4.1077%" y="335.50"></text></g><g><title>oprf`&lt;ipa::ff::galois_field::bit_array_1::Gf2 as core::ops::arith::Mul&gt;::mul (33 samples, 0.33%)</title><rect x="3.9576%" y="325" width="0.3298%" height="15" fill="rgb(240,68,47)" fg:x="396" fg:w="33"/><text x="4.2076%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="4.2974%" y="309" width="0.0300%" height="15" fill="rgb(210,16,53)" fg:x="430" fg:w="3"/><text x="4.5474%" y="319.50"></text></g><g><title>oprf`ipa::helpers::gateway::transport::RoleResolvingTransport&lt;T&gt;::role (3 samples, 0.03%)</title><rect x="4.3274%" y="309" width="0.0300%" height="15" fill="rgb(235,124,12)" fg:x="433" fg:w="3"/><text x="4.5774%" y="319.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="4.4273%" y="293" width="0.0600%" height="15" fill="rgb(224,169,11)" fg:x="443" fg:w="6"/><text x="4.6773%" y="303.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::prss (22 samples, 0.22%)</title><rect x="4.2974%" y="325" width="0.2199%" height="15" fill="rgb(250,166,2)" fg:x="430" fg:w="22"/><text x="4.5474%" y="335.50"></text></g><g><title>oprf`ipa::protocol::prss::Endpoint::indexed (16 samples, 0.16%)</title><rect x="4.3574%" y="309" width="0.1599%" height="15" fill="rgb(242,216,29)" fg:x="436" fg:w="16"/><text x="4.6074%" y="319.50"></text></g><g><title>oprf`sha2::sha256::compress256 (2 samples, 0.02%)</title><rect x="4.4973%" y="293" width="0.0200%" height="15" fill="rgb(230,116,27)" fg:x="450" fg:w="2"/><text x="4.7473%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="4.5573%" y="277" width="0.0300%" height="15" fill="rgb(228,99,48)" fg:x="456" fg:w="3"/><text x="4.8073%" y="287.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="4.5972%" y="277" width="0.0700%" height="15" fill="rgb(253,11,6)" fg:x="460" fg:w="7"/><text x="4.8472%" y="287.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="4.7272%" y="261" width="0.0899%" height="15" fill="rgb(247,143,39)" fg:x="473" fg:w="9"/><text x="4.9772%" y="271.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (18 samples, 0.18%)</title><rect x="4.6672%" y="277" width="0.1799%" height="15" fill="rgb(236,97,10)" fg:x="467" fg:w="18"/><text x="4.9172%" y="287.50"></text></g><g><title>oprf`hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="4.8171%" y="261" width="0.0300%" height="15" fill="rgb(233,208,19)" fg:x="482" fg:w="3"/><text x="5.0671%" y="271.50"></text></g><g><title>oprf`hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="4.8471%" y="277" width="0.0300%" height="15" fill="rgb(216,164,2)" fg:x="485" fg:w="3"/><text x="5.0971%" y="287.50"></text></g><g><title>oprf`ipa::helpers::buffers::unordered_receiver::UnorderedReceiver&lt;S,C&gt;::new (4 samples, 0.04%)</title><rect x="4.8771%" y="277" width="0.0400%" height="15" fill="rgb(220,129,5)" fg:x="488" fg:w="4"/><text x="5.1271%" y="287.50"></text></g><g><title>oprf`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (4 samples, 0.04%)</title><rect x="4.8771%" y="261" width="0.0400%" height="15" fill="rgb(242,17,10)" fg:x="488" fg:w="4"/><text x="5.1271%" y="271.50"></text></g><g><title>oprf`alloc::vec::Vec&lt;T,A&gt;::extend_with (4 samples, 0.04%)</title><rect x="4.8771%" y="245" width="0.0400%" height="15" fill="rgb(242,107,0)" fg:x="488" fg:w="4"/><text x="5.1271%" y="255.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::recv_channel (41 samples, 0.41%)</title><rect x="4.5173%" y="325" width="0.4098%" height="15" fill="rgb(251,28,31)" fg:x="452" fg:w="41"/><text x="4.7673%" y="335.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_receiver (40 samples, 0.40%)</title><rect x="4.5273%" y="309" width="0.3998%" height="15" fill="rgb(233,223,10)" fg:x="453" fg:w="40"/><text x="4.7773%" y="319.50"></text></g><g><title>oprf`ipa::helpers::gateway::receive::GatewayReceivers&lt;T&gt;::get_or_create (40 samples, 0.40%)</title><rect x="4.5273%" y="293" width="0.3998%" height="15" fill="rgb(215,21,27)" fg:x="453" fg:w="40"/><text x="4.7773%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="4.9370%" y="309" width="0.0300%" height="15" fill="rgb(232,23,21)" fg:x="494" fg:w="3"/><text x="5.1870%" y="319.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="4.9670%" y="309" width="0.0200%" height="15" fill="rgb(244,5,23)" fg:x="497" fg:w="2"/><text x="5.2170%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="5.0170%" y="293" width="0.0200%" height="15" fill="rgb(226,81,46)" fg:x="502" fg:w="2"/><text x="5.2670%" y="303.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="5.0370%" y="293" width="0.0200%" height="15" fill="rgb(247,70,30)" fg:x="504" fg:w="2"/><text x="5.2870%" y="303.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="5.0570%" y="293" width="0.0200%" height="15" fill="rgb(212,68,19)" fg:x="506" fg:w="2"/><text x="5.3070%" y="303.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.08%)</title><rect x="5.1069%" y="277" width="0.0800%" height="15" fill="rgb(240,187,13)" fg:x="511" fg:w="8"/><text x="5.3569%" y="287.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (16 samples, 0.16%)</title><rect x="5.2169%" y="277" width="0.1599%" height="15" fill="rgb(223,113,26)" fg:x="522" fg:w="16"/><text x="5.4669%" y="287.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.14%)</title><rect x="5.2369%" y="261" width="0.1399%" height="15" fill="rgb(206,192,2)" fg:x="524" fg:w="14"/><text x="5.4869%" y="271.50"></text></g><g><title>oprf`ipa::helpers::gateway::send::GatewaySenders::get_or_create (38 samples, 0.38%)</title><rect x="5.0869%" y="293" width="0.3798%" height="15" fill="rgb(241,108,4)" fg:x="509" fg:w="38"/><text x="5.3369%" y="303.50"></text></g><g><title>oprf`hashbrown::map::make_hash (8 samples, 0.08%)</title><rect x="5.3868%" y="277" width="0.0800%" height="15" fill="rgb(247,173,49)" fg:x="539" fg:w="8"/><text x="5.6368%" y="287.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_sender (49 samples, 0.49%)</title><rect x="4.9870%" y="309" width="0.4897%" height="15" fill="rgb(224,114,35)" fg:x="499" fg:w="49"/><text x="5.2370%" y="319.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::send_channel (56 samples, 0.56%)</title><rect x="4.9270%" y="325" width="0.5597%" height="15" fill="rgb(245,159,27)" fg:x="493" fg:w="56"/><text x="5.1770%" y="335.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (18 samples, 0.18%)</title><rect x="5.4867%" y="325" width="0.1799%" height="15" fill="rgb(245,172,44)" fg:x="549" fg:w="18"/><text x="5.7367%" y="335.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (30 samples, 0.30%)</title><rect x="5.7066%" y="293" width="0.2998%" height="15" fill="rgb(236,23,11)" fg:x="571" fg:w="30"/><text x="5.9566%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="6.0064%" y="277" width="0.0300%" height="15" fill="rgb(205,117,38)" fg:x="601" fg:w="3"/><text x="6.2564%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (5 samples, 0.05%)</title><rect x="6.1663%" y="261" width="0.0500%" height="15" fill="rgb(237,72,25)" fg:x="617" fg:w="5"/><text x="6.4163%" y="271.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (25 samples, 0.25%)</title><rect x="6.0064%" y="293" width="0.2499%" height="15" fill="rgb(244,70,9)" fg:x="601" fg:w="25"/><text x="6.2564%" y="303.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (22 samples, 0.22%)</title><rect x="6.0364%" y="277" width="0.2199%" height="15" fill="rgb(217,125,39)" fg:x="604" fg:w="22"/><text x="6.2864%" y="287.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="6.2263%" y="261" width="0.0300%" height="15" fill="rgb(235,36,10)" fg:x="623" fg:w="3"/><text x="6.4763%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.03%)</title><rect x="6.2662%" y="277" width="0.0300%" height="15" fill="rgb(251,123,47)" fg:x="627" fg:w="3"/><text x="6.5162%" y="287.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (46 samples, 0.46%)</title><rect x="6.3262%" y="261" width="0.4597%" height="15" fill="rgb(221,13,13)" fg:x="633" fg:w="46"/><text x="6.5762%" y="271.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="6.7859%" y="261" width="0.0200%" height="15" fill="rgb(238,131,9)" fg:x="679" fg:w="2"/><text x="7.0359%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.22%)</title><rect x="6.8859%" y="245" width="0.2199%" height="15" fill="rgb(211,50,8)" fg:x="689" fg:w="22"/><text x="7.1359%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="7.1057%" y="245" width="0.0200%" height="15" fill="rgb(245,182,24)" fg:x="711" fg:w="2"/><text x="7.3557%" y="255.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (5 samples, 0.05%)</title><rect x="7.1257%" y="245" width="0.0500%" height="15" fill="rgb(242,14,37)" fg:x="713" fg:w="5"/><text x="7.3757%" y="255.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="7.1957%" y="245" width="0.0200%" height="15" fill="rgb(246,228,12)" fg:x="720" fg:w="2"/><text x="7.4457%" y="255.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (45 samples, 0.45%)</title><rect x="6.8059%" y="261" width="0.4497%" height="15" fill="rgb(213,55,15)" fg:x="681" fg:w="45"/><text x="7.0559%" y="271.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (4 samples, 0.04%)</title><rect x="7.2157%" y="245" width="0.0400%" height="15" fill="rgb(209,9,3)" fg:x="722" fg:w="4"/><text x="7.4657%" y="255.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="7.2357%" y="229" width="0.0200%" height="15" fill="rgb(230,59,30)" fg:x="724" fg:w="2"/><text x="7.4857%" y="239.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (101 samples, 1.01%)</title><rect x="6.2962%" y="277" width="1.0094%" height="15" fill="rgb(209,121,21)" fg:x="630" fg:w="101"/><text x="6.5462%" y="287.50"></text></g><g><title>oprf`metrics::key::key_hasher_impl (5 samples, 0.05%)</title><rect x="7.2556%" y="261" width="0.0500%" height="15" fill="rgb(220,109,13)" fg:x="726" fg:w="5"/><text x="7.5056%" y="271.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (163 samples, 1.63%)</title><rect x="5.6866%" y="309" width="1.6290%" height="15" fill="rgb(232,18,1)" fg:x="569" fg:w="163"/><text x="5.9366%" y="319.50"></text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (105 samples, 1.05%)</title><rect x="6.2662%" y="293" width="1.0494%" height="15" fill="rgb(215,41,42)" fg:x="627" fg:w="105"/><text x="6.5162%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.12%)</title><rect x="7.3556%" y="293" width="0.1199%" height="15" fill="rgb(224,123,36)" fg:x="736" fg:w="12"/><text x="7.6056%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (3 samples, 0.03%)</title><rect x="7.4755%" y="293" width="0.0300%" height="15" fill="rgb(240,125,3)" fg:x="748" fg:w="3"/><text x="7.7255%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.13%)</title><rect x="7.5954%" y="277" width="0.1299%" height="15" fill="rgb(205,98,50)" fg:x="760" fg:w="13"/><text x="7.8454%" y="287.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (5 samples, 0.05%)</title><rect x="7.7254%" y="277" width="0.0500%" height="15" fill="rgb(205,185,37)" fg:x="773" fg:w="5"/><text x="7.9754%" y="287.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (33 samples, 0.33%)</title><rect x="7.5055%" y="293" width="0.3298%" height="15" fill="rgb(238,207,15)" fg:x="751" fg:w="33"/><text x="7.7555%" y="303.50"></text></g><g><title>oprf`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.06%)</title><rect x="7.7753%" y="277" width="0.0600%" height="15" fill="rgb(213,199,42)" fg:x="778" fg:w="6"/><text x="8.0253%" y="287.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (50 samples, 0.50%)</title><rect x="7.3556%" y="309" width="0.4997%" height="15" fill="rgb(235,201,11)" fg:x="736" fg:w="50"/><text x="7.6056%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="7.8853%" y="293" width="0.0600%" height="15" fill="rgb(207,46,11)" fg:x="789" fg:w="6"/><text x="8.1353%" y="303.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (229 samples, 2.29%)</title><rect x="5.6666%" y="325" width="2.2886%" height="15" fill="rgb(241,35,35)" fg:x="567" fg:w="229"/><text x="5.9166%" y="335.50">o..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (10 samples, 0.10%)</title><rect x="7.8553%" y="309" width="0.0999%" height="15" fill="rgb(243,32,47)" fg:x="786" fg:w="10"/><text x="8.1053%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="8.0951%" y="309" width="0.0400%" height="15" fill="rgb(247,202,23)" fg:x="810" fg:w="4"/><text x="8.3451%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="8.1651%" y="293" width="0.0200%" height="15" fill="rgb(219,102,11)" fg:x="817" fg:w="2"/><text x="8.4151%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="8.2251%" y="277" width="0.0200%" height="15" fill="rgb(243,110,44)" fg:x="823" fg:w="2"/><text x="8.4751%" y="287.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::ordering_sender::Send&lt;M&gt; as core::future::future::Future&gt;::poll (12 samples, 0.12%)</title><rect x="8.1351%" y="309" width="0.1199%" height="15" fill="rgb(222,74,54)" fg:x="814" fg:w="12"/><text x="8.3851%" y="319.50"></text></g><g><title>oprf`ipa::helpers::buffers::ordering_sender::Waiting::wake (6 samples, 0.06%)</title><rect x="8.1951%" y="293" width="0.0600%" height="15" fill="rgb(216,99,12)" fg:x="820" fg:w="6"/><text x="8.4451%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="8.3050%" y="293" width="0.0200%" height="15" fill="rgb(226,22,26)" fg:x="831" fg:w="2"/><text x="8.5550%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="8.3250%" y="293" width="0.0200%" height="15" fill="rgb(217,163,10)" fg:x="833" fg:w="2"/><text x="8.5750%" y="303.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::unordered_receiver::Receiver&lt;S,C,M&gt; as core::future::future::Future&gt;::poll (10 samples, 0.10%)</title><rect x="8.2550%" y="309" width="0.0999%" height="15" fill="rgb(213,25,53)" fg:x="826" fg:w="10"/><text x="8.5050%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (2 samples, 0.02%)</title><rect x="8.3550%" y="309" width="0.0200%" height="15" fill="rgb(252,105,26)" fg:x="836" fg:w="2"/><text x="8.6050%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="8.3750%" y="293" width="0.0300%" height="15" fill="rgb(220,39,43)" fg:x="838" fg:w="3"/><text x="8.6250%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (8 samples, 0.08%)</title><rect x="8.4050%" y="293" width="0.0800%" height="15" fill="rgb(229,68,48)" fg:x="841" fg:w="8"/><text x="8.6550%" y="303.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (7 samples, 0.07%)</title><rect x="8.4150%" y="277" width="0.0700%" height="15" fill="rgb(252,8,32)" fg:x="842" fg:w="7"/><text x="8.6650%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (10 samples, 0.10%)</title><rect x="8.4849%" y="293" width="0.0999%" height="15" fill="rgb(223,20,43)" fg:x="849" fg:w="10"/><text x="8.7349%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (5 samples, 0.05%)</title><rect x="8.6348%" y="277" width="0.0500%" height="15" fill="rgb(229,81,49)" fg:x="864" fg:w="5"/><text x="8.8848%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (32 samples, 0.32%)</title><rect x="8.3750%" y="309" width="0.3198%" height="15" fill="rgb(236,28,36)" fg:x="838" fg:w="32"/><text x="8.6250%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_enter (11 samples, 0.11%)</title><rect x="8.5848%" y="293" width="0.1099%" height="15" fill="rgb(249,185,26)" fg:x="859" fg:w="11"/><text x="8.8348%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="8.6948%" y="293" width="0.0600%" height="15" fill="rgb(249,174,33)" fg:x="870" fg:w="6"/><text x="8.9448%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.08%)</title><rect x="8.8247%" y="261" width="0.0800%" height="15" fill="rgb(233,201,37)" fg:x="883" fg:w="8"/><text x="9.0747%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="8.9047%" y="245" width="0.0200%" height="15" fill="rgb(221,78,26)" fg:x="891" fg:w="2"/><text x="9.1547%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="8.9346%" y="229" width="0.0600%" height="15" fill="rgb(250,127,30)" fg:x="894" fg:w="6"/><text x="9.1846%" y="239.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (10 samples, 0.10%)</title><rect x="9.0046%" y="229" width="0.0999%" height="15" fill="rgb(230,49,44)" fg:x="901" fg:w="10"/><text x="9.2546%" y="239.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (3 samples, 0.03%)</title><rect x="9.0746%" y="213" width="0.0300%" height="15" fill="rgb(229,67,23)" fg:x="908" fg:w="3"/><text x="9.3246%" y="223.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="9.1045%" y="229" width="0.0200%" height="15" fill="rgb(249,83,47)" fg:x="911" fg:w="2"/><text x="9.3545%" y="239.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (23 samples, 0.23%)</title><rect x="8.9047%" y="261" width="0.2299%" height="15" fill="rgb(215,43,3)" fg:x="891" fg:w="23"/><text x="9.1547%" y="271.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (21 samples, 0.21%)</title><rect x="8.9246%" y="245" width="0.2099%" height="15" fill="rgb(238,154,13)" fg:x="893" fg:w="21"/><text x="9.1746%" y="255.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (39 samples, 0.39%)</title><rect x="8.7647%" y="293" width="0.3898%" height="15" fill="rgb(219,56,2)" fg:x="877" fg:w="39"/><text x="9.0147%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (33 samples, 0.33%)</title><rect x="8.8247%" y="277" width="0.3298%" height="15" fill="rgb(233,0,4)" fg:x="883" fg:w="33"/><text x="9.0747%" y="287.50"></text></g><g><title>oprf`tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="9.1345%" y="261" width="0.0200%" height="15" fill="rgb(235,30,7)" fg:x="914" fg:w="2"/><text x="9.3845%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (4 samples, 0.04%)</title><rect x="9.1645%" y="277" width="0.0400%" height="15" fill="rgb(250,79,13)" fg:x="917" fg:w="4"/><text x="9.4145%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (53 samples, 0.53%)</title><rect x="8.6948%" y="309" width="0.5297%" height="15" fill="rgb(211,146,34)" fg:x="870" fg:w="53"/><text x="8.9448%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_exit (6 samples, 0.06%)</title><rect x="9.1645%" y="293" width="0.0600%" height="15" fill="rgb(228,22,38)" fg:x="917" fg:w="6"/><text x="9.4145%" y="303.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (2 samples, 0.02%)</title><rect x="9.2045%" y="277" width="0.0200%" height="15" fill="rgb(235,168,5)" fg:x="921" fg:w="2"/><text x="9.4545%" y="287.50"></text></g><g><title>oprf`_rjem_je_sdallocx_default (2 samples, 0.02%)</title><rect x="9.2345%" y="309" width="0.0200%" height="15" fill="rgb(221,155,16)" fg:x="924" fg:w="2"/><text x="9.4845%" y="319.50"></text></g><g><title>oprf`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (136 samples, 1.36%)</title><rect x="7.9552%" y="325" width="1.3592%" height="15" fill="rgb(215,215,53)" fg:x="796" fg:w="136"/><text x="8.2052%" y="335.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_exit (3 samples, 0.03%)</title><rect x="9.2844%" y="309" width="0.0300%" height="15" fill="rgb(223,4,10)" fg:x="929" fg:w="3"/><text x="9.5344%" y="319.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="9.3244%" y="325" width="0.0200%" height="15" fill="rgb(234,103,6)" fg:x="933" fg:w="2"/><text x="9.5744%" y="335.50"></text></g><g><title>oprf`_rjem_je_sdallocx_default (2 samples, 0.02%)</title><rect x="9.3544%" y="325" width="0.0200%" height="15" fill="rgb(227,97,0)" fg:x="936" fg:w="2"/><text x="9.6044%" y="335.50"></text></g><g><title>oprf`_rjem_malloc (4 samples, 0.04%)</title><rect x="9.3744%" y="325" width="0.0400%" height="15" fill="rgb(234,150,53)" fg:x="938" fg:w="4"/><text x="9.6244%" y="335.50"></text></g><g><title>oprf`_rjem_sdallocx (3 samples, 0.03%)</title><rect x="9.4144%" y="325" width="0.0300%" height="15" fill="rgb(228,201,54)" fg:x="942" fg:w="3"/><text x="9.6644%" y="335.50"></text></g><g><title>oprf`aes::soft::fixslice::aes256_encrypt (3 samples, 0.03%)</title><rect x="9.4443%" y="325" width="0.0300%" height="15" fill="rgb(222,22,37)" fg:x="945" fg:w="3"/><text x="9.6943%" y="335.50"></text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (12 samples, 0.12%)</title><rect x="9.5143%" y="309" width="0.1199%" height="15" fill="rgb(237,53,32)" fg:x="952" fg:w="12"/><text x="9.7643%" y="319.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (69 samples, 0.69%)</title><rect x="9.4743%" y="325" width="0.6896%" height="15" fill="rgb(233,25,53)" fg:x="948" fg:w="69"/><text x="9.7243%" y="335.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (53 samples, 0.53%)</title><rect x="9.6342%" y="309" width="0.5297%" height="15" fill="rgb(210,40,34)" fg:x="964" fg:w="53"/><text x="9.8842%" y="319.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (2 samples, 0.02%)</title><rect x="10.1639%" y="325" width="0.0200%" height="15" fill="rgb(241,220,44)" fg:x="1017" fg:w="2"/><text x="10.4139%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="10.2239%" y="309" width="0.0300%" height="15" fill="rgb(235,28,35)" fg:x="1023" fg:w="3"/><text x="10.4739%" y="319.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics::key::Key&gt; (7 samples, 0.07%)</title><rect x="10.2039%" y="325" width="0.0700%" height="15" fill="rgb(210,56,17)" fg:x="1021" fg:w="7"/><text x="10.4539%" y="335.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="10.2538%" y="309" width="0.0200%" height="15" fill="rgb(224,130,29)" fg:x="1026" fg:w="2"/><text x="10.5038%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.07%)</title><rect x="10.3038%" y="293" width="0.0700%" height="15" fill="rgb(235,212,8)" fg:x="1031" fg:w="7"/><text x="10.5538%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="10.3738%" y="277" width="0.0200%" height="15" fill="rgb(223,33,50)" fg:x="1038" fg:w="2"/><text x="10.6238%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.04%)</title><rect x="10.4237%" y="261" width="0.0400%" height="15" fill="rgb(219,149,13)" fg:x="1043" fg:w="4"/><text x="10.6737%" y="271.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (6 samples, 0.06%)</title><rect x="10.4637%" y="261" width="0.0600%" height="15" fill="rgb(250,156,29)" fg:x="1047" fg:w="6"/><text x="10.7137%" y="271.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="10.5037%" y="245" width="0.0200%" height="15" fill="rgb(216,193,19)" fg:x="1051" fg:w="2"/><text x="10.7537%" y="255.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_close (5 samples, 0.05%)</title><rect x="10.5337%" y="261" width="0.0500%" height="15" fill="rgb(216,135,14)" fg:x="1054" fg:w="5"/><text x="10.7837%" y="271.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (3 samples, 0.03%)</title><rect x="10.5537%" y="245" width="0.0300%" height="15" fill="rgb(241,47,5)" fg:x="1056" fg:w="3"/><text x="10.8037%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (2 samples, 0.02%)</title><rect x="10.5637%" y="229" width="0.0200%" height="15" fill="rgb(233,42,35)" fg:x="1057" fg:w="2"/><text x="10.8137%" y="239.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (20 samples, 0.20%)</title><rect x="10.3938%" y="277" width="0.1999%" height="15" fill="rgb(231,13,6)" fg:x="1040" fg:w="20"/><text x="10.6438%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (24 samples, 0.24%)</title><rect x="10.3738%" y="293" width="0.2399%" height="15" fill="rgb(207,181,40)" fg:x="1038" fg:w="24"/><text x="10.6238%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="10.5936%" y="277" width="0.0200%" height="15" fill="rgb(254,173,49)" fg:x="1060" fg:w="2"/><text x="10.8436%" y="287.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::clear (3 samples, 0.03%)</title><rect x="10.6336%" y="293" width="0.0300%" height="15" fill="rgb(221,1,38)" fg:x="1064" fg:w="3"/><text x="10.8836%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.03%)</title><rect x="10.7336%" y="261" width="0.0300%" height="15" fill="rgb(206,124,46)" fg:x="1074" fg:w="3"/><text x="10.9836%" y="271.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="10.8235%" y="245" width="0.0200%" height="15" fill="rgb(249,21,11)" fg:x="1083" fg:w="2"/><text x="11.0735%" y="255.50"></text></g><g><title>oprf`_rjem_je_tcache_bin_flush_small (4 samples, 0.04%)</title><rect x="10.8435%" y="229" width="0.0400%" height="15" fill="rgb(222,201,40)" fg:x="1085" fg:w="4"/><text x="11.0935%" y="239.50"></text></g><g><title>oprf`tcache_bin_flush_edatas_lookup (3 samples, 0.03%)</title><rect x="10.8535%" y="213" width="0.0300%" height="15" fill="rgb(235,61,29)" fg:x="1086" fg:w="3"/><text x="11.1035%" y="223.50"></text></g><g><title>oprf`_rjem_je_sdallocx_default (5 samples, 0.05%)</title><rect x="10.8435%" y="245" width="0.0500%" height="15" fill="rgb(219,207,3)" fg:x="1085" fg:w="5"/><text x="11.0935%" y="255.50"></text></g><g><title>oprf`_rjem_sdallocx (5 samples, 0.05%)</title><rect x="10.8935%" y="245" width="0.0500%" height="15" fill="rgb(222,56,46)" fg:x="1090" fg:w="5"/><text x="11.1435%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="10.9534%" y="213" width="0.0400%" height="15" fill="rgb(239,76,54)" fg:x="1096" fg:w="4"/><text x="11.2034%" y="223.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (29 samples, 0.29%)</title><rect x="10.7336%" y="277" width="0.2898%" height="15" fill="rgb(231,124,27)" fg:x="1074" fg:w="29"/><text x="10.9836%" y="287.50"></text></g><g><title>oprf`hashbrown::raw::RawTable&lt;T,A&gt;::clear (24 samples, 0.24%)</title><rect x="10.7835%" y="261" width="0.2399%" height="15" fill="rgb(249,195,6)" fg:x="1079" fg:w="24"/><text x="11.0335%" y="271.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_tracing_context::tracing_integration::Labels&gt; (8 samples, 0.08%)</title><rect x="10.9434%" y="245" width="0.0800%" height="15" fill="rgb(237,174,47)" fg:x="1095" fg:w="8"/><text x="11.1934%" y="255.50"></text></g><g><title>oprf`core::ops::function::Fn::call (7 samples, 0.07%)</title><rect x="10.9534%" y="229" width="0.0700%" height="15" fill="rgb(206,201,31)" fg:x="1096" fg:w="7"/><text x="11.2034%" y="239.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (37 samples, 0.37%)</title><rect x="10.6636%" y="293" width="0.3698%" height="15" fill="rgb(231,57,52)" fg:x="1067" fg:w="37"/><text x="10.9136%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (75 samples, 0.75%)</title><rect x="10.3038%" y="309" width="0.7496%" height="15" fill="rgb(248,177,22)" fg:x="1031" fg:w="75"/><text x="10.5538%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="11.0334%" y="293" width="0.0200%" height="15" fill="rgb(215,211,37)" fg:x="1104" fg:w="2"/><text x="11.2834%" y="303.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (78 samples, 0.78%)</title><rect x="10.2838%" y="325" width="0.7795%" height="15" fill="rgb(241,128,51)" fg:x="1029" fg:w="78"/><text x="10.5338%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="11.1533%" y="309" width="0.0300%" height="15" fill="rgb(227,165,31)" fg:x="1116" fg:w="3"/><text x="11.4033%" y="319.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (23 samples, 0.23%)</title><rect x="11.1833%" y="309" width="0.2299%" height="15" fill="rgb(228,167,24)" fg:x="1119" fg:w="23"/><text x="11.4333%" y="319.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="11.4331%" y="293" width="0.0200%" height="15" fill="rgb(228,143,12)" fg:x="1144" fg:w="2"/><text x="11.6831%" y="303.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (3 samples, 0.03%)</title><rect x="11.4631%" y="277" width="0.0300%" height="15" fill="rgb(249,149,8)" fg:x="1147" fg:w="3"/><text x="11.7131%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="11.5731%" y="245" width="0.0400%" height="15" fill="rgb(243,35,44)" fg:x="1158" fg:w="4"/><text x="11.8231%" y="255.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (15 samples, 0.15%)</title><rect x="11.5131%" y="261" width="0.1499%" height="15" fill="rgb(246,89,9)" fg:x="1152" fg:w="15"/><text x="11.7631%" y="271.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="11.6330%" y="245" width="0.0300%" height="15" fill="rgb(233,213,13)" fg:x="1164" fg:w="3"/><text x="11.8830%" y="255.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (18 samples, 0.18%)</title><rect x="11.4931%" y="277" width="0.1799%" height="15" fill="rgb(233,141,41)" fg:x="1150" fg:w="18"/><text x="11.7431%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.03%)</title><rect x="11.6830%" y="261" width="0.0300%" height="15" fill="rgb(239,167,4)" fg:x="1169" fg:w="3"/><text x="11.9330%" y="271.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="11.7130%" y="261" width="0.0400%" height="15" fill="rgb(209,217,16)" fg:x="1172" fg:w="4"/><text x="11.9630%" y="271.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.18%)</title><rect x="11.7729%" y="245" width="0.1799%" height="15" fill="rgb(219,88,35)" fg:x="1178" fg:w="18"/><text x="12.0229%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.08%)</title><rect x="11.9828%" y="229" width="0.0800%" height="15" fill="rgb(220,193,23)" fg:x="1199" fg:w="8"/><text x="12.2328%" y="239.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="12.0628%" y="229" width="0.0200%" height="15" fill="rgb(230,90,52)" fg:x="1207" fg:w="2"/><text x="12.3128%" y="239.50"></text></g><g><title>oprf`_rjem_sdallocx (3 samples, 0.03%)</title><rect x="12.0927%" y="229" width="0.0300%" height="15" fill="rgb(252,106,19)" fg:x="1210" fg:w="3"/><text x="12.3427%" y="239.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (22 samples, 0.22%)</title><rect x="11.9528%" y="245" width="0.2199%" height="15" fill="rgb(206,74,20)" fg:x="1196" fg:w="22"/><text x="12.2028%" y="255.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (5 samples, 0.05%)</title><rect x="12.1227%" y="229" width="0.0500%" height="15" fill="rgb(230,138,44)" fg:x="1213" fg:w="5"/><text x="12.3727%" y="239.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="12.1527%" y="213" width="0.0200%" height="15" fill="rgb(235,182,43)" fg:x="1216" fg:w="2"/><text x="12.4027%" y="223.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (74 samples, 0.74%)</title><rect x="11.4531%" y="293" width="0.7396%" height="15" fill="rgb(242,16,51)" fg:x="1146" fg:w="74"/><text x="11.7031%" y="303.50"></text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (52 samples, 0.52%)</title><rect x="11.6730%" y="277" width="0.5197%" height="15" fill="rgb(248,9,4)" fg:x="1168" fg:w="52"/><text x="11.9230%" y="287.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (44 samples, 0.44%)</title><rect x="11.7529%" y="261" width="0.4397%" height="15" fill="rgb(210,31,22)" fg:x="1176" fg:w="44"/><text x="12.0029%" y="271.50"></text></g><g><title>oprf`metrics::key::key_hasher_impl (2 samples, 0.02%)</title><rect x="12.1727%" y="245" width="0.0200%" height="15" fill="rgb(239,54,39)" fg:x="1218" fg:w="2"/><text x="12.4227%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="12.2127%" y="277" width="0.0400%" height="15" fill="rgb(230,99,41)" fg:x="1222" fg:w="4"/><text x="12.4627%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (2 samples, 0.02%)</title><rect x="12.2526%" y="277" width="0.0200%" height="15" fill="rgb(253,106,12)" fg:x="1226" fg:w="2"/><text x="12.5026%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.06%)</title><rect x="12.3126%" y="261" width="0.0600%" height="15" fill="rgb(213,46,41)" fg:x="1232" fg:w="6"/><text x="12.5626%" y="271.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (9 samples, 0.09%)</title><rect x="12.2926%" y="277" width="0.0899%" height="15" fill="rgb(215,133,35)" fg:x="1230" fg:w="9"/><text x="12.5426%" y="287.50"></text></g><g><title>oprf`metrics::key::Key::get_hash (2 samples, 0.02%)</title><rect x="12.3826%" y="277" width="0.0200%" height="15" fill="rgb(213,28,5)" fg:x="1239" fg:w="2"/><text x="12.6326%" y="287.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (22 samples, 0.22%)</title><rect x="12.2027%" y="293" width="0.2199%" height="15" fill="rgb(215,77,49)" fg:x="1221" fg:w="22"/><text x="12.4527%" y="303.50"></text></g><g><title>oprf`std::sys::unix::locks::pthread_rwlock::RwLock::read (2 samples, 0.02%)</title><rect x="12.4026%" y="277" width="0.0200%" height="15" fill="rgb(248,100,22)" fg:x="1241" fg:w="2"/><text x="12.6526%" y="287.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (103 samples, 1.03%)</title><rect x="11.4132%" y="309" width="1.0294%" height="15" fill="rgb(208,67,9)" fg:x="1142" fg:w="103"/><text x="11.6632%" y="319.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="12.4425%" y="309" width="0.0200%" height="15" fill="rgb(219,133,21)" fg:x="1245" fg:w="2"/><text x="12.6925%" y="319.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="12.4625%" y="309" width="0.0300%" height="15" fill="rgb(246,46,29)" fg:x="1247" fg:w="3"/><text x="12.7125%" y="319.50"></text></g><g><title>oprf`aes::soft::fixslice::aes256_encrypt (187 samples, 1.87%)</title><rect x="12.5025%" y="309" width="1.8689%" height="15" fill="rgb(246,185,52)" fg:x="1251" fg:w="187"/><text x="12.7525%" y="319.50">o..</text></g><g><title>oprf`aes::soft::fixslice::bitslice (9 samples, 0.09%)</title><rect x="14.3714%" y="309" width="0.0899%" height="15" fill="rgb(252,136,11)" fg:x="1438" fg:w="9"/><text x="14.6214%" y="319.50"></text></g><g><title>oprf`aes::soft::fixslice::sub_bytes (151 samples, 1.51%)</title><rect x="14.4613%" y="309" width="1.5091%" height="15" fill="rgb(219,138,53)" fg:x="1447" fg:w="151"/><text x="14.7113%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="15.9804%" y="293" width="0.0200%" height="15" fill="rgb(211,51,23)" fg:x="1599" fg:w="2"/><text x="16.2304%" y="303.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics::key::Key&gt; (4 samples, 0.04%)</title><rect x="15.9704%" y="309" width="0.0400%" height="15" fill="rgb(247,221,28)" fg:x="1598" fg:w="4"/><text x="16.2204%" y="319.50"></text></g><g><title>oprf`ipa::protocol::prss::crypto::SharedRandomness::generate_fields (494 samples, 4.94%)</title><rect x="11.0933%" y="325" width="4.9370%" height="15" fill="rgb(251,222,45)" fg:x="1110" fg:w="494"/><text x="11.3433%" y="335.50">oprf`i..</text></g><g><title>oprf`metrics::key::Key::builder (6 samples, 0.06%)</title><rect x="16.0404%" y="325" width="0.0600%" height="15" fill="rgb(217,162,53)" fg:x="1605" fg:w="6"/><text x="16.2904%" y="335.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (2 samples, 0.02%)</title><rect x="16.1003%" y="325" width="0.0200%" height="15" fill="rgb(229,93,14)" fg:x="1611" fg:w="2"/><text x="16.3503%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.07%)</title><rect x="16.4501%" y="277" width="0.0700%" height="15" fill="rgb(209,67,49)" fg:x="1646" fg:w="7"/><text x="16.7001%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (5 samples, 0.05%)</title><rect x="16.5201%" y="277" width="0.0500%" height="15" fill="rgb(213,87,29)" fg:x="1653" fg:w="5"/><text x="16.7701%" y="287.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="16.5701%" y="277" width="0.0200%" height="15" fill="rgb(205,151,52)" fg:x="1658" fg:w="2"/><text x="16.8201%" y="287.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as tracing_core::field::Visit&gt;::record_debug (2 samples, 0.02%)</title><rect x="16.5900%" y="277" width="0.0200%" height="15" fill="rgb(253,215,39)" fg:x="1660" fg:w="2"/><text x="16.8400%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (4 samples, 0.04%)</title><rect x="16.6700%" y="261" width="0.0400%" height="15" fill="rgb(221,220,41)" fg:x="1668" fg:w="4"/><text x="16.9200%" y="271.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as core::default::Default&gt;::default (156 samples, 1.56%)</title><rect x="16.7100%" y="261" width="1.5591%" height="15" fill="rgb(218,133,21)" fg:x="1672" fg:w="156"/><text x="16.9600%" y="271.50"></text></g><g><title>oprf`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="18.3590%" y="229" width="0.0200%" height="15" fill="rgb(221,193,43)" fg:x="1837" fg:w="2"/><text x="18.6090%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="18.4189%" y="213" width="0.0200%" height="15" fill="rgb(240,128,52)" fg:x="1843" fg:w="2"/><text x="18.6689%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="18.4889%" y="165" width="0.0200%" height="15" fill="rgb(253,114,12)" fg:x="1850" fg:w="2"/><text x="18.7389%" y="175.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as tracing_core::field::Visit&gt;::record_debug (27 samples, 0.27%)</title><rect x="18.2690%" y="261" width="0.2698%" height="15" fill="rgb(215,223,47)" fg:x="1828" fg:w="27"/><text x="18.5190%" y="271.50"></text></g><g><title>oprf`alloc::fmt::format::format_inner (25 samples, 0.25%)</title><rect x="18.2890%" y="245" width="0.2499%" height="15" fill="rgb(248,225,23)" fg:x="1830" fg:w="25"/><text x="18.5390%" y="255.50"></text></g><g><title>oprf`core::fmt::write (15 samples, 0.15%)</title><rect x="18.3890%" y="229" width="0.1499%" height="15" fill="rgb(250,108,0)" fg:x="1840" fg:w="15"/><text x="18.6390%" y="239.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.10%)</title><rect x="18.4389%" y="213" width="0.0999%" height="15" fill="rgb(228,208,7)" fg:x="1845" fg:w="10"/><text x="18.6889%" y="223.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.08%)</title><rect x="18.4589%" y="197" width="0.0800%" height="15" fill="rgb(244,45,10)" fg:x="1847" fg:w="8"/><text x="18.7089%" y="207.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (7 samples, 0.07%)</title><rect x="18.4689%" y="181" width="0.0700%" height="15" fill="rgb(207,125,25)" fg:x="1848" fg:w="7"/><text x="18.7189%" y="191.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="18.5089%" y="165" width="0.0300%" height="15" fill="rgb(210,195,18)" fg:x="1852" fg:w="3"/><text x="18.7589%" y="175.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (2 samples, 0.02%)</title><rect x="18.5389%" y="261" width="0.0200%" height="15" fill="rgb(249,80,12)" fg:x="1855" fg:w="2"/><text x="18.7889%" y="271.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (202 samples, 2.02%)</title><rect x="16.6100%" y="277" width="2.0188%" height="15" fill="rgb(221,65,9)" fg:x="1662" fg:w="202"/><text x="16.8600%" y="287.50">o..</text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (5 samples, 0.05%)</title><rect x="18.5789%" y="261" width="0.0500%" height="15" fill="rgb(235,49,36)" fg:x="1859" fg:w="5"/><text x="18.8289%" y="271.50"></text></g><g><title>oprf`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="18.6088%" y="245" width="0.0200%" height="15" fill="rgb(225,32,20)" fg:x="1862" fg:w="2"/><text x="18.8588%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (2 samples, 0.02%)</title><rect x="18.6688%" y="261" width="0.0200%" height="15" fill="rgb(215,141,46)" fg:x="1868" fg:w="2"/><text x="18.9188%" y="271.50"></text></g><g><title>oprf`&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (2 samples, 0.02%)</title><rect x="18.6888%" y="261" width="0.0200%" height="15" fill="rgb(250,160,47)" fg:x="1870" fg:w="2"/><text x="18.9388%" y="271.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (5 samples, 0.05%)</title><rect x="18.7088%" y="261" width="0.0500%" height="15" fill="rgb(216,222,40)" fg:x="1872" fg:w="5"/><text x="18.9588%" y="271.50"></text></g><g><title>oprf`std::sys_common::lazy_box::LazyBox&lt;T&gt;::initialize (3 samples, 0.03%)</title><rect x="18.7288%" y="245" width="0.0300%" height="15" fill="rgb(234,217,39)" fg:x="1874" fg:w="3"/><text x="18.9788%" y="255.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="18.7787%" y="261" width="0.0200%" height="15" fill="rgb(207,178,40)" fg:x="1879" fg:w="2"/><text x="19.0287%" y="271.50"></text></g><g><title>oprf`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="18.9286%" y="213" width="0.0200%" height="15" fill="rgb(221,136,13)" fg:x="1894" fg:w="2"/><text x="19.1786%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="19.0086%" y="197" width="0.0200%" height="15" fill="rgb(249,199,10)" fg:x="1902" fg:w="2"/><text x="19.2586%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="19.0885%" y="181" width="0.0300%" height="15" fill="rgb(249,222,13)" fg:x="1910" fg:w="3"/><text x="19.3385%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="19.1685%" y="133" width="0.0300%" height="15" fill="rgb(244,185,38)" fg:x="1918" fg:w="3"/><text x="19.4185%" y="143.50"></text></g><g><title>oprf`_rjem_realloc (2 samples, 0.02%)</title><rect x="19.2085%" y="133" width="0.0200%" height="15" fill="rgb(236,202,9)" fg:x="1922" fg:w="2"/><text x="19.4585%" y="143.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (4 samples, 0.04%)</title><rect x="19.3284%" y="101" width="0.0400%" height="15" fill="rgb(250,229,37)" fg:x="1934" fg:w="4"/><text x="19.5784%" y="111.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (11 samples, 0.11%)</title><rect x="19.2784%" y="117" width="0.1099%" height="15" fill="rgb(206,174,23)" fg:x="1929" fg:w="11"/><text x="19.5284%" y="127.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (25 samples, 0.25%)</title><rect x="19.1585%" y="149" width="0.2499%" height="15" fill="rgb(211,33,43)" fg:x="1917" fg:w="25"/><text x="19.4085%" y="159.50"></text></g><g><title>oprf`do_rallocx (18 samples, 0.18%)</title><rect x="19.2285%" y="133" width="0.1799%" height="15" fill="rgb(245,58,50)" fg:x="1924" fg:w="18"/><text x="19.4785%" y="143.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.28%)</title><rect x="19.1585%" y="165" width="0.2798%" height="15" fill="rgb(244,68,36)" fg:x="1917" fg:w="28"/><text x="19.4085%" y="175.50"></text></g><g><title>oprf`do_rallocx (3 samples, 0.03%)</title><rect x="19.4084%" y="149" width="0.0300%" height="15" fill="rgb(232,229,15)" fg:x="1942" fg:w="3"/><text x="19.6584%" y="159.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (34 samples, 0.34%)</title><rect x="19.1185%" y="181" width="0.3398%" height="15" fill="rgb(254,30,23)" fg:x="1913" fg:w="34"/><text x="19.3685%" y="191.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="19.4383%" y="165" width="0.0200%" height="15" fill="rgb(235,160,14)" fg:x="1945" fg:w="2"/><text x="19.6883%" y="175.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="19.4583%" y="181" width="0.0300%" height="15" fill="rgb(212,155,44)" fg:x="1947" fg:w="3"/><text x="19.7083%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="19.7581%" y="133" width="0.0400%" height="15" fill="rgb(226,2,50)" fg:x="1977" fg:w="4"/><text x="20.0081%" y="143.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="19.7981%" y="133" width="0.0200%" height="15" fill="rgb(234,177,6)" fg:x="1981" fg:w="2"/><text x="20.0481%" y="143.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (18 samples, 0.18%)</title><rect x="19.6682%" y="165" width="0.1799%" height="15" fill="rgb(217,24,9)" fg:x="1968" fg:w="18"/><text x="19.9182%" y="175.50"></text></g><g><title>oprf`core::fmt::write (16 samples, 0.16%)</title><rect x="19.6882%" y="149" width="0.1599%" height="15" fill="rgb(220,13,46)" fg:x="1970" fg:w="16"/><text x="19.9382%" y="159.50"></text></g><g><title>oprf`core::fmt::Formatter::pad (2 samples, 0.02%)</title><rect x="19.8281%" y="133" width="0.0200%" height="15" fill="rgb(239,221,27)" fg:x="1984" fg:w="2"/><text x="20.0781%" y="143.50"></text></g><g><title>oprf`core::fmt::Formatter::write_fmt (5 samples, 0.05%)</title><rect x="19.8481%" y="165" width="0.0500%" height="15" fill="rgb(222,198,25)" fg:x="1986" fg:w="5"/><text x="20.0981%" y="175.50"></text></g><g><title>oprf`core::fmt::write (5 samples, 0.05%)</title><rect x="19.8981%" y="165" width="0.0500%" height="15" fill="rgb(211,99,13)" fg:x="1991" fg:w="5"/><text x="20.1481%" y="175.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_char (2 samples, 0.02%)</title><rect x="20.1279%" y="149" width="0.0200%" height="15" fill="rgb(232,111,31)" fg:x="2014" fg:w="2"/><text x="20.3779%" y="159.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="20.1479%" y="149" width="0.0200%" height="15" fill="rgb(245,82,37)" fg:x="2016" fg:w="2"/><text x="20.3979%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.07%)</title><rect x="20.3278%" y="133" width="0.0700%" height="15" fill="rgb(227,149,46)" fg:x="2034" fg:w="7"/><text x="20.5778%" y="143.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_char (2 samples, 0.02%)</title><rect x="20.3978%" y="133" width="0.0200%" height="15" fill="rgb(218,36,50)" fg:x="2041" fg:w="2"/><text x="20.6478%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="20.5777%" y="85" width="0.0300%" height="15" fill="rgb(226,80,48)" fg:x="2059" fg:w="3"/><text x="20.8277%" y="95.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (7 samples, 0.07%)</title><rect x="20.7076%" y="53" width="0.0700%" height="15" fill="rgb(238,224,15)" fg:x="2072" fg:w="7"/><text x="20.9576%" y="63.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (13 samples, 0.13%)</title><rect x="20.6776%" y="69" width="0.1299%" height="15" fill="rgb(241,136,10)" fg:x="2069" fg:w="13"/><text x="20.9276%" y="79.50"></text></g><g><title>oprf`_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="20.7875%" y="53" width="0.0200%" height="15" fill="rgb(208,32,45)" fg:x="2080" fg:w="2"/><text x="21.0375%" y="63.50"></text></g><g><title>oprf`_rjem_je_arena_cache_bin_fill_small (2 samples, 0.02%)</title><rect x="20.7875%" y="37" width="0.0200%" height="15" fill="rgb(207,135,9)" fg:x="2080" fg:w="2"/><text x="21.0375%" y="47.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (25 samples, 0.25%)</title><rect x="20.5777%" y="101" width="0.2499%" height="15" fill="rgb(206,86,44)" fg:x="2059" fg:w="25"/><text x="20.8277%" y="111.50"></text></g><g><title>oprf`do_rallocx (19 samples, 0.19%)</title><rect x="20.6376%" y="85" width="0.1899%" height="15" fill="rgb(245,177,15)" fg:x="2065" fg:w="19"/><text x="20.8876%" y="95.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.34%)</title><rect x="20.4977%" y="117" width="0.3398%" height="15" fill="rgb(206,64,50)" fg:x="2051" fg:w="34"/><text x="20.7477%" y="127.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (43 samples, 0.43%)</title><rect x="20.4177%" y="133" width="0.4297%" height="15" fill="rgb(234,36,40)" fg:x="2043" fg:w="43"/><text x="20.6677%" y="143.50"></text></g><g><title>oprf`core::fmt::write (138 samples, 1.38%)</title><rect x="19.4883%" y="181" width="1.3792%" height="15" fill="rgb(213,64,8)" fg:x="1950" fg:w="138"/><text x="19.7383%" y="191.50"></text></g><g><title>oprf`nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (92 samples, 0.92%)</title><rect x="19.9480%" y="165" width="0.9194%" height="15" fill="rgb(210,75,36)" fg:x="1996" fg:w="92"/><text x="20.1980%" y="175.50"></text></g><g><title>oprf`core::fmt::write (69 samples, 0.69%)</title><rect x="20.1779%" y="149" width="0.6896%" height="15" fill="rgb(229,88,21)" fg:x="2019" fg:w="69"/><text x="20.4279%" y="159.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="20.8475%" y="133" width="0.0200%" height="15" fill="rgb(252,204,47)" fg:x="2086" fg:w="2"/><text x="21.0975%" y="143.50"></text></g><g><title>oprf`&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (188 samples, 1.88%)</title><rect x="19.0286%" y="197" width="1.8789%" height="15" fill="rgb(208,77,27)" fg:x="1904" fg:w="188"/><text x="19.2786%" y="207.50">o..</text></g><g><title>oprf`nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (4 samples, 0.04%)</title><rect x="20.8675%" y="181" width="0.0400%" height="15" fill="rgb(221,76,26)" fg:x="2088" fg:w="4"/><text x="21.1175%" y="191.50"></text></g><g><title>oprf`tracing_core::field::ValueSet::record (216 samples, 2.16%)</title><rect x="18.7987%" y="261" width="2.1587%" height="15" fill="rgb(225,139,18)" fg:x="1881" fg:w="216"/><text x="19.0487%" y="271.50">o..</text></g><g><title>oprf`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (213 samples, 2.13%)</title><rect x="18.8287%" y="245" width="2.1287%" height="15" fill="rgb(230,137,11)" fg:x="1884" fg:w="213"/><text x="19.0787%" y="255.50">o..</text></g><g><title>oprf`core::fmt::Write::write_fmt (204 samples, 2.04%)</title><rect x="18.9186%" y="229" width="2.0388%" height="15" fill="rgb(212,28,1)" fg:x="1893" fg:w="204"/><text x="19.1686%" y="239.50">o..</text></g><g><title>oprf`core::fmt::write (200 samples, 2.00%)</title><rect x="18.9586%" y="213" width="1.9988%" height="15" fill="rgb(248,164,17)" fg:x="1897" fg:w="200"/><text x="19.2086%" y="223.50">o..</text></g><g><title>oprf`core::fmt::write (5 samples, 0.05%)</title><rect x="20.9075%" y="197" width="0.0500%" height="15" fill="rgb(222,171,42)" fg:x="2092" fg:w="5"/><text x="21.1575%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="20.9574%" y="245" width="0.0200%" height="15" fill="rgb(243,84,45)" fg:x="2097" fg:w="2"/><text x="21.2074%" y="255.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="20.9874%" y="245" width="0.0300%" height="15" fill="rgb(252,49,23)" fg:x="2100" fg:w="3"/><text x="21.2374%" y="255.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (241 samples, 2.41%)</title><rect x="18.6288%" y="277" width="2.4086%" height="15" fill="rgb(215,19,7)" fg:x="1864" fg:w="241"/><text x="18.8788%" y="287.50">op..</text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (8 samples, 0.08%)</title><rect x="20.9574%" y="261" width="0.0800%" height="15" fill="rgb(238,81,41)" fg:x="2097" fg:w="8"/><text x="21.2074%" y="271.50"></text></g><g><title>oprf`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="21.0174%" y="245" width="0.0200%" height="15" fill="rgb(210,199,37)" fg:x="2103" fg:w="2"/><text x="21.2674%" y="255.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (5 samples, 0.05%)</title><rect x="21.0374%" y="277" width="0.0500%" height="15" fill="rgb(244,192,49)" fg:x="2105" fg:w="5"/><text x="21.2874%" y="287.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="21.0873%" y="277" width="0.0200%" height="15" fill="rgb(226,211,11)" fg:x="2110" fg:w="2"/><text x="21.3373%" y="287.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::create_with (15 samples, 0.15%)</title><rect x="21.1073%" y="277" width="0.1499%" height="15" fill="rgb(236,162,54)" fg:x="2112" fg:w="15"/><text x="21.3573%" y="287.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (5 samples, 0.05%)</title><rect x="21.2073%" y="261" width="0.0500%" height="15" fill="rgb(220,229,9)" fg:x="2122" fg:w="5"/><text x="21.4573%" y="271.50"></text></g><g><title>oprf`sharded_slab::page::Shared&lt;T,C&gt;::allocate (2 samples, 0.02%)</title><rect x="21.2373%" y="245" width="0.0200%" height="15" fill="rgb(250,87,22)" fg:x="2125" fg:w="2"/><text x="21.4873%" y="255.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (6 samples, 0.06%)</title><rect x="21.2572%" y="277" width="0.0600%" height="15" fill="rgb(239,43,17)" fg:x="2127" fg:w="6"/><text x="21.5072%" y="287.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_new_span (5 samples, 0.05%)</title><rect x="21.3172%" y="277" width="0.0500%" height="15" fill="rgb(231,177,25)" fg:x="2133" fg:w="5"/><text x="21.5672%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (506 samples, 5.06%)</title><rect x="16.3302%" y="293" width="5.0570%" height="15" fill="rgb(219,179,1)" fg:x="1634" fg:w="506"/><text x="16.5802%" y="303.50">oprf`&lt;..</text></g><g><title>oprf`&lt;ipa::secret_sharing::replicated::semi_honest::additive_share::AdditiveShare&lt;F&gt; as ipa::protocol::basics::mul::SecureMul&lt;C&gt;&gt;::multiply_sparse::_{{closure}} (1,790 samples, 17.89%)</title><rect x="3.5179%" y="341" width="17.8893%" height="15" fill="rgb(238,219,53)" fg:x="352" fg:w="1790"/><text x="3.7679%" y="351.50">oprf`&lt;ipa::secret_sharing::r..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (529 samples, 5.29%)</title><rect x="16.1203%" y="325" width="5.2868%" height="15" fill="rgb(232,167,36)" fg:x="1613" fg:w="529"/><text x="16.3703%" y="335.50">oprf`t..</text></g><g><title>oprf`tracing::span::Span::make_with (516 samples, 5.16%)</title><rect x="16.2502%" y="309" width="5.1569%" height="15" fill="rgb(244,19,51)" fg:x="1626" fg:w="516"/><text x="16.5002%" y="319.50">oprf`t..</text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_new_span (2 samples, 0.02%)</title><rect x="21.3872%" y="293" width="0.0200%" height="15" fill="rgb(224,6,22)" fg:x="2140" fg:w="2"/><text x="21.6372%" y="303.50"></text></g><g><title>oprf`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="21.4072%" y="341" width="0.0200%" height="15" fill="rgb(224,145,5)" fg:x="2142" fg:w="2"/><text x="21.6572%" y="351.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="21.4371%" y="341" width="0.0300%" height="15" fill="rgb(234,130,49)" fg:x="2145" fg:w="3"/><text x="21.6871%" y="351.50"></text></g><g><title>oprf`&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,900 samples, 18.99%)</title><rect x="2.5185%" y="389" width="18.9886%" height="15" fill="rgb(254,6,2)" fg:x="252" fg:w="1900"/><text x="2.7685%" y="399.50">oprf`&lt;futures_util::future::tr..</text></g><g><title>oprf`ipa::protocol::basics::if_else::if_else::_{{closure}} (1,898 samples, 18.97%)</title><rect x="2.5385%" y="373" width="18.9686%" height="15" fill="rgb(208,96,46)" fg:x="254" fg:w="1898"/><text x="2.7885%" y="383.50">oprf`ipa::protocol::basics::if..</text></g><g><title>oprf`ipa::protocol::basics::mul::SecureMul::multiply::_{{closure}} (1,811 samples, 18.10%)</title><rect x="3.4080%" y="357" width="18.0991%" height="15" fill="rgb(239,3,39)" fg:x="341" fg:w="1811"/><text x="3.6580%" y="367.50">oprf`ipa::protocol::basics::..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="21.4871%" y="341" width="0.0200%" height="15" fill="rgb(233,210,1)" fg:x="2150" fg:w="2"/><text x="21.7371%" y="351.50"></text></g><g><title>oprf`&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (1,905 samples, 19.04%)</title><rect x="2.4785%" y="405" width="19.0386%" height="15" fill="rgb(244,137,37)" fg:x="248" fg:w="1905"/><text x="2.7285%" y="415.50">oprf`&lt;futures_util::future::tr..</text></g><g><title>oprf`&lt;ipa::protocol::step::descriptive::Descriptive as ipa::protocol::step::StepNarrow&lt;S&gt;&gt;::narrow (12 samples, 0.12%)</title><rect x="21.5171%" y="405" width="0.1199%" height="15" fill="rgb(240,136,2)" fg:x="2153" fg:w="12"/><text x="21.7671%" y="415.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.07%)</title><rect x="21.5671%" y="389" width="0.0700%" height="15" fill="rgb(239,18,37)" fg:x="2158" fg:w="7"/><text x="21.8171%" y="399.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="21.5970%" y="373" width="0.0400%" height="15" fill="rgb(218,185,22)" fg:x="2161" fg:w="4"/><text x="21.8470%" y="383.50"></text></g><g><title>oprf`do_rallocx (2 samples, 0.02%)</title><rect x="21.6170%" y="357" width="0.0200%" height="15" fill="rgb(225,218,4)" fg:x="2163" fg:w="2"/><text x="21.8670%" y="367.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (2 samples, 0.02%)</title><rect x="21.6170%" y="341" width="0.0200%" height="15" fill="rgb(230,182,32)" fg:x="2163" fg:w="2"/><text x="21.8670%" y="351.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (2 samples, 0.02%)</title><rect x="21.6170%" y="325" width="0.0200%" height="15" fill="rgb(242,56,43)" fg:x="2163" fg:w="2"/><text x="21.8670%" y="335.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="21.6470%" y="405" width="0.0200%" height="15" fill="rgb(233,99,24)" fg:x="2166" fg:w="2"/><text x="21.8970%" y="415.50"></text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (14 samples, 0.14%)</title><rect x="21.7270%" y="389" width="0.1399%" height="15" fill="rgb(234,209,42)" fg:x="2174" fg:w="14"/><text x="21.9770%" y="399.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (94 samples, 0.94%)</title><rect x="21.6770%" y="405" width="0.9394%" height="15" fill="rgb(227,7,12)" fg:x="2169" fg:w="94"/><text x="21.9270%" y="415.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (75 samples, 0.75%)</title><rect x="21.8669%" y="389" width="0.7496%" height="15" fill="rgb(245,203,43)" fg:x="2188" fg:w="75"/><text x="22.1169%" y="399.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (4 samples, 0.04%)</title><rect x="22.6164%" y="405" width="0.0400%" height="15" fill="rgb(238,205,33)" fg:x="2263" fg:w="4"/><text x="22.8664%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="22.6864%" y="389" width="0.0200%" height="15" fill="rgb(231,56,7)" fg:x="2270" fg:w="2"/><text x="22.9364%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.05%)</title><rect x="22.9163%" y="373" width="0.0500%" height="15" fill="rgb(244,186,29)" fg:x="2293" fg:w="5"/><text x="23.1663%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (5 samples, 0.05%)</title><rect x="22.9662%" y="373" width="0.0500%" height="15" fill="rgb(234,111,31)" fg:x="2298" fg:w="5"/><text x="23.2162%" y="383.50"></text></g><g><title>oprf`&lt;ipa::ff::galois_field::bit_array_1::Gf2 as core::ops::arith::Mul&gt;::mul (33 samples, 0.33%)</title><rect x="23.0162%" y="373" width="0.3298%" height="15" fill="rgb(241,149,10)" fg:x="2303" fg:w="33"/><text x="23.2662%" y="383.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="23.3860%" y="341" width="0.0400%" height="15" fill="rgb(249,206,44)" fg:x="2340" fg:w="4"/><text x="23.6360%" y="351.50"></text></g><g><title>oprf`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="23.4359%" y="341" width="0.0200%" height="15" fill="rgb(251,153,30)" fg:x="2345" fg:w="2"/><text x="23.6859%" y="351.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::prss (12 samples, 0.12%)</title><rect x="23.3460%" y="373" width="0.1199%" height="15" fill="rgb(239,152,38)" fg:x="2336" fg:w="12"/><text x="23.5960%" y="383.50"></text></g><g><title>oprf`ipa::protocol::prss::Endpoint::indexed (11 samples, 0.11%)</title><rect x="23.3560%" y="357" width="0.1099%" height="15" fill="rgb(249,139,47)" fg:x="2337" fg:w="11"/><text x="23.6060%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="23.4659%" y="357" width="0.0200%" height="15" fill="rgb(244,64,35)" fg:x="2348" fg:w="2"/><text x="23.7159%" y="367.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="23.4859%" y="357" width="0.0200%" height="15" fill="rgb(216,46,15)" fg:x="2350" fg:w="2"/><text x="23.7359%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="23.5559%" y="325" width="0.0400%" height="15" fill="rgb(250,74,19)" fg:x="2357" fg:w="4"/><text x="23.8059%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="23.5958%" y="325" width="0.0300%" height="15" fill="rgb(249,42,33)" fg:x="2361" fg:w="3"/><text x="23.8458%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="23.6258%" y="325" width="0.0400%" height="15" fill="rgb(242,149,17)" fg:x="2364" fg:w="4"/><text x="23.8758%" y="335.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="23.6858%" y="325" width="0.0200%" height="15" fill="rgb(244,29,21)" fg:x="2370" fg:w="2"/><text x="23.9358%" y="335.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (24 samples, 0.24%)</title><rect x="23.7058%" y="325" width="0.2399%" height="15" fill="rgb(220,130,37)" fg:x="2372" fg:w="24"/><text x="23.9558%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.18%)</title><rect x="23.7657%" y="309" width="0.1799%" height="15" fill="rgb(211,67,2)" fg:x="2378" fg:w="18"/><text x="24.0157%" y="319.50"></text></g><g><title>oprf`ipa::helpers::gateway::receive::GatewayReceivers&lt;T&gt;::get_or_create (43 samples, 0.43%)</title><rect x="23.5459%" y="341" width="0.4297%" height="15" fill="rgb(235,68,52)" fg:x="2356" fg:w="43"/><text x="23.7959%" y="351.50"></text></g><g><title>oprf`hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="23.9456%" y="325" width="0.0300%" height="15" fill="rgb(246,142,3)" fg:x="2396" fg:w="3"/><text x="24.1956%" y="335.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_receiver (48 samples, 0.48%)</title><rect x="23.5059%" y="357" width="0.4797%" height="15" fill="rgb(241,25,7)" fg:x="2352" fg:w="48"/><text x="23.7559%" y="367.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::recv_channel (53 samples, 0.53%)</title><rect x="23.4659%" y="373" width="0.5297%" height="15" fill="rgb(242,119,39)" fg:x="2348" fg:w="53"/><text x="23.7159%" y="383.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="24.0855%" y="325" width="0.0600%" height="15" fill="rgb(241,98,45)" fg:x="2410" fg:w="6"/><text x="24.3355%" y="335.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="24.1455%" y="325" width="0.0200%" height="15" fill="rgb(254,28,30)" fg:x="2416" fg:w="2"/><text x="24.3955%" y="335.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="24.1755%" y="325" width="0.0200%" height="15" fill="rgb(241,142,54)" fg:x="2419" fg:w="2"/><text x="24.4255%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="24.2255%" y="309" width="0.0500%" height="15" fill="rgb(222,85,15)" fg:x="2424" fg:w="5"/><text x="24.4755%" y="319.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (9 samples, 0.09%)</title><rect x="24.1955%" y="325" width="0.0899%" height="15" fill="rgb(210,85,47)" fg:x="2421" fg:w="9"/><text x="24.4455%" y="335.50"></text></g><g><title>oprf`ipa::helpers::gateway::send::GatewaySenders::get_or_create (27 samples, 0.27%)</title><rect x="24.0656%" y="341" width="0.2698%" height="15" fill="rgb(224,206,25)" fg:x="2408" fg:w="27"/><text x="24.3156%" y="351.50"></text></g><g><title>oprf`hashbrown::map::make_hash (5 samples, 0.05%)</title><rect x="24.2854%" y="325" width="0.0500%" height="15" fill="rgb(243,201,19)" fg:x="2430" fg:w="5"/><text x="24.5354%" y="335.50"></text></g><g><title>oprf`ipa::helpers::gateway::transport::RoleResolvingTransport&lt;T&gt;::role (2 samples, 0.02%)</title><rect x="24.3354%" y="341" width="0.0200%" height="15" fill="rgb(236,59,4)" fg:x="2435" fg:w="2"/><text x="24.5854%" y="351.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_sender (33 samples, 0.33%)</title><rect x="24.0356%" y="357" width="0.3298%" height="15" fill="rgb(254,179,45)" fg:x="2405" fg:w="33"/><text x="24.2856%" y="367.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::send_channel (38 samples, 0.38%)</title><rect x="23.9956%" y="373" width="0.3798%" height="15" fill="rgb(226,14,10)" fg:x="2401" fg:w="38"/><text x="24.2456%" y="383.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (23 samples, 0.23%)</title><rect x="24.3754%" y="373" width="0.2299%" height="15" fill="rgb(244,27,41)" fg:x="2439" fg:w="23"/><text x="24.6254%" y="383.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="24.6252%" y="357" width="0.0200%" height="15" fill="rgb(235,35,32)" fg:x="2464" fg:w="2"/><text x="24.8752%" y="367.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (26 samples, 0.26%)</title><rect x="24.6652%" y="341" width="0.2598%" height="15" fill="rgb(218,68,31)" fg:x="2468" fg:w="26"/><text x="24.9152%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="25.0150%" y="309" width="0.0200%" height="15" fill="rgb(207,120,37)" fg:x="2503" fg:w="2"/><text x="25.2650%" y="319.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (14 samples, 0.14%)</title><rect x="24.9250%" y="341" width="0.1399%" height="15" fill="rgb(227,98,0)" fg:x="2494" fg:w="14"/><text x="25.1750%" y="351.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (12 samples, 0.12%)</title><rect x="24.9450%" y="325" width="0.1199%" height="15" fill="rgb(207,7,3)" fg:x="2496" fg:w="12"/><text x="25.1950%" y="335.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="25.0450%" y="309" width="0.0200%" height="15" fill="rgb(206,98,19)" fg:x="2506" fg:w="2"/><text x="25.2950%" y="319.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_mutex_lock (2 samples, 0.02%)</title><rect x="25.0650%" y="341" width="0.0200%" height="15" fill="rgb(217,5,26)" fg:x="2508" fg:w="2"/><text x="25.3150%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.04%)</title><rect x="25.0949%" y="325" width="0.0400%" height="15" fill="rgb(235,190,38)" fg:x="2511" fg:w="4"/><text x="25.3449%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.21%)</title><rect x="25.1649%" y="309" width="0.2099%" height="15" fill="rgb(247,86,24)" fg:x="2518" fg:w="21"/><text x="25.4149%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (15 samples, 0.15%)</title><rect x="25.4647%" y="293" width="0.1499%" height="15" fill="rgb(205,101,16)" fg:x="2548" fg:w="15"/><text x="25.7147%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="25.6146%" y="293" width="0.0200%" height="15" fill="rgb(246,168,33)" fg:x="2563" fg:w="2"/><text x="25.8646%" y="303.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (4 samples, 0.04%)</title><rect x="25.6346%" y="293" width="0.0400%" height="15" fill="rgb(231,114,1)" fg:x="2565" fg:w="4"/><text x="25.8846%" y="303.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="25.6846%" y="293" width="0.0200%" height="15" fill="rgb(207,184,53)" fg:x="2570" fg:w="2"/><text x="25.9346%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (5 samples, 0.05%)</title><rect x="25.7246%" y="277" width="0.0500%" height="15" fill="rgb(224,95,51)" fg:x="2574" fg:w="5"/><text x="25.9746%" y="287.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (41 samples, 0.41%)</title><rect x="25.3748%" y="309" width="0.4098%" height="15" fill="rgb(212,188,45)" fg:x="2539" fg:w="41"/><text x="25.6248%" y="319.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (8 samples, 0.08%)</title><rect x="25.7046%" y="293" width="0.0800%" height="15" fill="rgb(223,154,38)" fg:x="2572" fg:w="8"/><text x="25.9546%" y="303.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (69 samples, 0.69%)</title><rect x="25.1449%" y="325" width="0.6896%" height="15" fill="rgb(251,22,52)" fg:x="2516" fg:w="69"/><text x="25.3949%" y="335.50"></text></g><g><title>oprf`metrics::key::key_hasher_impl (5 samples, 0.05%)</title><rect x="25.7845%" y="309" width="0.0500%" height="15" fill="rgb(229,209,22)" fg:x="2580" fg:w="5"/><text x="26.0345%" y="319.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (120 samples, 1.20%)</title><rect x="24.6452%" y="357" width="1.1993%" height="15" fill="rgb(234,138,34)" fg:x="2466" fg:w="120"/><text x="24.8952%" y="367.50"></text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (76 samples, 0.76%)</title><rect x="25.0849%" y="341" width="0.7595%" height="15" fill="rgb(212,95,11)" fg:x="2510" fg:w="76"/><text x="25.3349%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.07%)</title><rect x="25.8645%" y="341" width="0.0700%" height="15" fill="rgb(240,179,47)" fg:x="2588" fg:w="7"/><text x="26.1145%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (14 samples, 0.14%)</title><rect x="26.0444%" y="325" width="0.1399%" height="15" fill="rgb(240,163,11)" fg:x="2606" fg:w="14"/><text x="26.2944%" y="335.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (3 samples, 0.03%)</title><rect x="26.1843%" y="325" width="0.0300%" height="15" fill="rgb(236,37,12)" fg:x="2620" fg:w="3"/><text x="26.4343%" y="335.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (33 samples, 0.33%)</title><rect x="25.9344%" y="341" width="0.3298%" height="15" fill="rgb(232,164,16)" fg:x="2595" fg:w="33"/><text x="26.1844%" y="351.50"></text></g><g><title>oprf`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.05%)</title><rect x="26.2143%" y="325" width="0.0500%" height="15" fill="rgb(244,205,15)" fg:x="2623" fg:w="5"/><text x="26.4643%" y="335.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (43 samples, 0.43%)</title><rect x="25.8545%" y="357" width="0.4297%" height="15" fill="rgb(223,117,47)" fg:x="2587" fg:w="43"/><text x="26.1045%" y="367.50"></text></g><g><title>oprf`metrics::key::Key::get_hash (2 samples, 0.02%)</title><rect x="26.2642%" y="341" width="0.0200%" height="15" fill="rgb(244,107,35)" fg:x="2628" fg:w="2"/><text x="26.5142%" y="351.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (175 samples, 1.75%)</title><rect x="24.6052%" y="373" width="1.7490%" height="15" fill="rgb(205,140,8)" fg:x="2462" fg:w="175"/><text x="24.8552%" y="383.50"></text></g><g><title>oprf`tracing_core::dispatcher::get_default (6 samples, 0.06%)</title><rect x="26.2942%" y="357" width="0.0600%" height="15" fill="rgb(228,84,46)" fg:x="2631" fg:w="6"/><text x="26.5442%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.04%)</title><rect x="26.4841%" y="325" width="0.0400%" height="15" fill="rgb(254,188,9)" fg:x="2650" fg:w="4"/><text x="26.7341%" y="335.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::ordering_sender::Send&lt;M&gt; as core::future::future::Future&gt;::poll (7 samples, 0.07%)</title><rect x="26.4641%" y="357" width="0.0700%" height="15" fill="rgb(206,112,54)" fg:x="2648" fg:w="7"/><text x="26.7141%" y="367.50"></text></g><g><title>oprf`ipa::helpers::buffers::ordering_sender::Waiting::wake (5 samples, 0.05%)</title><rect x="26.4841%" y="341" width="0.0500%" height="15" fill="rgb(216,84,49)" fg:x="2650" fg:w="5"/><text x="26.7341%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="26.5541%" y="341" width="0.0200%" height="15" fill="rgb(214,194,35)" fg:x="2657" fg:w="2"/><text x="26.8041%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="26.5741%" y="341" width="0.0300%" height="15" fill="rgb(249,28,3)" fg:x="2659" fg:w="3"/><text x="26.8241%" y="351.50"></text></g><g><title>oprf`ipa::helpers::buffers::unordered_receiver::OperatingState&lt;S,C&gt;::wake_next (2 samples, 0.02%)</title><rect x="26.6040%" y="341" width="0.0200%" height="15" fill="rgb(222,56,52)" fg:x="2662" fg:w="2"/><text x="26.8540%" y="351.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::unordered_receiver::Receiver&lt;S,C,M&gt; as core::future::future::Future&gt;::poll (10 samples, 0.10%)</title><rect x="26.5341%" y="357" width="0.0999%" height="15" fill="rgb(245,217,50)" fg:x="2655" fg:w="10"/><text x="26.7841%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (3 samples, 0.03%)</title><rect x="26.6640%" y="341" width="0.0300%" height="15" fill="rgb(213,201,24)" fg:x="2668" fg:w="3"/><text x="26.9140%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (25 samples, 0.25%)</title><rect x="26.6940%" y="341" width="0.2499%" height="15" fill="rgb(248,116,28)" fg:x="2671" fg:w="25"/><text x="26.9440%" y="351.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (22 samples, 0.22%)</title><rect x="26.7240%" y="325" width="0.2199%" height="15" fill="rgb(219,72,43)" fg:x="2674" fg:w="22"/><text x="26.9740%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (4 samples, 0.04%)</title><rect x="26.9438%" y="341" width="0.0400%" height="15" fill="rgb(209,138,14)" fg:x="2696" fg:w="4"/><text x="27.1938%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (15 samples, 0.15%)</title><rect x="27.0338%" y="325" width="0.1499%" height="15" fill="rgb(222,18,33)" fg:x="2705" fg:w="15"/><text x="27.2838%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (59 samples, 0.59%)</title><rect x="26.6540%" y="357" width="0.5896%" height="15" fill="rgb(213,199,7)" fg:x="2667" fg:w="59"/><text x="26.9040%" y="367.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_enter (24 samples, 0.24%)</title><rect x="27.0038%" y="341" width="0.2399%" height="15" fill="rgb(250,110,10)" fg:x="2702" fg:w="24"/><text x="27.2538%" y="351.50"></text></g><g><title>oprf`std::sys::unix::locks::pthread_rwlock::RwLock::read (6 samples, 0.06%)</title><rect x="27.1837%" y="325" width="0.0600%" height="15" fill="rgb(248,123,6)" fg:x="2720" fg:w="6"/><text x="27.4337%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.05%)</title><rect x="27.2437%" y="341" width="0.0500%" height="15" fill="rgb(206,91,31)" fg:x="2726" fg:w="5"/><text x="27.4937%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="27.3736%" y="309" width="0.0300%" height="15" fill="rgb(211,154,13)" fg:x="2739" fg:w="3"/><text x="27.6236%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="27.4036%" y="293" width="0.0300%" height="15" fill="rgb(225,148,7)" fg:x="2742" fg:w="3"/><text x="27.6536%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="27.4335%" y="277" width="0.0300%" height="15" fill="rgb(220,160,43)" fg:x="2745" fg:w="3"/><text x="27.6835%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (12 samples, 0.12%)</title><rect x="27.4335%" y="293" width="0.1199%" height="15" fill="rgb(213,52,39)" fg:x="2745" fg:w="12"/><text x="27.6835%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (9 samples, 0.09%)</title><rect x="27.4635%" y="277" width="0.0899%" height="15" fill="rgb(243,137,7)" fg:x="2748" fg:w="9"/><text x="27.7135%" y="287.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (5 samples, 0.05%)</title><rect x="27.5035%" y="261" width="0.0500%" height="15" fill="rgb(230,79,13)" fg:x="2752" fg:w="5"/><text x="27.7535%" y="271.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (20 samples, 0.20%)</title><rect x="27.4036%" y="309" width="0.1999%" height="15" fill="rgb(247,105,23)" fg:x="2742" fg:w="20"/><text x="27.6536%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::registry::sharded::Registry::start_close (3 samples, 0.03%)</title><rect x="27.5735%" y="293" width="0.0300%" height="15" fill="rgb(223,179,41)" fg:x="2759" fg:w="3"/><text x="27.8235%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (25 samples, 0.25%)</title><rect x="27.3736%" y="325" width="0.2499%" height="15" fill="rgb(218,9,34)" fg:x="2739" fg:w="25"/><text x="27.6236%" y="335.50"></text></g><g><title>oprf`tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="27.6034%" y="309" width="0.0200%" height="15" fill="rgb(222,106,8)" fg:x="2762" fg:w="2"/><text x="27.8534%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (33 samples, 0.33%)</title><rect x="27.3036%" y="341" width="0.3298%" height="15" fill="rgb(211,220,0)" fg:x="2732" fg:w="33"/><text x="27.5536%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="27.6534%" y="325" width="0.0200%" height="15" fill="rgb(229,52,16)" fg:x="2767" fg:w="2"/><text x="27.9034%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (49 samples, 0.49%)</title><rect x="27.2437%" y="357" width="0.4897%" height="15" fill="rgb(212,155,18)" fg:x="2726" fg:w="49"/><text x="27.4937%" y="367.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_exit (8 samples, 0.08%)</title><rect x="27.6534%" y="341" width="0.0800%" height="15" fill="rgb(242,21,14)" fg:x="2767" fg:w="8"/><text x="27.9034%" y="351.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (6 samples, 0.06%)</title><rect x="27.6734%" y="325" width="0.0600%" height="15" fill="rgb(222,19,48)" fg:x="2769" fg:w="6"/><text x="27.9234%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (5 samples, 0.05%)</title><rect x="27.6834%" y="309" width="0.0500%" height="15" fill="rgb(232,45,27)" fg:x="2770" fg:w="5"/><text x="27.9334%" y="319.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="27.7533%" y="357" width="0.0200%" height="15" fill="rgb(249,103,42)" fg:x="2777" fg:w="2"/><text x="28.0033%" y="367.50"></text></g><g><title>oprf`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (144 samples, 1.44%)</title><rect x="26.3642%" y="373" width="1.4391%" height="15" fill="rgb(246,81,33)" fg:x="2638" fg:w="144"/><text x="26.6142%" y="383.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_enter (3 samples, 0.03%)</title><rect x="27.7733%" y="357" width="0.0300%" height="15" fill="rgb(252,33,42)" fg:x="2779" fg:w="3"/><text x="28.0233%" y="367.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="27.8033%" y="373" width="0.0200%" height="15" fill="rgb(209,212,41)" fg:x="2782" fg:w="2"/><text x="28.0533%" y="383.50"></text></g><g><title>oprf`_rjem_malloc (5 samples, 0.05%)</title><rect x="27.8233%" y="373" width="0.0500%" height="15" fill="rgb(207,154,6)" fg:x="2784" fg:w="5"/><text x="28.0733%" y="383.50"></text></g><g><title>oprf`_rjem_sdallocx (3 samples, 0.03%)</title><rect x="27.8733%" y="373" width="0.0300%" height="15" fill="rgb(223,64,47)" fg:x="2789" fg:w="3"/><text x="28.1233%" y="383.50"></text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (9 samples, 0.09%)</title><rect x="27.9133%" y="357" width="0.0899%" height="15" fill="rgb(211,161,38)" fg:x="2793" fg:w="9"/><text x="28.1633%" y="367.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (73 samples, 0.73%)</title><rect x="27.9133%" y="373" width="0.7296%" height="15" fill="rgb(219,138,40)" fg:x="2793" fg:w="73"/><text x="28.1633%" y="383.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (64 samples, 0.64%)</title><rect x="28.0032%" y="357" width="0.6396%" height="15" fill="rgb(241,228,46)" fg:x="2802" fg:w="64"/><text x="28.2532%" y="367.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (2 samples, 0.02%)</title><rect x="28.6428%" y="373" width="0.0200%" height="15" fill="rgb(223,209,38)" fg:x="2866" fg:w="2"/><text x="28.8928%" y="383.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;ipa::secret_sharing::replicated::semi_honest::additive_share::AdditiveShare&lt;ipa::ff::galois_field::bit_array_1::Gf2&gt;,ipa::error::Error&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="28.6628%" y="373" width="0.0300%" height="15" fill="rgb(236,164,45)" fg:x="2868" fg:w="3"/><text x="28.9128%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="28.7128%" y="357" width="0.0200%" height="15" fill="rgb(231,15,5)" fg:x="2873" fg:w="2"/><text x="28.9628%" y="367.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics::key::Key&gt; (4 samples, 0.04%)</title><rect x="28.7028%" y="373" width="0.0400%" height="15" fill="rgb(252,35,15)" fg:x="2872" fg:w="4"/><text x="28.9528%" y="383.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;ipa::helpers::gateway::receive::ReceivingEnd&lt;alloc::sync::Weak&lt;ipa::helpers::transport::in_memory::transport::InMemoryTransport&gt;,ipa::ff::galois_field::bit_array_1::Gf2&gt;::receive::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="28.7428%" y="373" width="0.0200%" height="15" fill="rgb(248,181,18)" fg:x="2876" fg:w="2"/><text x="28.9928%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.13%)</title><rect x="28.7727%" y="341" width="0.1299%" height="15" fill="rgb(233,39,42)" fg:x="2879" fg:w="13"/><text x="29.0227%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.04%)</title><rect x="28.9127%" y="325" width="0.0400%" height="15" fill="rgb(238,110,33)" fg:x="2893" fg:w="4"/><text x="29.1627%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.05%)</title><rect x="28.9626%" y="309" width="0.0500%" height="15" fill="rgb(233,195,10)" fg:x="2898" fg:w="5"/><text x="29.2126%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (3 samples, 0.03%)</title><rect x="29.0226%" y="293" width="0.0300%" height="15" fill="rgb(254,105,3)" fg:x="2904" fg:w="3"/><text x="29.2726%" y="303.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_close (7 samples, 0.07%)</title><rect x="29.0226%" y="309" width="0.0700%" height="15" fill="rgb(221,225,9)" fg:x="2904" fg:w="7"/><text x="29.2726%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (2 samples, 0.02%)</title><rect x="29.0726%" y="293" width="0.0200%" height="15" fill="rgb(224,227,45)" fg:x="2909" fg:w="2"/><text x="29.3226%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (2 samples, 0.02%)</title><rect x="29.0726%" y="277" width="0.0200%" height="15" fill="rgb(229,198,43)" fg:x="2909" fg:w="2"/><text x="29.3226%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (15 samples, 0.15%)</title><rect x="28.9526%" y="325" width="0.1499%" height="15" fill="rgb(206,209,35)" fg:x="2897" fg:w="15"/><text x="29.2026%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (20 samples, 0.20%)</title><rect x="28.9127%" y="341" width="0.1999%" height="15" fill="rgb(245,195,53)" fg:x="2893" fg:w="20"/><text x="29.1627%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="29.1125%" y="341" width="0.0200%" height="15" fill="rgb(240,92,26)" fg:x="2913" fg:w="2"/><text x="29.3625%" y="351.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_tracing_context::tracing_integration::Labels&gt; (2 samples, 0.02%)</title><rect x="29.1625%" y="309" width="0.0200%" height="15" fill="rgb(207,40,23)" fg:x="2918" fg:w="2"/><text x="29.4125%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="29.1925%" y="293" width="0.0200%" height="15" fill="rgb(223,111,35)" fg:x="2921" fg:w="2"/><text x="29.4425%" y="303.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="29.2125%" y="293" width="0.0200%" height="15" fill="rgb(229,147,28)" fg:x="2923" fg:w="2"/><text x="29.4625%" y="303.50"></text></g><g><title>oprf`_rjem_sdallocx (8 samples, 0.08%)</title><rect x="29.2325%" y="293" width="0.0800%" height="15" fill="rgb(211,29,28)" fg:x="2925" fg:w="8"/><text x="29.4825%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (20 samples, 0.20%)</title><rect x="29.1525%" y="325" width="0.1999%" height="15" fill="rgb(228,72,33)" fg:x="2917" fg:w="20"/><text x="29.4025%" y="335.50"></text></g><g><title>oprf`hashbrown::raw::RawTable&lt;T,A&gt;::clear (17 samples, 0.17%)</title><rect x="29.1825%" y="309" width="0.1699%" height="15" fill="rgb(205,214,31)" fg:x="2920" fg:w="17"/><text x="29.4325%" y="319.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_tracing_context::tracing_integration::Labels&gt; (4 samples, 0.04%)</title><rect x="29.3124%" y="293" width="0.0400%" height="15" fill="rgb(224,111,15)" fg:x="2933" fg:w="4"/><text x="29.5624%" y="303.50"></text></g><g><title>oprf`core::ops::function::Fn::call (3 samples, 0.03%)</title><rect x="29.3224%" y="277" width="0.0300%" height="15" fill="rgb(253,21,26)" fg:x="2934" fg:w="3"/><text x="29.5724%" y="287.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (22 samples, 0.22%)</title><rect x="29.1425%" y="341" width="0.2199%" height="15" fill="rgb(245,139,43)" fg:x="2916" fg:w="22"/><text x="29.3925%" y="351.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (61 samples, 0.61%)</title><rect x="28.7627%" y="373" width="0.6096%" height="15" fill="rgb(252,170,7)" fg:x="2878" fg:w="61"/><text x="29.0127%" y="383.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (60 samples, 0.60%)</title><rect x="28.7727%" y="357" width="0.5996%" height="15" fill="rgb(231,118,14)" fg:x="2879" fg:w="60"/><text x="29.0227%" y="367.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_sender (3 samples, 0.03%)</title><rect x="29.3724%" y="373" width="0.0300%" height="15" fill="rgb(238,83,0)" fg:x="2939" fg:w="3"/><text x="29.6224%" y="383.50"></text></g><g><title>oprf`ipa::protocol::prss::Endpoint::indexed (2 samples, 0.02%)</title><rect x="29.4024%" y="373" width="0.0200%" height="15" fill="rgb(221,39,39)" fg:x="2942" fg:w="2"/><text x="29.6524%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="29.4523%" y="357" width="0.0400%" height="15" fill="rgb(222,119,46)" fg:x="2947" fg:w="4"/><text x="29.7023%" y="367.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (10 samples, 0.10%)</title><rect x="29.4923%" y="357" width="0.0999%" height="15" fill="rgb(222,165,49)" fg:x="2951" fg:w="10"/><text x="29.7423%" y="367.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (11 samples, 0.11%)</title><rect x="29.6122%" y="325" width="0.1099%" height="15" fill="rgb(219,113,52)" fg:x="2963" fg:w="11"/><text x="29.8622%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (5 samples, 0.05%)</title><rect x="29.7521%" y="293" width="0.0500%" height="15" fill="rgb(214,7,15)" fg:x="2977" fg:w="5"/><text x="30.0021%" y="303.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (9 samples, 0.09%)</title><rect x="29.7222%" y="309" width="0.0899%" height="15" fill="rgb(235,32,4)" fg:x="2974" fg:w="9"/><text x="29.9722%" y="319.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (10 samples, 0.10%)</title><rect x="29.7222%" y="325" width="0.0999%" height="15" fill="rgb(238,90,54)" fg:x="2974" fg:w="10"/><text x="29.9722%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.03%)</title><rect x="29.8221%" y="309" width="0.0300%" height="15" fill="rgb(213,208,19)" fg:x="2984" fg:w="3"/><text x="30.0721%" y="319.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="29.8521%" y="309" width="0.0200%" height="15" fill="rgb(233,156,4)" fg:x="2987" fg:w="2"/><text x="30.1021%" y="319.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (24 samples, 0.24%)</title><rect x="29.8921%" y="293" width="0.2399%" height="15" fill="rgb(207,194,5)" fg:x="2991" fg:w="24"/><text x="30.1421%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (15 samples, 0.15%)</title><rect x="30.2019%" y="277" width="0.1499%" height="15" fill="rgb(206,111,30)" fg:x="3022" fg:w="15"/><text x="30.4519%" y="287.50"></text></g><g><title>oprf`_rjem_sdallocx (5 samples, 0.05%)</title><rect x="30.3718%" y="277" width="0.0500%" height="15" fill="rgb(243,70,54)" fg:x="3039" fg:w="5"/><text x="30.6218%" y="287.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (32 samples, 0.32%)</title><rect x="30.1319%" y="293" width="0.3198%" height="15" fill="rgb(242,28,8)" fg:x="3015" fg:w="32"/><text x="30.3819%" y="303.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (3 samples, 0.03%)</title><rect x="30.4217%" y="277" width="0.0300%" height="15" fill="rgb(219,106,18)" fg:x="3044" fg:w="3"/><text x="30.6717%" y="287.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (88 samples, 0.88%)</title><rect x="29.5922%" y="341" width="0.8795%" height="15" fill="rgb(244,222,10)" fg:x="2961" fg:w="88"/><text x="29.8422%" y="351.50"></text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (65 samples, 0.65%)</title><rect x="29.8221%" y="325" width="0.6496%" height="15" fill="rgb(236,179,52)" fg:x="2984" fg:w="65"/><text x="30.0721%" y="335.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (60 samples, 0.60%)</title><rect x="29.8721%" y="309" width="0.5996%" height="15" fill="rgb(213,23,39)" fg:x="2989" fg:w="60"/><text x="30.1221%" y="319.50"></text></g><g><title>oprf`metrics::key::key_hasher_impl (2 samples, 0.02%)</title><rect x="30.4517%" y="293" width="0.0200%" height="15" fill="rgb(238,48,10)" fg:x="3047" fg:w="2"/><text x="30.7017%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="30.4817%" y="325" width="0.0300%" height="15" fill="rgb(251,196,23)" fg:x="3050" fg:w="3"/><text x="30.7317%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.10%)</title><rect x="30.5317%" y="309" width="0.0999%" height="15" fill="rgb(250,152,24)" fg:x="3055" fg:w="10"/><text x="30.7817%" y="319.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="30.6316%" y="309" width="0.0200%" height="15" fill="rgb(209,150,17)" fg:x="3065" fg:w="2"/><text x="30.8816%" y="319.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (18 samples, 0.18%)</title><rect x="30.4817%" y="341" width="0.1799%" height="15" fill="rgb(234,202,34)" fg:x="3050" fg:w="18"/><text x="30.7317%" y="351.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (14 samples, 0.14%)</title><rect x="30.5217%" y="325" width="0.1399%" height="15" fill="rgb(253,148,53)" fg:x="3054" fg:w="14"/><text x="30.7717%" y="335.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (110 samples, 1.10%)</title><rect x="29.5922%" y="357" width="1.0993%" height="15" fill="rgb(218,129,16)" fg:x="2961" fg:w="110"/><text x="29.8422%" y="367.50"></text></g><g><title>oprf`tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="30.6716%" y="341" width="0.0200%" height="15" fill="rgb(216,85,19)" fg:x="3069" fg:w="2"/><text x="30.9216%" y="351.50"></text></g><g><title>oprf`aes::soft::fixslice::aes256_encrypt (172 samples, 1.72%)</title><rect x="30.7116%" y="357" width="1.7190%" height="15" fill="rgb(235,228,7)" fg:x="3073" fg:w="172"/><text x="30.9616%" y="367.50"></text></g><g><title>oprf`aes::soft::fixslice::bitslice (6 samples, 0.06%)</title><rect x="32.4305%" y="357" width="0.0600%" height="15" fill="rgb(245,175,0)" fg:x="3245" fg:w="6"/><text x="32.6805%" y="367.50"></text></g><g><title>oprf`aes::soft::fixslice::sub_bytes (118 samples, 1.18%)</title><rect x="32.4905%" y="357" width="1.1793%" height="15" fill="rgb(208,168,36)" fg:x="3251" fg:w="118"/><text x="32.7405%" y="367.50"></text></g><g><title>oprf`ipa::protocol::prss::crypto::SharedRandomness::generate_fields (428 samples, 4.28%)</title><rect x="29.4223%" y="373" width="4.2774%" height="15" fill="rgb(246,171,24)" fg:x="2944" fg:w="428"/><text x="29.6723%" y="383.50">oprf`..</text></g><g><title>oprf`metrics::key::Key::builder (9 samples, 0.09%)</title><rect x="33.7098%" y="373" width="0.0899%" height="15" fill="rgb(215,142,24)" fg:x="3373" fg:w="9"/><text x="33.9598%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="33.9796%" y="325" width="0.0300%" height="15" fill="rgb(250,187,7)" fg:x="3400" fg:w="3"/><text x="34.2296%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (3 samples, 0.03%)</title><rect x="34.0096%" y="325" width="0.0300%" height="15" fill="rgb(228,66,33)" fg:x="3403" fg:w="3"/><text x="34.2596%" y="335.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="34.0396%" y="325" width="0.0200%" height="15" fill="rgb(234,215,21)" fg:x="3406" fg:w="2"/><text x="34.2896%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (2 samples, 0.02%)</title><rect x="34.1195%" y="309" width="0.0200%" height="15" fill="rgb(222,191,20)" fg:x="3414" fg:w="2"/><text x="34.3695%" y="319.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as core::default::Default&gt;::default (41 samples, 0.41%)</title><rect x="34.1395%" y="309" width="0.4098%" height="15" fill="rgb(245,79,54)" fg:x="3416" fg:w="41"/><text x="34.3895%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="34.6992%" y="261" width="0.0200%" height="15" fill="rgb(240,10,37)" fg:x="3472" fg:w="2"/><text x="34.9492%" y="271.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="34.7591%" y="245" width="0.0300%" height="15" fill="rgb(214,192,32)" fg:x="3478" fg:w="3"/><text x="35.0091%" y="255.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="34.7591%" y="229" width="0.0300%" height="15" fill="rgb(209,36,54)" fg:x="3478" fg:w="3"/><text x="35.0091%" y="239.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as tracing_core::field::Visit&gt;::record_debug (25 samples, 0.25%)</title><rect x="34.5493%" y="309" width="0.2499%" height="15" fill="rgb(220,10,11)" fg:x="3457" fg:w="25"/><text x="34.7993%" y="319.50"></text></g><g><title>oprf`alloc::fmt::format::format_inner (20 samples, 0.20%)</title><rect x="34.5992%" y="293" width="0.1999%" height="15" fill="rgb(221,106,17)" fg:x="3462" fg:w="20"/><text x="34.8492%" y="303.50"></text></g><g><title>oprf`core::fmt::write (12 samples, 0.12%)</title><rect x="34.6792%" y="277" width="0.1199%" height="15" fill="rgb(251,142,44)" fg:x="3470" fg:w="12"/><text x="34.9292%" y="287.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.08%)</title><rect x="34.7192%" y="261" width="0.0800%" height="15" fill="rgb(238,13,15)" fg:x="3474" fg:w="8"/><text x="34.9692%" y="271.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="34.8291%" y="293" width="0.0300%" height="15" fill="rgb(208,107,27)" fg:x="3485" fg:w="3"/><text x="35.0791%" y="303.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (81 samples, 0.81%)</title><rect x="34.0596%" y="325" width="0.8095%" height="15" fill="rgb(205,136,37)" fg:x="3408" fg:w="81"/><text x="34.3096%" y="335.50"></text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (6 samples, 0.06%)</title><rect x="34.8091%" y="309" width="0.0600%" height="15" fill="rgb(250,205,27)" fg:x="3483" fg:w="6"/><text x="35.0591%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (6 samples, 0.06%)</title><rect x="34.9290%" y="309" width="0.0600%" height="15" fill="rgb(210,80,43)" fg:x="3495" fg:w="6"/><text x="35.1790%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (2 samples, 0.02%)</title><rect x="34.9890%" y="309" width="0.0200%" height="15" fill="rgb(247,160,36)" fg:x="3501" fg:w="2"/><text x="35.2390%" y="319.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (3 samples, 0.03%)</title><rect x="35.0190%" y="309" width="0.0300%" height="15" fill="rgb(234,13,49)" fg:x="3504" fg:w="3"/><text x="35.2690%" y="319.50"></text></g><g><title>oprf`&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.04%)</title><rect x="35.0889%" y="261" width="0.0400%" height="15" fill="rgb(234,122,0)" fg:x="3511" fg:w="4"/><text x="35.3389%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.09%)</title><rect x="35.2489%" y="229" width="0.0899%" height="15" fill="rgb(207,146,38)" fg:x="3527" fg:w="9"/><text x="35.4989%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="35.4187%" y="165" width="0.0400%" height="15" fill="rgb(207,177,25)" fg:x="3544" fg:w="4"/><text x="35.6687%" y="175.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.21%)</title><rect x="35.3588%" y="213" width="0.2099%" height="15" fill="rgb(211,178,42)" fg:x="3538" fg:w="21"/><text x="35.6088%" y="223.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (20 samples, 0.20%)</title><rect x="35.3688%" y="197" width="0.1999%" height="15" fill="rgb(230,69,54)" fg:x="3539" fg:w="20"/><text x="35.6188%" y="207.50"></text></g><g><title>oprf`do_rallocx (17 samples, 0.17%)</title><rect x="35.3988%" y="181" width="0.1699%" height="15" fill="rgb(214,135,41)" fg:x="3542" fg:w="17"/><text x="35.6488%" y="191.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (11 samples, 0.11%)</title><rect x="35.4587%" y="165" width="0.1099%" height="15" fill="rgb(237,67,25)" fg:x="3548" fg:w="11"/><text x="35.7087%" y="175.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (6 samples, 0.06%)</title><rect x="35.5087%" y="149" width="0.0600%" height="15" fill="rgb(222,189,50)" fg:x="3553" fg:w="6"/><text x="35.7587%" y="159.50"></text></g><g><title>oprf`rtree_read (2 samples, 0.02%)</title><rect x="35.5487%" y="133" width="0.0200%" height="15" fill="rgb(245,148,34)" fg:x="3557" fg:w="2"/><text x="35.7987%" y="143.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (24 samples, 0.24%)</title><rect x="35.3388%" y="229" width="0.2399%" height="15" fill="rgb(222,29,6)" fg:x="3536" fg:w="24"/><text x="35.5888%" y="239.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="35.5787%" y="229" width="0.0200%" height="15" fill="rgb(221,189,43)" fg:x="3560" fg:w="2"/><text x="35.8287%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="35.7985%" y="181" width="0.0200%" height="15" fill="rgb(207,36,27)" fg:x="3582" fg:w="2"/><text x="36.0485%" y="191.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.07%)</title><rect x="35.8185%" y="181" width="0.0700%" height="15" fill="rgb(217,90,24)" fg:x="3584" fg:w="7"/><text x="36.0685%" y="191.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (22 samples, 0.22%)</title><rect x="35.6986%" y="213" width="0.2199%" height="15" fill="rgb(224,66,35)" fg:x="3572" fg:w="22"/><text x="35.9486%" y="223.50"></text></g><g><title>oprf`core::fmt::write (16 samples, 0.16%)</title><rect x="35.7585%" y="197" width="0.1599%" height="15" fill="rgb(221,13,50)" fg:x="3578" fg:w="16"/><text x="36.0085%" y="207.50"></text></g><g><title>oprf`core::fmt::Formatter::pad (2 samples, 0.02%)</title><rect x="35.8985%" y="181" width="0.0200%" height="15" fill="rgb(236,68,49)" fg:x="3592" fg:w="2"/><text x="36.1485%" y="191.50"></text></g><g><title>oprf`core::fmt::Formatter::write_fmt (8 samples, 0.08%)</title><rect x="35.9184%" y="213" width="0.0800%" height="15" fill="rgb(229,146,28)" fg:x="3594" fg:w="8"/><text x="36.1684%" y="223.50"></text></g><g><title>oprf`core::fmt::write (3 samples, 0.03%)</title><rect x="35.9984%" y="213" width="0.0300%" height="15" fill="rgb(225,31,38)" fg:x="3602" fg:w="3"/><text x="36.2484%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.06%)</title><rect x="36.2383%" y="181" width="0.0600%" height="15" fill="rgb(250,208,3)" fg:x="3626" fg:w="6"/><text x="36.4883%" y="191.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_char (2 samples, 0.02%)</title><rect x="36.2982%" y="181" width="0.0200%" height="15" fill="rgb(246,54,23)" fg:x="3632" fg:w="2"/><text x="36.5482%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="36.4481%" y="133" width="0.0400%" height="15" fill="rgb(243,76,11)" fg:x="3647" fg:w="4"/><text x="36.6981%" y="143.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (2 samples, 0.02%)</title><rect x="36.6680%" y="101" width="0.0200%" height="15" fill="rgb(245,21,50)" fg:x="3669" fg:w="2"/><text x="36.9180%" y="111.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.30%)</title><rect x="36.3982%" y="165" width="0.2998%" height="15" fill="rgb(228,9,43)" fg:x="3642" fg:w="30"/><text x="36.6482%" y="175.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (25 samples, 0.25%)</title><rect x="36.4481%" y="149" width="0.2499%" height="15" fill="rgb(208,100,47)" fg:x="3647" fg:w="25"/><text x="36.6981%" y="159.50"></text></g><g><title>oprf`do_rallocx (17 samples, 0.17%)</title><rect x="36.5281%" y="133" width="0.1699%" height="15" fill="rgb(232,26,8)" fg:x="3655" fg:w="17"/><text x="36.7781%" y="143.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (11 samples, 0.11%)</title><rect x="36.5880%" y="117" width="0.1099%" height="15" fill="rgb(216,166,38)" fg:x="3661" fg:w="11"/><text x="36.8380%" y="127.50"></text></g><g><title>oprf`core::fmt::write (114 samples, 1.14%)</title><rect x="35.5986%" y="229" width="1.1393%" height="15" fill="rgb(251,202,51)" fg:x="3562" fg:w="114"/><text x="35.8486%" y="239.50"></text></g><g><title>oprf`nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (71 samples, 0.71%)</title><rect x="36.0284%" y="213" width="0.7096%" height="15" fill="rgb(254,216,34)" fg:x="3605" fg:w="71"/><text x="36.2784%" y="223.50"></text></g><g><title>oprf`core::fmt::write (57 samples, 0.57%)</title><rect x="36.1683%" y="197" width="0.5697%" height="15" fill="rgb(251,32,27)" fg:x="3619" fg:w="57"/><text x="36.4183%" y="207.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (42 samples, 0.42%)</title><rect x="36.3182%" y="181" width="0.4197%" height="15" fill="rgb(208,127,28)" fg:x="3634" fg:w="42"/><text x="36.5682%" y="191.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="36.6980%" y="165" width="0.0400%" height="15" fill="rgb(224,137,22)" fg:x="3672" fg:w="4"/><text x="36.9480%" y="175.50"></text></g><g><title>oprf`&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (156 samples, 1.56%)</title><rect x="35.1889%" y="245" width="1.5591%" height="15" fill="rgb(254,70,32)" fg:x="3521" fg:w="156"/><text x="35.4389%" y="255.50"></text></g><g><title>oprf`core::fmt::Write::write_fmt (169 samples, 1.69%)</title><rect x="35.0790%" y="277" width="1.6890%" height="15" fill="rgb(229,75,37)" fg:x="3510" fg:w="169"/><text x="35.3290%" y="287.50"></text></g><g><title>oprf`core::fmt::write (163 samples, 1.63%)</title><rect x="35.1389%" y="261" width="1.6290%" height="15" fill="rgb(252,64,23)" fg:x="3516" fg:w="163"/><text x="35.3889%" y="271.50"></text></g><g><title>oprf`core::fmt::write (2 samples, 0.02%)</title><rect x="36.7480%" y="245" width="0.0200%" height="15" fill="rgb(232,162,48)" fg:x="3677" fg:w="2"/><text x="36.9980%" y="255.50"></text></g><g><title>oprf`tracing_core::field::ValueSet::record (173 samples, 1.73%)</title><rect x="35.0490%" y="309" width="1.7290%" height="15" fill="rgb(246,160,12)" fg:x="3507" fg:w="173"/><text x="35.2990%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (172 samples, 1.72%)</title><rect x="35.0590%" y="293" width="1.7190%" height="15" fill="rgb(247,166,0)" fg:x="3508" fg:w="172"/><text x="35.3090%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="36.7779%" y="293" width="0.0300%" height="15" fill="rgb(249,219,21)" fg:x="3680" fg:w="3"/><text x="37.0279%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (196 samples, 1.96%)</title><rect x="34.8691%" y="325" width="1.9588%" height="15" fill="rgb(205,209,3)" fg:x="3489" fg:w="196"/><text x="35.1191%" y="335.50">o..</text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (5 samples, 0.05%)</title><rect x="36.7779%" y="309" width="0.0500%" height="15" fill="rgb(243,44,1)" fg:x="3680" fg:w="5"/><text x="37.0279%" y="319.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::create_with (9 samples, 0.09%)</title><rect x="36.8379%" y="325" width="0.0899%" height="15" fill="rgb(206,159,16)" fg:x="3686" fg:w="9"/><text x="37.0879%" y="335.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (5 samples, 0.05%)</title><rect x="36.8779%" y="309" width="0.0500%" height="15" fill="rgb(244,77,30)" fg:x="3690" fg:w="5"/><text x="37.1279%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (6 samples, 0.06%)</title><rect x="36.9578%" y="309" width="0.0600%" height="15" fill="rgb(218,69,12)" fg:x="3698" fg:w="6"/><text x="37.2078%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_new_span (8 samples, 0.08%)</title><rect x="36.9478%" y="325" width="0.0800%" height="15" fill="rgb(212,87,7)" fg:x="3697" fg:w="8"/><text x="37.1978%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (316 samples, 3.16%)</title><rect x="33.8797%" y="341" width="3.1581%" height="15" fill="rgb(245,114,25)" fg:x="3390" fg:w="316"/><text x="34.1297%" y="351.50">opr..</text></g><g><title>oprf`&lt;ipa::secret_sharing::replicated::semi_honest::additive_share::AdditiveShare&lt;F&gt; as ipa::protocol::basics::mul::SecureMul&lt;C&gt;&gt;::multiply_sparse::_{{closure}} (1,433 samples, 14.32%)</title><rect x="22.7364%" y="389" width="14.3214%" height="15" fill="rgb(210,61,42)" fg:x="2275" fg:w="1433"/><text x="22.9864%" y="399.50">oprf`&lt;ipa::secret_shar..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (326 samples, 3.26%)</title><rect x="33.7997%" y="373" width="3.2580%" height="15" fill="rgb(211,52,33)" fg:x="3382" fg:w="326"/><text x="34.0497%" y="383.50">opr..</text></g><g><title>oprf`tracing::span::Span::make_with (322 samples, 3.22%)</title><rect x="33.8397%" y="357" width="3.2181%" height="15" fill="rgb(234,58,33)" fg:x="3386" fg:w="322"/><text x="34.0897%" y="367.50">opr..</text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_new_span (2 samples, 0.02%)</title><rect x="37.0378%" y="341" width="0.0200%" height="15" fill="rgb(220,115,36)" fg:x="3706" fg:w="2"/><text x="37.2878%" y="351.50"></text></g><g><title>oprf`&lt;futures_util::future::try_join::TryJoin&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (3,517 samples, 35.15%)</title><rect x="1.9988%" y="437" width="35.1489%" height="15" fill="rgb(243,153,54)" fg:x="200" fg:w="3517"/><text x="2.2488%" y="447.50">oprf`&lt;futures_util::future::try_join::TryJoin&lt;Fut1,Fut2&gt; ..</text></g><g><title>oprf`&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,515 samples, 35.13%)</title><rect x="2.0188%" y="421" width="35.1289%" height="15" fill="rgb(251,47,18)" fg:x="202" fg:w="3515"/><text x="2.2688%" y="431.50">oprf`&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;..</text></g><g><title>oprf`ipa::protocol::basics::mul::SecureMul::multiply::_{{closure}} (1,449 samples, 14.48%)</title><rect x="22.6664%" y="405" width="14.4813%" height="15" fill="rgb(242,102,42)" fg:x="2268" fg:w="1449"/><text x="22.9164%" y="415.50">oprf`ipa::protocol::ba..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (3 samples, 0.03%)</title><rect x="37.1177%" y="389" width="0.0300%" height="15" fill="rgb(234,31,38)" fg:x="3714" fg:w="3"/><text x="37.3677%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="37.1677%" y="421" width="0.0200%" height="15" fill="rgb(221,117,51)" fg:x="3719" fg:w="2"/><text x="37.4177%" y="431.50"></text></g><g><title>oprf`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="37.1977%" y="421" width="0.0300%" height="15" fill="rgb(212,20,18)" fg:x="3722" fg:w="3"/><text x="37.4477%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.10%)</title><rect x="37.3376%" y="357" width="0.0999%" height="15" fill="rgb(245,133,36)" fg:x="3736" fg:w="10"/><text x="37.5876%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="37.4375%" y="357" width="0.0400%" height="15" fill="rgb(212,6,19)" fg:x="3746" fg:w="4"/><text x="37.6875%" y="367.50"></text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (7 samples, 0.07%)</title><rect x="37.5075%" y="341" width="0.0700%" height="15" fill="rgb(218,1,36)" fg:x="3753" fg:w="7"/><text x="37.7575%" y="351.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (64 samples, 0.64%)</title><rect x="37.4875%" y="357" width="0.6396%" height="15" fill="rgb(246,84,54)" fg:x="3751" fg:w="64"/><text x="37.7375%" y="367.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (55 samples, 0.55%)</title><rect x="37.5775%" y="341" width="0.5497%" height="15" fill="rgb(242,110,6)" fg:x="3760" fg:w="55"/><text x="37.8275%" y="351.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (3 samples, 0.03%)</title><rect x="38.1271%" y="357" width="0.0300%" height="15" fill="rgb(214,47,5)" fg:x="3815" fg:w="3"/><text x="38.3771%" y="367.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;ipa::secret_sharing::replicated::semi_honest::additive_share::AdditiveShare&lt;ipa::ff::galois_field::bit_array_1::Gf2&gt;,ipa::error::Error&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="38.1571%" y="357" width="0.0200%" height="15" fill="rgb(218,159,25)" fg:x="3818" fg:w="2"/><text x="38.4071%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="38.2371%" y="341" width="0.0400%" height="15" fill="rgb(215,211,28)" fg:x="3826" fg:w="4"/><text x="38.4871%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="38.2770%" y="341" width="0.0200%" height="15" fill="rgb(238,59,32)" fg:x="3830" fg:w="2"/><text x="38.5270%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.18%)</title><rect x="38.5269%" y="325" width="0.1799%" height="15" fill="rgb(226,82,3)" fg:x="3855" fg:w="18"/><text x="38.7769%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (12 samples, 0.12%)</title><rect x="38.7068%" y="325" width="0.1199%" height="15" fill="rgb(240,164,32)" fg:x="3873" fg:w="12"/><text x="38.9568%" y="335.50"></text></g><g><title>oprf`&lt;ipa::ff::galois_field::bit_array_1::Gf2 as core::ops::arith::Mul&gt;::mul (43 samples, 0.43%)</title><rect x="38.8267%" y="325" width="0.4297%" height="15" fill="rgb(232,46,7)" fg:x="3885" fg:w="43"/><text x="39.0767%" y="335.50"></text></g><g><title>oprf`ipa::helpers::gateway::transport::RoleResolvingTransport&lt;T&gt;::role (2 samples, 0.02%)</title><rect x="39.2664%" y="309" width="0.0200%" height="15" fill="rgb(229,129,53)" fg:x="3929" fg:w="2"/><text x="39.5164%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="39.3664%" y="293" width="0.0300%" height="15" fill="rgb(234,188,29)" fg:x="3939" fg:w="3"/><text x="39.6164%" y="303.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.12%)</title><rect x="39.3964%" y="293" width="0.1199%" height="15" fill="rgb(246,141,4)" fg:x="3942" fg:w="12"/><text x="39.6464%" y="303.50"></text></g><g><title>oprf`core::hash::BuildHasher::hash_one (4 samples, 0.04%)</title><rect x="39.5463%" y="293" width="0.0400%" height="15" fill="rgb(229,23,39)" fg:x="3957" fg:w="4"/><text x="39.7963%" y="303.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::prss (35 samples, 0.35%)</title><rect x="39.2564%" y="325" width="0.3498%" height="15" fill="rgb(206,12,3)" fg:x="3928" fg:w="35"/><text x="39.5064%" y="335.50"></text></g><g><title>oprf`ipa::protocol::prss::Endpoint::indexed (32 samples, 0.32%)</title><rect x="39.2864%" y="309" width="0.3198%" height="15" fill="rgb(252,226,20)" fg:x="3931" fg:w="32"/><text x="39.5364%" y="319.50"></text></g><g><title>oprf`sha2::sha256::compress256 (2 samples, 0.02%)</title><rect x="39.5862%" y="293" width="0.0200%" height="15" fill="rgb(216,123,35)" fg:x="3961" fg:w="2"/><text x="39.8362%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="39.6162%" y="309" width="0.0200%" height="15" fill="rgb(212,68,40)" fg:x="3964" fg:w="2"/><text x="39.8662%" y="319.50"></text></g><g><title>oprf`_rjem_malloc (4 samples, 0.04%)</title><rect x="39.6762%" y="293" width="0.0400%" height="15" fill="rgb(254,125,32)" fg:x="3970" fg:w="4"/><text x="39.9262%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.05%)</title><rect x="39.7162%" y="277" width="0.0500%" height="15" fill="rgb(253,97,22)" fg:x="3974" fg:w="5"/><text x="39.9662%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="39.7661%" y="277" width="0.0400%" height="15" fill="rgb(241,101,14)" fg:x="3979" fg:w="4"/><text x="40.0161%" y="287.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.20%)</title><rect x="39.8061%" y="277" width="0.1999%" height="15" fill="rgb(238,103,29)" fg:x="3983" fg:w="20"/><text x="40.0561%" y="287.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.32%)</title><rect x="40.0660%" y="261" width="0.3198%" height="15" fill="rgb(233,195,47)" fg:x="4009" fg:w="32"/><text x="40.3160%" y="271.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (37 samples, 0.37%)</title><rect x="40.0260%" y="277" width="0.3698%" height="15" fill="rgb(246,218,30)" fg:x="4005" fg:w="37"/><text x="40.2760%" y="287.50"></text></g><g><title>oprf`hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="40.4058%" y="277" width="0.0300%" height="15" fill="rgb(219,145,47)" fg:x="4043" fg:w="3"/><text x="40.6558%" y="287.50"></text></g><g><title>oprf`ipa::helpers::gateway::receive::GatewayReceivers&lt;T&gt;::get_or_create (74 samples, 0.74%)</title><rect x="39.7162%" y="293" width="0.7396%" height="15" fill="rgb(243,12,26)" fg:x="3974" fg:w="74"/><text x="39.9662%" y="303.50"></text></g><g><title>oprf`ipa::helpers::buffers::unordered_receiver::UnorderedReceiver&lt;S,C&gt;::new (2 samples, 0.02%)</title><rect x="40.4357%" y="277" width="0.0200%" height="15" fill="rgb(214,87,16)" fg:x="4046" fg:w="2"/><text x="40.6857%" y="287.50"></text></g><g><title>oprf`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.02%)</title><rect x="40.4357%" y="261" width="0.0200%" height="15" fill="rgb(208,99,42)" fg:x="4046" fg:w="2"/><text x="40.6857%" y="271.50"></text></g><g><title>oprf`alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.02%)</title><rect x="40.4357%" y="245" width="0.0200%" height="15" fill="rgb(253,99,2)" fg:x="4046" fg:w="2"/><text x="40.6857%" y="255.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::recv_channel (86 samples, 0.86%)</title><rect x="39.6062%" y="325" width="0.8595%" height="15" fill="rgb(220,168,23)" fg:x="3963" fg:w="86"/><text x="39.8562%" y="335.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_receiver (81 samples, 0.81%)</title><rect x="39.6562%" y="309" width="0.8095%" height="15" fill="rgb(242,38,24)" fg:x="3968" fg:w="81"/><text x="39.9062%" y="319.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="40.5157%" y="309" width="0.0300%" height="15" fill="rgb(225,182,9)" fg:x="4054" fg:w="3"/><text x="40.7657%" y="319.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="40.5457%" y="309" width="0.0200%" height="15" fill="rgb(243,178,37)" fg:x="4057" fg:w="2"/><text x="40.7957%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="40.6256%" y="293" width="0.0300%" height="15" fill="rgb(232,139,19)" fg:x="4065" fg:w="3"/><text x="40.8756%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.06%)</title><rect x="40.6856%" y="277" width="0.0600%" height="15" fill="rgb(225,201,24)" fg:x="4071" fg:w="6"/><text x="40.9356%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="40.7456%" y="277" width="0.0200%" height="15" fill="rgb(221,47,46)" fg:x="4077" fg:w="2"/><text x="40.9956%" y="287.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.15%)</title><rect x="40.7655%" y="277" width="0.1499%" height="15" fill="rgb(249,23,13)" fg:x="4079" fg:w="15"/><text x="41.0155%" y="287.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="40.9155%" y="277" width="0.0200%" height="15" fill="rgb(219,9,5)" fg:x="4094" fg:w="2"/><text x="41.1655%" y="287.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="40.9354%" y="277" width="0.0200%" height="15" fill="rgb(254,171,16)" fg:x="4096" fg:w="2"/><text x="41.1854%" y="287.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.27%)</title><rect x="41.0354%" y="261" width="0.2698%" height="15" fill="rgb(230,171,20)" fg:x="4106" fg:w="27"/><text x="41.2854%" y="271.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (37 samples, 0.37%)</title><rect x="40.9554%" y="277" width="0.3698%" height="15" fill="rgb(210,71,41)" fg:x="4098" fg:w="37"/><text x="41.2054%" y="287.50"></text></g><g><title>oprf`hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="41.3052%" y="261" width="0.0200%" height="15" fill="rgb(206,173,20)" fg:x="4133" fg:w="2"/><text x="41.5552%" y="271.50"></text></g><g><title>oprf`ipa::helpers::gateway::send::GatewaySenders::get_or_create (66 samples, 0.66%)</title><rect x="40.6756%" y="293" width="0.6596%" height="15" fill="rgb(233,88,34)" fg:x="4070" fg:w="66"/><text x="40.9256%" y="303.50"></text></g><g><title>oprf`ipa::helpers::gateway::transport::RoleResolvingTransport&lt;T&gt;::role (3 samples, 0.03%)</title><rect x="41.3352%" y="293" width="0.0300%" height="15" fill="rgb(223,209,46)" fg:x="4136" fg:w="3"/><text x="41.5852%" y="303.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_sender (81 samples, 0.81%)</title><rect x="40.5657%" y="309" width="0.8095%" height="15" fill="rgb(250,43,18)" fg:x="4059" fg:w="81"/><text x="40.8157%" y="319.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::send_channel (93 samples, 0.93%)</title><rect x="40.4657%" y="325" width="0.9294%" height="15" fill="rgb(208,13,10)" fg:x="4049" fg:w="93"/><text x="40.7157%" y="335.50"></text></g><g><title>oprf`ipa::helpers::gateway::transport::RoleResolvingTransport&lt;T&gt;::role (2 samples, 0.02%)</title><rect x="41.3752%" y="309" width="0.0200%" height="15" fill="rgb(212,200,36)" fg:x="4140" fg:w="2"/><text x="41.6252%" y="319.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (29 samples, 0.29%)</title><rect x="41.3952%" y="325" width="0.2898%" height="15" fill="rgb(225,90,30)" fg:x="4142" fg:w="29"/><text x="41.6452%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (4 samples, 0.04%)</title><rect x="41.6950%" y="309" width="0.0400%" height="15" fill="rgb(236,182,39)" fg:x="4172" fg:w="4"/><text x="41.9450%" y="319.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (34 samples, 0.34%)</title><rect x="41.7450%" y="293" width="0.3398%" height="15" fill="rgb(212,144,35)" fg:x="4177" fg:w="34"/><text x="41.9950%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="42.0947%" y="277" width="0.0200%" height="15" fill="rgb(228,63,44)" fg:x="4212" fg:w="2"/><text x="42.3447%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="42.2147%" y="261" width="0.0200%" height="15" fill="rgb(228,109,6)" fg:x="4224" fg:w="2"/><text x="42.4647%" y="271.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="42.2347%" y="261" width="0.0200%" height="15" fill="rgb(238,117,24)" fg:x="4226" fg:w="2"/><text x="42.4847%" y="271.50"></text></g><g><title>oprf`_rjem_je_malloc_default (2 samples, 0.02%)</title><rect x="42.2546%" y="261" width="0.0200%" height="15" fill="rgb(242,26,26)" fg:x="4228" fg:w="2"/><text x="42.5046%" y="271.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (23 samples, 0.23%)</title><rect x="42.1147%" y="277" width="0.2299%" height="15" fill="rgb(221,92,48)" fg:x="4214" fg:w="23"/><text x="42.3647%" y="287.50"></text></g><g><title>oprf`_rjem_malloc (7 samples, 0.07%)</title><rect x="42.2746%" y="261" width="0.0700%" height="15" fill="rgb(209,209,32)" fg:x="4230" fg:w="7"/><text x="42.5246%" y="271.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (27 samples, 0.27%)</title><rect x="42.0847%" y="293" width="0.2698%" height="15" fill="rgb(221,70,22)" fg:x="4211" fg:w="27"/><text x="42.3347%" y="303.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (2 samples, 0.02%)</title><rect x="42.3646%" y="293" width="0.0200%" height="15" fill="rgb(248,145,5)" fg:x="4239" fg:w="2"/><text x="42.6146%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.04%)</title><rect x="42.4146%" y="277" width="0.0400%" height="15" fill="rgb(226,116,26)" fg:x="4244" fg:w="4"/><text x="42.6646%" y="287.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (70 samples, 0.70%)</title><rect x="42.4745%" y="261" width="0.6996%" height="15" fill="rgb(244,5,17)" fg:x="4250" fg:w="70"/><text x="42.7245%" y="271.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="43.1741%" y="261" width="0.0200%" height="15" fill="rgb(252,159,33)" fg:x="4320" fg:w="2"/><text x="43.4241%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (36 samples, 0.36%)</title><rect x="43.3640%" y="245" width="0.3598%" height="15" fill="rgb(206,71,0)" fg:x="4339" fg:w="36"/><text x="43.6140%" y="255.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (7 samples, 0.07%)</title><rect x="43.7338%" y="245" width="0.0700%" height="15" fill="rgb(233,118,54)" fg:x="4376" fg:w="7"/><text x="43.9838%" y="255.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (5 samples, 0.05%)</title><rect x="43.8037%" y="245" width="0.0500%" height="15" fill="rgb(234,83,48)" fg:x="4383" fg:w="5"/><text x="44.0537%" y="255.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="43.8637%" y="245" width="0.0200%" height="15" fill="rgb(228,3,54)" fg:x="4389" fg:w="2"/><text x="44.1137%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="43.9137%" y="229" width="0.0200%" height="15" fill="rgb(226,155,13)" fg:x="4394" fg:w="2"/><text x="44.1637%" y="239.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (75 samples, 0.75%)</title><rect x="43.2041%" y="261" width="0.7496%" height="15" fill="rgb(241,28,37)" fg:x="4323" fg:w="75"/><text x="43.4541%" y="271.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (7 samples, 0.07%)</title><rect x="43.8837%" y="245" width="0.0700%" height="15" fill="rgb(233,93,10)" fg:x="4391" fg:w="7"/><text x="44.1337%" y="255.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (155 samples, 1.55%)</title><rect x="42.4645%" y="277" width="1.5491%" height="15" fill="rgb(225,113,19)" fg:x="4249" fg:w="155"/><text x="42.7145%" y="287.50"></text></g><g><title>oprf`metrics::key::key_hasher_impl (6 samples, 0.06%)</title><rect x="43.9536%" y="261" width="0.0600%" height="15" fill="rgb(241,2,18)" fg:x="4398" fg:w="6"/><text x="44.2036%" y="271.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (231 samples, 2.31%)</title><rect x="41.7350%" y="309" width="2.3086%" height="15" fill="rgb(228,207,21)" fg:x="4176" fg:w="231"/><text x="41.9850%" y="319.50">o..</text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (166 samples, 1.66%)</title><rect x="42.3846%" y="293" width="1.6590%" height="15" fill="rgb(213,211,35)" fg:x="4241" fg:w="166"/><text x="42.6346%" y="303.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (3 samples, 0.03%)</title><rect x="44.0136%" y="277" width="0.0300%" height="15" fill="rgb(209,83,10)" fg:x="4404" fg:w="3"/><text x="44.2636%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.11%)</title><rect x="44.0736%" y="293" width="0.1099%" height="15" fill="rgb(209,164,1)" fg:x="4410" fg:w="11"/><text x="44.3236%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (4 samples, 0.04%)</title><rect x="44.1835%" y="293" width="0.0400%" height="15" fill="rgb(213,184,43)" fg:x="4421" fg:w="4"/><text x="44.4335%" y="303.50"></text></g><g><title>oprf`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.03%)</title><rect x="44.2335%" y="293" width="0.0300%" height="15" fill="rgb(231,61,34)" fg:x="4426" fg:w="3"/><text x="44.4835%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.19%)</title><rect x="44.3934%" y="277" width="0.1899%" height="15" fill="rgb(235,75,3)" fg:x="4442" fg:w="19"/><text x="44.6434%" y="287.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (4 samples, 0.04%)</title><rect x="44.5833%" y="277" width="0.0400%" height="15" fill="rgb(220,106,47)" fg:x="4461" fg:w="4"/><text x="44.8333%" y="287.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (61 samples, 0.61%)</title><rect x="44.0536%" y="309" width="0.6096%" height="15" fill="rgb(210,196,33)" fg:x="4408" fg:w="61"/><text x="44.3036%" y="319.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (40 samples, 0.40%)</title><rect x="44.2634%" y="293" width="0.3998%" height="15" fill="rgb(229,154,42)" fg:x="4429" fg:w="40"/><text x="44.5134%" y="303.50"></text></g><g><title>oprf`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.04%)</title><rect x="44.6232%" y="277" width="0.0400%" height="15" fill="rgb(228,114,26)" fg:x="4465" fg:w="4"/><text x="44.8732%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="44.7132%" y="293" width="0.0300%" height="15" fill="rgb(208,144,1)" fg:x="4474" fg:w="3"/><text x="44.9632%" y="303.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (308 samples, 3.08%)</title><rect x="41.6850%" y="325" width="3.0782%" height="15" fill="rgb(239,112,37)" fg:x="4171" fg:w="308"/><text x="41.9350%" y="335.50">opr..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (10 samples, 0.10%)</title><rect x="44.6632%" y="309" width="0.0999%" height="15" fill="rgb(210,96,50)" fg:x="4469" fg:w="10"/><text x="44.9132%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (2 samples, 0.02%)</title><rect x="44.7432%" y="293" width="0.0200%" height="15" fill="rgb(222,178,2)" fg:x="4477" fg:w="2"/><text x="44.9932%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="44.8531%" y="309" width="0.0400%" height="15" fill="rgb(226,74,18)" fg:x="4488" fg:w="4"/><text x="45.1031%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="44.9031%" y="293" width="0.0200%" height="15" fill="rgb(225,67,54)" fg:x="4493" fg:w="2"/><text x="45.1531%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.03%)</title><rect x="44.9530%" y="277" width="0.0300%" height="15" fill="rgb(251,92,32)" fg:x="4498" fg:w="3"/><text x="45.2030%" y="287.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::ordering_sender::Send&lt;M&gt; as core::future::future::Future&gt;::poll (10 samples, 0.10%)</title><rect x="44.8931%" y="309" width="0.0999%" height="15" fill="rgb(228,149,22)" fg:x="4492" fg:w="10"/><text x="45.1431%" y="319.50"></text></g><g><title>oprf`ipa::helpers::buffers::ordering_sender::Waiting::wake (5 samples, 0.05%)</title><rect x="44.9430%" y="293" width="0.0500%" height="15" fill="rgb(243,54,13)" fg:x="4497" fg:w="5"/><text x="45.1930%" y="303.50"></text></g><g><title>oprf`ipa::helpers::buffers::unordered_receiver::OperatingState&lt;S,C&gt;::wake_next (5 samples, 0.05%)</title><rect x="45.0430%" y="293" width="0.0500%" height="15" fill="rgb(243,180,28)" fg:x="4507" fg:w="5"/><text x="45.2930%" y="303.50"></text></g><g><title>oprf`tokio::runtime::task::waker::wake_by_val (4 samples, 0.04%)</title><rect x="45.0530%" y="277" width="0.0400%" height="15" fill="rgb(208,167,24)" fg:x="4508" fg:w="4"/><text x="45.3030%" y="287.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::unordered_receiver::Receiver&lt;S,C,M&gt; as core::future::future::Future&gt;::poll (11 samples, 0.11%)</title><rect x="44.9930%" y="309" width="0.1099%" height="15" fill="rgb(245,73,45)" fg:x="4502" fg:w="11"/><text x="45.2430%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (2 samples, 0.02%)</title><rect x="45.1029%" y="309" width="0.0200%" height="15" fill="rgb(237,203,48)" fg:x="4513" fg:w="2"/><text x="45.3529%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.07%)</title><rect x="45.1329%" y="293" width="0.0700%" height="15" fill="rgb(211,197,16)" fg:x="4516" fg:w="7"/><text x="45.3829%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (4 samples, 0.04%)</title><rect x="45.2029%" y="293" width="0.0400%" height="15" fill="rgb(243,99,51)" fg:x="4523" fg:w="4"/><text x="45.4529%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (13 samples, 0.13%)</title><rect x="45.2429%" y="293" width="0.1299%" height="15" fill="rgb(215,123,29)" fg:x="4527" fg:w="13"/><text x="45.4929%" y="303.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (8 samples, 0.08%)</title><rect x="45.2928%" y="277" width="0.0800%" height="15" fill="rgb(239,186,37)" fg:x="4532" fg:w="8"/><text x="45.5428%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (8 samples, 0.08%)</title><rect x="45.3728%" y="293" width="0.0800%" height="15" fill="rgb(252,136,39)" fg:x="4540" fg:w="8"/><text x="45.6228%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (6 samples, 0.06%)</title><rect x="45.5227%" y="277" width="0.0600%" height="15" fill="rgb(223,213,32)" fg:x="4555" fg:w="6"/><text x="45.7727%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (46 samples, 0.46%)</title><rect x="45.1329%" y="309" width="0.4597%" height="15" fill="rgb(233,115,5)" fg:x="4516" fg:w="46"/><text x="45.3829%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_enter (13 samples, 0.13%)</title><rect x="45.4627%" y="293" width="0.1299%" height="15" fill="rgb(207,226,44)" fg:x="4549" fg:w="13"/><text x="45.7127%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.04%)</title><rect x="45.5926%" y="293" width="0.0400%" height="15" fill="rgb(208,126,0)" fg:x="4562" fg:w="4"/><text x="45.8426%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="45.6326%" y="293" width="0.0400%" height="15" fill="rgb(244,66,21)" fg:x="4566" fg:w="4"/><text x="45.8826%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="45.6726%" y="293" width="0.0200%" height="15" fill="rgb(222,97,12)" fg:x="4570" fg:w="2"/><text x="45.9226%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="45.7625%" y="261" width="0.0300%" height="15" fill="rgb(219,213,19)" fg:x="4579" fg:w="3"/><text x="46.0125%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="45.8025%" y="245" width="0.0600%" height="15" fill="rgb(252,169,30)" fg:x="4583" fg:w="6"/><text x="46.0525%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.05%)</title><rect x="45.8625%" y="229" width="0.0500%" height="15" fill="rgb(206,32,51)" fg:x="4589" fg:w="5"/><text x="46.1125%" y="239.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (15 samples, 0.15%)</title><rect x="45.8625%" y="245" width="0.1499%" height="15" fill="rgb(250,172,42)" fg:x="4589" fg:w="15"/><text x="46.1125%" y="255.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (9 samples, 0.09%)</title><rect x="45.9224%" y="229" width="0.0899%" height="15" fill="rgb(209,34,43)" fg:x="4595" fg:w="9"/><text x="46.1724%" y="239.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="45.9924%" y="213" width="0.0200%" height="15" fill="rgb(223,11,35)" fg:x="4602" fg:w="2"/><text x="46.2424%" y="223.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (29 samples, 0.29%)</title><rect x="45.7625%" y="277" width="0.2898%" height="15" fill="rgb(251,219,26)" fg:x="4579" fg:w="29"/><text x="46.0125%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (26 samples, 0.26%)</title><rect x="45.7925%" y="261" width="0.2598%" height="15" fill="rgb(231,119,3)" fg:x="4582" fg:w="26"/><text x="46.0425%" y="271.50"></text></g><g><title>oprf`tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="46.0324%" y="245" width="0.0200%" height="15" fill="rgb(216,97,11)" fg:x="4606" fg:w="2"/><text x="46.2824%" y="255.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="46.0524%" y="277" width="0.0200%" height="15" fill="rgb(223,59,9)" fg:x="4608" fg:w="2"/><text x="46.3024%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (41 samples, 0.41%)</title><rect x="45.6926%" y="293" width="0.4098%" height="15" fill="rgb(233,93,31)" fg:x="4572" fg:w="41"/><text x="45.9426%" y="303.50"></text></g><g><title>oprf`tracing_core::dispatcher::get_default (3 samples, 0.03%)</title><rect x="46.0724%" y="277" width="0.0300%" height="15" fill="rgb(239,81,33)" fg:x="4610" fg:w="3"/><text x="46.3224%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="46.1123%" y="277" width="0.0200%" height="15" fill="rgb(213,120,34)" fg:x="4614" fg:w="2"/><text x="46.3623%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (64 samples, 0.64%)</title><rect x="45.5926%" y="309" width="0.6396%" height="15" fill="rgb(243,49,53)" fg:x="4562" fg:w="64"/><text x="45.8426%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_exit (12 samples, 0.12%)</title><rect x="46.1123%" y="293" width="0.1199%" height="15" fill="rgb(247,216,33)" fg:x="4614" fg:w="12"/><text x="46.3623%" y="303.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (10 samples, 0.10%)</title><rect x="46.1323%" y="277" width="0.0999%" height="15" fill="rgb(226,26,14)" fg:x="4616" fg:w="10"/><text x="46.3823%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (9 samples, 0.09%)</title><rect x="46.1423%" y="261" width="0.0899%" height="15" fill="rgb(215,49,53)" fg:x="4617" fg:w="9"/><text x="46.3923%" y="271.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (2 samples, 0.02%)</title><rect x="46.2323%" y="309" width="0.0200%" height="15" fill="rgb(245,162,40)" fg:x="4626" fg:w="2"/><text x="46.4823%" y="319.50"></text></g><g><title>oprf`_rjem_je_sdallocx_default (3 samples, 0.03%)</title><rect x="46.2522%" y="309" width="0.0300%" height="15" fill="rgb(229,68,17)" fg:x="4628" fg:w="3"/><text x="46.5022%" y="319.50"></text></g><g><title>oprf`_rjem_je_tcache_bin_flush_small (3 samples, 0.03%)</title><rect x="46.2522%" y="293" width="0.0300%" height="15" fill="rgb(213,182,10)" fg:x="4628" fg:w="3"/><text x="46.5022%" y="303.50"></text></g><g><title>oprf`tcache_bin_flush_edatas_lookup (2 samples, 0.02%)</title><rect x="46.2622%" y="277" width="0.0200%" height="15" fill="rgb(245,125,30)" fg:x="4629" fg:w="2"/><text x="46.5122%" y="287.50"></text></g><g><title>oprf`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (154 samples, 1.54%)</title><rect x="44.7631%" y="325" width="1.5391%" height="15" fill="rgb(232,202,2)" fg:x="4479" fg:w="154"/><text x="45.0131%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (2 samples, 0.02%)</title><rect x="46.3122%" y="325" width="0.0200%" height="15" fill="rgb(237,140,51)" fg:x="4634" fg:w="2"/><text x="46.5622%" y="335.50"></text></g><g><title>oprf`_rjem_je_sdallocx_default (3 samples, 0.03%)</title><rect x="46.3622%" y="325" width="0.0300%" height="15" fill="rgb(236,157,25)" fg:x="4639" fg:w="3"/><text x="46.6122%" y="335.50"></text></g><g><title>oprf`_rjem_je_tcache_bin_flush_small (3 samples, 0.03%)</title><rect x="46.3622%" y="309" width="0.0300%" height="15" fill="rgb(219,209,0)" fg:x="4639" fg:w="3"/><text x="46.6122%" y="319.50"></text></g><g><title>oprf`_rjem_malloc (7 samples, 0.07%)</title><rect x="46.3922%" y="325" width="0.0700%" height="15" fill="rgb(240,116,54)" fg:x="4642" fg:w="7"/><text x="46.6422%" y="335.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="46.4621%" y="325" width="0.0200%" height="15" fill="rgb(216,10,36)" fg:x="4649" fg:w="2"/><text x="46.7121%" y="335.50"></text></g><g><title>oprf`aes::soft::fixslice::aes256_encrypt (3 samples, 0.03%)</title><rect x="46.4821%" y="325" width="0.0300%" height="15" fill="rgb(222,72,44)" fg:x="4651" fg:w="3"/><text x="46.7321%" y="335.50"></text></g><g><title>oprf`alloc::sync::Weak&lt;T,A&gt;::upgrade (2 samples, 0.02%)</title><rect x="46.5121%" y="325" width="0.0200%" height="15" fill="rgb(232,159,9)" fg:x="4654" fg:w="2"/><text x="46.7621%" y="335.50"></text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (11 samples, 0.11%)</title><rect x="46.5521%" y="309" width="0.1099%" height="15" fill="rgb(210,39,32)" fg:x="4658" fg:w="11"/><text x="46.8021%" y="319.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (93 samples, 0.93%)</title><rect x="46.5321%" y="325" width="0.9294%" height="15" fill="rgb(216,194,45)" fg:x="4656" fg:w="93"/><text x="46.7821%" y="335.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (80 samples, 0.80%)</title><rect x="46.6620%" y="309" width="0.7995%" height="15" fill="rgb(218,18,35)" fg:x="4669" fg:w="80"/><text x="46.9120%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="47.5115%" y="309" width="0.0400%" height="15" fill="rgb(207,83,51)" fg:x="4754" fg:w="4"/><text x="47.7615%" y="319.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics::key::Key&gt; (6 samples, 0.06%)</title><rect x="47.5015%" y="325" width="0.0600%" height="15" fill="rgb(225,63,43)" fg:x="4753" fg:w="6"/><text x="47.7515%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="47.5715%" y="293" width="0.0200%" height="15" fill="rgb(207,57,36)" fg:x="4760" fg:w="2"/><text x="47.8215%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (2 samples, 0.02%)</title><rect x="47.5914%" y="293" width="0.0200%" height="15" fill="rgb(216,99,33)" fg:x="4762" fg:w="2"/><text x="47.8414%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.05%)</title><rect x="47.6214%" y="277" width="0.0500%" height="15" fill="rgb(225,42,16)" fg:x="4765" fg:w="5"/><text x="47.8714%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="47.6814%" y="261" width="0.0600%" height="15" fill="rgb(220,201,45)" fg:x="4771" fg:w="6"/><text x="47.9314%" y="271.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="47.7414%" y="261" width="0.0200%" height="15" fill="rgb(225,33,4)" fg:x="4777" fg:w="2"/><text x="47.9914%" y="271.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (5 samples, 0.05%)</title><rect x="47.7613%" y="261" width="0.0500%" height="15" fill="rgb(224,33,50)" fg:x="4779" fg:w="5"/><text x="48.0113%" y="271.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="47.8113%" y="261" width="0.0200%" height="15" fill="rgb(246,198,51)" fg:x="4784" fg:w="2"/><text x="48.0613%" y="271.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (2 samples, 0.02%)</title><rect x="47.8313%" y="261" width="0.0200%" height="15" fill="rgb(205,22,4)" fg:x="4786" fg:w="2"/><text x="48.0813%" y="271.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="47.8813%" y="245" width="0.0200%" height="15" fill="rgb(206,3,8)" fg:x="4791" fg:w="2"/><text x="48.1313%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (3 samples, 0.03%)</title><rect x="47.9113%" y="229" width="0.0300%" height="15" fill="rgb(251,23,15)" fg:x="4794" fg:w="3"/><text x="48.1613%" y="239.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (29 samples, 0.29%)</title><rect x="47.6714%" y="277" width="0.2898%" height="15" fill="rgb(252,88,28)" fg:x="4770" fg:w="29"/><text x="47.9214%" y="287.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_close (11 samples, 0.11%)</title><rect x="47.8513%" y="261" width="0.1099%" height="15" fill="rgb(212,127,14)" fg:x="4788" fg:w="11"/><text x="48.1013%" y="271.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (6 samples, 0.06%)</title><rect x="47.9013%" y="245" width="0.0600%" height="15" fill="rgb(247,145,37)" fg:x="4793" fg:w="6"/><text x="48.1513%" y="255.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (36 samples, 0.36%)</title><rect x="47.6114%" y="293" width="0.3598%" height="15" fill="rgb(209,117,53)" fg:x="4764" fg:w="36"/><text x="47.8614%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (2 samples, 0.02%)</title><rect x="47.9812%" y="293" width="0.0200%" height="15" fill="rgb(212,90,42)" fg:x="4801" fg:w="2"/><text x="48.2312%" y="303.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="48.0512%" y="261" width="0.0200%" height="15" fill="rgb(218,164,37)" fg:x="4808" fg:w="2"/><text x="48.3012%" y="271.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_tracing_context::tracing_integration::Labels&gt; (5 samples, 0.05%)</title><rect x="48.0712%" y="261" width="0.0500%" height="15" fill="rgb(246,65,34)" fg:x="4810" fg:w="5"/><text x="48.3212%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (6 samples, 0.06%)</title><rect x="48.1411%" y="245" width="0.0600%" height="15" fill="rgb(231,100,33)" fg:x="4817" fg:w="6"/><text x="48.3911%" y="255.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (3 samples, 0.03%)</title><rect x="48.2011%" y="245" width="0.0300%" height="15" fill="rgb(228,126,14)" fg:x="4823" fg:w="3"/><text x="48.4511%" y="255.50"></text></g><g><title>oprf`_rjem_je_sdallocx_default (5 samples, 0.05%)</title><rect x="48.2311%" y="245" width="0.0500%" height="15" fill="rgb(215,173,21)" fg:x="4826" fg:w="5"/><text x="48.4811%" y="255.50"></text></g><g><title>oprf`_rjem_je_tcache_bin_flush_small (4 samples, 0.04%)</title><rect x="48.2411%" y="229" width="0.0400%" height="15" fill="rgb(210,6,40)" fg:x="4827" fg:w="4"/><text x="48.4911%" y="239.50"></text></g><g><title>oprf`_rjem_sdallocx (8 samples, 0.08%)</title><rect x="48.2810%" y="245" width="0.0800%" height="15" fill="rgb(212,48,18)" fg:x="4831" fg:w="8"/><text x="48.5310%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="48.4010%" y="213" width="0.0200%" height="15" fill="rgb(230,214,11)" fg:x="4843" fg:w="2"/><text x="48.6510%" y="223.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (39 samples, 0.39%)</title><rect x="48.0512%" y="277" width="0.3898%" height="15" fill="rgb(254,105,39)" fg:x="4808" fg:w="39"/><text x="48.3012%" y="287.50"></text></g><g><title>oprf`hashbrown::raw::RawTable&lt;T,A&gt;::clear (31 samples, 0.31%)</title><rect x="48.1311%" y="261" width="0.3098%" height="15" fill="rgb(245,158,5)" fg:x="4816" fg:w="31"/><text x="48.3811%" y="271.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_tracing_context::tracing_integration::Labels&gt; (8 samples, 0.08%)</title><rect x="48.3610%" y="245" width="0.0800%" height="15" fill="rgb(249,208,11)" fg:x="4839" fg:w="8"/><text x="48.6110%" y="255.50"></text></g><g><title>oprf`core::ops::function::Fn::call (4 samples, 0.04%)</title><rect x="48.4010%" y="229" width="0.0400%" height="15" fill="rgb(210,39,28)" fg:x="4843" fg:w="4"/><text x="48.6510%" y="239.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="48.4209%" y="213" width="0.0200%" height="15" fill="rgb(211,56,53)" fg:x="4845" fg:w="2"/><text x="48.6709%" y="223.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (44 samples, 0.44%)</title><rect x="48.0112%" y="293" width="0.4397%" height="15" fill="rgb(226,201,30)" fg:x="4804" fg:w="44"/><text x="48.2612%" y="303.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_remote (3 samples, 0.03%)</title><rect x="48.4509%" y="293" width="0.0300%" height="15" fill="rgb(239,101,34)" fg:x="4848" fg:w="3"/><text x="48.7009%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (3 samples, 0.03%)</title><rect x="48.4509%" y="277" width="0.0300%" height="15" fill="rgb(226,209,5)" fg:x="4848" fg:w="3"/><text x="48.7009%" y="287.50"></text></g><g><title>oprf`hashbrown::raw::RawTable&lt;T,A&gt;::clear (3 samples, 0.03%)</title><rect x="48.4509%" y="261" width="0.0300%" height="15" fill="rgb(250,105,47)" fg:x="4848" fg:w="3"/><text x="48.7009%" y="271.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="48.4609%" y="245" width="0.0200%" height="15" fill="rgb(230,72,3)" fg:x="4849" fg:w="2"/><text x="48.7109%" y="255.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (93 samples, 0.93%)</title><rect x="47.5715%" y="309" width="0.9294%" height="15" fill="rgb(232,218,39)" fg:x="4760" fg:w="93"/><text x="47.8215%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="48.4809%" y="293" width="0.0200%" height="15" fill="rgb(248,166,6)" fg:x="4851" fg:w="2"/><text x="48.7309%" y="303.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (96 samples, 0.96%)</title><rect x="47.5615%" y="325" width="0.9594%" height="15" fill="rgb(247,89,20)" fg:x="4759" fg:w="96"/><text x="47.8115%" y="335.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (2 samples, 0.02%)</title><rect x="48.5009%" y="309" width="0.0200%" height="15" fill="rgb(248,130,54)" fg:x="4853" fg:w="2"/><text x="48.7509%" y="319.50"></text></g><g><title>oprf`generic_array::functional::FunctionalSequence::map (3 samples, 0.03%)</title><rect x="48.5209%" y="325" width="0.0300%" height="15" fill="rgb(234,196,4)" fg:x="4855" fg:w="3"/><text x="48.7709%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (7 samples, 0.07%)</title><rect x="48.6408%" y="309" width="0.0700%" height="15" fill="rgb(250,143,31)" fg:x="4867" fg:w="7"/><text x="48.8908%" y="319.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (23 samples, 0.23%)</title><rect x="48.7108%" y="309" width="0.2299%" height="15" fill="rgb(211,110,34)" fg:x="4874" fg:w="23"/><text x="48.9608%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (4 samples, 0.04%)</title><rect x="48.9506%" y="293" width="0.0400%" height="15" fill="rgb(215,124,48)" fg:x="4898" fg:w="4"/><text x="49.2006%" y="303.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (16 samples, 0.16%)</title><rect x="49.0206%" y="277" width="0.1599%" height="15" fill="rgb(216,46,13)" fg:x="4905" fg:w="16"/><text x="49.2706%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="49.2105%" y="261" width="0.0200%" height="15" fill="rgb(205,184,25)" fg:x="4924" fg:w="2"/><text x="49.4605%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="49.3604%" y="245" width="0.0200%" height="15" fill="rgb(228,1,10)" fg:x="4939" fg:w="2"/><text x="49.6104%" y="255.50"></text></g><g><title>oprf`_rjem_je_malloc_default (3 samples, 0.03%)</title><rect x="49.3804%" y="245" width="0.0300%" height="15" fill="rgb(213,116,27)" fg:x="4941" fg:w="3"/><text x="49.6304%" y="255.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (25 samples, 0.25%)</title><rect x="49.1805%" y="277" width="0.2499%" height="15" fill="rgb(241,95,50)" fg:x="4921" fg:w="25"/><text x="49.4305%" y="287.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (20 samples, 0.20%)</title><rect x="49.2305%" y="261" width="0.1999%" height="15" fill="rgb(238,48,32)" fg:x="4926" fg:w="20"/><text x="49.4805%" y="271.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="49.4104%" y="245" width="0.0200%" height="15" fill="rgb(235,113,49)" fg:x="4944" fg:w="2"/><text x="49.6604%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.06%)</title><rect x="49.4403%" y="261" width="0.0600%" height="15" fill="rgb(205,127,43)" fg:x="4947" fg:w="6"/><text x="49.6903%" y="271.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 0.33%)</title><rect x="49.5203%" y="245" width="0.3298%" height="15" fill="rgb(250,162,2)" fg:x="4955" fg:w="33"/><text x="49.7703%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (18 samples, 0.18%)</title><rect x="49.9300%" y="229" width="0.1799%" height="15" fill="rgb(220,13,41)" fg:x="4996" fg:w="18"/><text x="50.1800%" y="239.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="50.1199%" y="229" width="0.0200%" height="15" fill="rgb(249,221,25)" fg:x="5015" fg:w="2"/><text x="50.3699%" y="239.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="50.1399%" y="229" width="0.0200%" height="15" fill="rgb(215,208,19)" fg:x="5017" fg:w="2"/><text x="50.3899%" y="239.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (39 samples, 0.39%)</title><rect x="49.8601%" y="245" width="0.3898%" height="15" fill="rgb(236,175,2)" fg:x="4989" fg:w="39"/><text x="50.1101%" y="255.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (7 samples, 0.07%)</title><rect x="50.1799%" y="229" width="0.0700%" height="15" fill="rgb(241,52,2)" fg:x="5021" fg:w="7"/><text x="50.4299%" y="239.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="50.2299%" y="213" width="0.0200%" height="15" fill="rgb(248,140,14)" fg:x="5026" fg:w="2"/><text x="50.4799%" y="223.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (78 samples, 0.78%)</title><rect x="49.5003%" y="261" width="0.7795%" height="15" fill="rgb(253,22,42)" fg:x="4953" fg:w="78"/><text x="49.7503%" y="271.50"></text></g><g><title>oprf`metrics::key::key_hasher_impl (3 samples, 0.03%)</title><rect x="50.2499%" y="245" width="0.0300%" height="15" fill="rgb(234,61,47)" fg:x="5028" fg:w="3"/><text x="50.4999%" y="255.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (132 samples, 1.32%)</title><rect x="48.9906%" y="293" width="1.3192%" height="15" fill="rgb(208,226,15)" fg:x="4902" fg:w="132"/><text x="49.2406%" y="303.50"></text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (88 samples, 0.88%)</title><rect x="49.4303%" y="277" width="0.8795%" height="15" fill="rgb(217,221,4)" fg:x="4946" fg:w="88"/><text x="49.6803%" y="287.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (3 samples, 0.03%)</title><rect x="50.2798%" y="261" width="0.0300%" height="15" fill="rgb(212,174,34)" fg:x="5031" fg:w="3"/><text x="50.5298%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="50.3598%" y="277" width="0.0400%" height="15" fill="rgb(253,83,4)" fg:x="5039" fg:w="4"/><text x="50.6098%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.12%)</title><rect x="50.5097%" y="261" width="0.1199%" height="15" fill="rgb(250,195,49)" fg:x="5054" fg:w="12"/><text x="50.7597%" y="271.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (3 samples, 0.03%)</title><rect x="50.6296%" y="261" width="0.0300%" height="15" fill="rgb(241,192,25)" fg:x="5066" fg:w="3"/><text x="50.8796%" y="271.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (25 samples, 0.25%)</title><rect x="50.4297%" y="277" width="0.2499%" height="15" fill="rgb(208,124,10)" fg:x="5046" fg:w="25"/><text x="50.6797%" y="287.50"></text></g><g><title>oprf`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="50.6596%" y="261" width="0.0200%" height="15" fill="rgb(222,33,0)" fg:x="5069" fg:w="2"/><text x="50.9096%" y="271.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (36 samples, 0.36%)</title><rect x="50.3398%" y="293" width="0.3598%" height="15" fill="rgb(234,209,28)" fg:x="5037" fg:w="36"/><text x="50.5898%" y="303.50"></text></g><g><title>oprf`metrics::key::Key::get_hash (2 samples, 0.02%)</title><rect x="50.6796%" y="277" width="0.0200%" height="15" fill="rgb(224,11,23)" fg:x="5071" fg:w="2"/><text x="50.9296%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="50.6996%" y="277" width="0.0200%" height="15" fill="rgb(232,99,1)" fg:x="5073" fg:w="2"/><text x="50.9496%" y="287.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (179 samples, 1.79%)</title><rect x="48.9406%" y="309" width="1.7889%" height="15" fill="rgb(237,95,45)" fg:x="4897" fg:w="179"/><text x="49.1906%" y="319.50">o..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (3 samples, 0.03%)</title><rect x="50.6996%" y="293" width="0.0300%" height="15" fill="rgb(208,109,11)" fg:x="5073" fg:w="3"/><text x="50.9496%" y="303.50"></text></g><g><title>oprf`_rjem_malloc (10 samples, 0.10%)</title><rect x="50.7296%" y="309" width="0.0999%" height="15" fill="rgb(216,190,48)" fg:x="5076" fg:w="10"/><text x="50.9796%" y="319.50"></text></g><g><title>oprf`aes::soft::fixslice::aes256_encrypt (249 samples, 2.49%)</title><rect x="50.8295%" y="309" width="2.4885%" height="15" fill="rgb(251,171,36)" fg:x="5086" fg:w="249"/><text x="51.0795%" y="319.50">op..</text></g><g><title>oprf`aes::soft::fixslice::bitslice (11 samples, 0.11%)</title><rect x="53.3180%" y="309" width="0.1099%" height="15" fill="rgb(230,62,22)" fg:x="5335" fg:w="11"/><text x="53.5680%" y="319.50"></text></g><g><title>oprf`aes::soft::fixslice::sub_bytes (171 samples, 1.71%)</title><rect x="53.4279%" y="309" width="1.7090%" height="15" fill="rgb(225,114,35)" fg:x="5346" fg:w="171"/><text x="53.6779%" y="319.50"></text></g><g><title>oprf`ipa::protocol::prss::crypto::SharedRandomness::generate_fields (665 samples, 6.65%)</title><rect x="48.5609%" y="325" width="6.6460%" height="15" fill="rgb(215,118,42)" fg:x="4859" fg:w="665"/><text x="48.8109%" y="335.50">oprf`ipa:..</text></g><g><title>oprf`metrics::key::Key::builder (6 samples, 0.06%)</title><rect x="55.1469%" y="309" width="0.0600%" height="15" fill="rgb(243,119,21)" fg:x="5518" fg:w="6"/><text x="55.3969%" y="319.50"></text></g><g><title>oprf`metrics::key::Key::builder (6 samples, 0.06%)</title><rect x="55.2069%" y="325" width="0.0600%" height="15" fill="rgb(252,177,53)" fg:x="5524" fg:w="6"/><text x="55.4569%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="55.5866%" y="277" width="0.0600%" height="15" fill="rgb(237,209,29)" fg:x="5562" fg:w="6"/><text x="55.8366%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (9 samples, 0.09%)</title><rect x="55.6466%" y="277" width="0.0899%" height="15" fill="rgb(212,65,23)" fg:x="5568" fg:w="9"/><text x="55.8966%" y="287.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as core::default::Default&gt;::default (115 samples, 1.15%)</title><rect x="55.8965%" y="261" width="1.1493%" height="15" fill="rgb(230,222,46)" fg:x="5593" fg:w="115"/><text x="56.1465%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="57.2057%" y="165" width="0.0200%" height="15" fill="rgb(215,135,32)" fg:x="5724" fg:w="2"/><text x="57.4557%" y="175.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="57.1957%" y="197" width="0.0400%" height="15" fill="rgb(246,101,22)" fg:x="5723" fg:w="4"/><text x="57.4457%" y="207.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="57.1957%" y="181" width="0.0400%" height="15" fill="rgb(206,107,13)" fg:x="5723" fg:w="4"/><text x="57.4457%" y="191.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.12%)</title><rect x="57.1257%" y="213" width="0.1199%" height="15" fill="rgb(250,100,44)" fg:x="5716" fg:w="12"/><text x="57.3757%" y="223.50"></text></g><g><title>oprf`DYLD-STUB$$memcpy (2 samples, 0.02%)</title><rect x="57.2457%" y="213" width="0.0200%" height="15" fill="rgb(231,147,38)" fg:x="5728" fg:w="2"/><text x="57.4957%" y="223.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as tracing_core::field::Visit&gt;::record_debug (23 samples, 0.23%)</title><rect x="57.0458%" y="261" width="0.2299%" height="15" fill="rgb(229,8,40)" fg:x="5708" fg:w="23"/><text x="57.2958%" y="271.50"></text></g><g><title>oprf`alloc::fmt::format::format_inner (22 samples, 0.22%)</title><rect x="57.0558%" y="245" width="0.2199%" height="15" fill="rgb(221,135,30)" fg:x="5709" fg:w="22"/><text x="57.3058%" y="255.50"></text></g><g><title>oprf`core::fmt::write (18 samples, 0.18%)</title><rect x="57.0957%" y="229" width="0.1799%" height="15" fill="rgb(249,193,18)" fg:x="5713" fg:w="18"/><text x="57.3457%" y="239.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (3 samples, 0.03%)</title><rect x="57.2756%" y="261" width="0.0300%" height="15" fill="rgb(209,133,39)" fg:x="5731" fg:w="3"/><text x="57.5256%" y="271.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (3 samples, 0.03%)</title><rect x="57.3156%" y="261" width="0.0300%" height="15" fill="rgb(232,100,14)" fg:x="5735" fg:w="3"/><text x="57.5656%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="57.3556%" y="245" width="0.0200%" height="15" fill="rgb(224,185,1)" fg:x="5739" fg:w="2"/><text x="57.6056%" y="255.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (168 samples, 1.68%)</title><rect x="55.7565%" y="277" width="1.6790%" height="15" fill="rgb(223,139,8)" fg:x="5579" fg:w="168"/><text x="56.0065%" y="287.50"></text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (8 samples, 0.08%)</title><rect x="57.3556%" y="261" width="0.0800%" height="15" fill="rgb(232,213,38)" fg:x="5739" fg:w="8"/><text x="57.6056%" y="271.50"></text></g><g><title>oprf`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.04%)</title><rect x="57.3956%" y="245" width="0.0400%" height="15" fill="rgb(207,94,22)" fg:x="5743" fg:w="4"/><text x="57.6456%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (4 samples, 0.04%)</title><rect x="57.4955%" y="261" width="0.0400%" height="15" fill="rgb(219,183,54)" fg:x="5753" fg:w="4"/><text x="57.7455%" y="271.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (2 samples, 0.02%)</title><rect x="57.5355%" y="261" width="0.0200%" height="15" fill="rgb(216,185,54)" fg:x="5757" fg:w="2"/><text x="57.7855%" y="271.50"></text></g><g><title>oprf`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="57.5655%" y="261" width="0.0200%" height="15" fill="rgb(254,217,39)" fg:x="5760" fg:w="2"/><text x="57.8155%" y="271.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (6 samples, 0.06%)</title><rect x="57.5854%" y="261" width="0.0600%" height="15" fill="rgb(240,178,23)" fg:x="5762" fg:w="6"/><text x="57.8354%" y="271.50"></text></g><g><title>oprf`&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="57.8153%" y="213" width="0.0200%" height="15" fill="rgb(218,11,47)" fg:x="5785" fg:w="2"/><text x="58.0653%" y="223.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.03%)</title><rect x="57.9053%" y="197" width="0.0300%" height="15" fill="rgb(218,51,51)" fg:x="5794" fg:w="3"/><text x="58.1553%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.09%)</title><rect x="58.1151%" y="181" width="0.0899%" height="15" fill="rgb(238,126,27)" fg:x="5815" fg:w="9"/><text x="58.3651%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="58.2451%" y="133" width="0.0200%" height="15" fill="rgb(249,202,22)" fg:x="5828" fg:w="2"/><text x="58.4951%" y="143.50"></text></g><g><title>oprf`_rjem_realloc (2 samples, 0.02%)</title><rect x="58.2650%" y="133" width="0.0200%" height="15" fill="rgb(254,195,49)" fg:x="5830" fg:w="2"/><text x="58.5150%" y="143.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (10 samples, 0.10%)</title><rect x="58.3150%" y="117" width="0.0999%" height="15" fill="rgb(208,123,14)" fg:x="5835" fg:w="10"/><text x="58.5650%" y="127.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (4 samples, 0.04%)</title><rect x="58.3750%" y="101" width="0.0400%" height="15" fill="rgb(224,200,8)" fg:x="5841" fg:w="4"/><text x="58.6250%" y="111.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (22 samples, 0.22%)</title><rect x="58.2151%" y="149" width="0.2199%" height="15" fill="rgb(217,61,36)" fg:x="5825" fg:w="22"/><text x="58.4651%" y="159.50"></text></g><g><title>oprf`do_rallocx (15 samples, 0.15%)</title><rect x="58.2850%" y="133" width="0.1499%" height="15" fill="rgb(206,35,45)" fg:x="5832" fg:w="15"/><text x="58.5350%" y="143.50"></text></g><g><title>oprf`_rjem_je_hook_invoke_dalloc (2 samples, 0.02%)</title><rect x="58.4150%" y="117" width="0.0200%" height="15" fill="rgb(217,65,33)" fg:x="5845" fg:w="2"/><text x="58.6650%" y="127.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.23%)</title><rect x="58.2151%" y="165" width="0.2299%" height="15" fill="rgb(222,158,48)" fg:x="5825" fg:w="23"/><text x="58.4651%" y="175.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 0.25%)</title><rect x="58.2051%" y="181" width="0.2499%" height="15" fill="rgb(254,2,54)" fg:x="5824" fg:w="25"/><text x="58.4551%" y="191.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="58.4549%" y="181" width="0.0300%" height="15" fill="rgb(250,143,38)" fg:x="5849" fg:w="3"/><text x="58.7049%" y="191.50"></text></g><g><title>oprf`core::fmt::Formatter::pad (2 samples, 0.02%)</title><rect x="58.7148%" y="149" width="0.0200%" height="15" fill="rgb(248,25,0)" fg:x="5875" fg:w="2"/><text x="58.9648%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.05%)</title><rect x="58.7847%" y="133" width="0.0500%" height="15" fill="rgb(206,152,27)" fg:x="5882" fg:w="5"/><text x="59.0347%" y="143.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.03%)</title><rect x="58.8347%" y="133" width="0.0300%" height="15" fill="rgb(240,77,30)" fg:x="5887" fg:w="3"/><text x="59.0847%" y="143.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (20 samples, 0.20%)</title><rect x="58.6848%" y="165" width="0.1999%" height="15" fill="rgb(231,5,3)" fg:x="5872" fg:w="20"/><text x="58.9348%" y="175.50"></text></g><g><title>oprf`core::fmt::write (15 samples, 0.15%)</title><rect x="58.7348%" y="149" width="0.1499%" height="15" fill="rgb(207,226,32)" fg:x="5877" fg:w="15"/><text x="58.9848%" y="159.50"></text></g><g><title>oprf`core::fmt::Formatter::write_fmt (12 samples, 0.12%)</title><rect x="58.8847%" y="165" width="0.1199%" height="15" fill="rgb(222,207,47)" fg:x="5892" fg:w="12"/><text x="59.1347%" y="175.50"></text></g><g><title>oprf`core::fmt::write (3 samples, 0.03%)</title><rect x="59.0046%" y="165" width="0.0300%" height="15" fill="rgb(229,115,45)" fg:x="5904" fg:w="3"/><text x="59.2546%" y="175.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.05%)</title><rect x="59.2744%" y="149" width="0.0500%" height="15" fill="rgb(224,191,6)" fg:x="5931" fg:w="5"/><text x="59.5244%" y="159.50"></text></g><g><title>oprf`&lt;char as core::fmt::Display&gt;::fmt (4 samples, 0.04%)</title><rect x="59.3244%" y="149" width="0.0400%" height="15" fill="rgb(230,227,24)" fg:x="5936" fg:w="4"/><text x="59.5744%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.09%)</title><rect x="59.5343%" y="133" width="0.0899%" height="15" fill="rgb(228,80,19)" fg:x="5957" fg:w="9"/><text x="59.7843%" y="143.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_char (2 samples, 0.02%)</title><rect x="59.6242%" y="133" width="0.0200%" height="15" fill="rgb(247,229,0)" fg:x="5966" fg:w="2"/><text x="59.8742%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="59.7841%" y="85" width="0.0400%" height="15" fill="rgb(237,194,15)" fg:x="5982" fg:w="4"/><text x="60.0341%" y="95.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="59.8241%" y="85" width="0.0200%" height="15" fill="rgb(219,203,20)" fg:x="5986" fg:w="2"/><text x="60.0741%" y="95.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="59.8541%" y="85" width="0.0300%" height="15" fill="rgb(234,128,8)" fg:x="5989" fg:w="3"/><text x="60.1041%" y="95.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (7 samples, 0.07%)</title><rect x="59.9141%" y="69" width="0.0700%" height="15" fill="rgb(248,202,8)" fg:x="5995" fg:w="7"/><text x="60.1641%" y="79.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (3 samples, 0.03%)</title><rect x="59.9540%" y="53" width="0.0300%" height="15" fill="rgb(206,104,37)" fg:x="5999" fg:w="3"/><text x="60.2040%" y="63.50"></text></g><g><title>oprf`rtree_read (2 samples, 0.02%)</title><rect x="59.9640%" y="37" width="0.0200%" height="15" fill="rgb(223,8,27)" fg:x="6000" fg:w="2"/><text x="60.2140%" y="47.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (22 samples, 0.22%)</title><rect x="59.7841%" y="101" width="0.2199%" height="15" fill="rgb(216,217,28)" fg:x="5982" fg:w="22"/><text x="60.0341%" y="111.50"></text></g><g><title>oprf`do_rallocx (11 samples, 0.11%)</title><rect x="59.8941%" y="85" width="0.1099%" height="15" fill="rgb(249,199,1)" fg:x="5993" fg:w="11"/><text x="60.1441%" y="95.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.27%)</title><rect x="59.7541%" y="117" width="0.2698%" height="15" fill="rgb(240,85,17)" fg:x="5979" fg:w="27"/><text x="60.0041%" y="127.50"></text></g><g><title>oprf`do_rallocx (2 samples, 0.02%)</title><rect x="60.0040%" y="101" width="0.0200%" height="15" fill="rgb(206,108,45)" fg:x="6004" fg:w="2"/><text x="60.2540%" y="111.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (40 samples, 0.40%)</title><rect x="59.6442%" y="133" width="0.3998%" height="15" fill="rgb(245,210,41)" fg:x="5968" fg:w="40"/><text x="59.8942%" y="143.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="60.0240%" y="117" width="0.0200%" height="15" fill="rgb(206,13,37)" fg:x="6006" fg:w="2"/><text x="60.2740%" y="127.50"></text></g><g><title>oprf`core::fmt::write (158 samples, 1.58%)</title><rect x="58.4949%" y="181" width="1.5791%" height="15" fill="rgb(250,61,18)" fg:x="5853" fg:w="158"/><text x="58.7449%" y="191.50"></text></g><g><title>oprf`nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (104 samples, 1.04%)</title><rect x="59.0346%" y="165" width="1.0394%" height="15" fill="rgb(235,172,48)" fg:x="5907" fg:w="104"/><text x="59.2846%" y="175.50"></text></g><g><title>oprf`core::fmt::write (71 samples, 0.71%)</title><rect x="59.3644%" y="149" width="0.7096%" height="15" fill="rgb(249,201,17)" fg:x="5940" fg:w="71"/><text x="59.6144%" y="159.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="60.0540%" y="133" width="0.0200%" height="15" fill="rgb(219,208,6)" fg:x="6009" fg:w="2"/><text x="60.3040%" y="143.50"></text></g><g><title>oprf`&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (219 samples, 2.19%)</title><rect x="57.9352%" y="197" width="2.1887%" height="15" fill="rgb(248,31,23)" fg:x="5797" fg:w="219"/><text x="58.1852%" y="207.50">o..</text></g><g><title>oprf`nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (5 samples, 0.05%)</title><rect x="60.0740%" y="181" width="0.0500%" height="15" fill="rgb(245,15,42)" fg:x="6011" fg:w="5"/><text x="60.3240%" y="191.50"></text></g><g><title>oprf`core::fmt::Write::write_fmt (240 samples, 2.40%)</title><rect x="57.8053%" y="229" width="2.3986%" height="15" fill="rgb(222,217,39)" fg:x="5784" fg:w="240"/><text x="58.0553%" y="239.50">op..</text></g><g><title>oprf`core::fmt::write (237 samples, 2.37%)</title><rect x="57.8353%" y="213" width="2.3686%" height="15" fill="rgb(210,219,27)" fg:x="5787" fg:w="237"/><text x="58.0853%" y="223.50">op..</text></g><g><title>oprf`core::fmt::write (8 samples, 0.08%)</title><rect x="60.1239%" y="197" width="0.0800%" height="15" fill="rgb(252,166,36)" fg:x="6016" fg:w="8"/><text x="60.3739%" y="207.50"></text></g><g><title>oprf`tracing_core::field::ValueSet::record (257 samples, 2.57%)</title><rect x="57.6454%" y="261" width="2.5685%" height="15" fill="rgb(245,132,34)" fg:x="5768" fg:w="257"/><text x="57.8954%" y="271.50">op..</text></g><g><title>oprf`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (251 samples, 2.51%)</title><rect x="57.7054%" y="245" width="2.5085%" height="15" fill="rgb(236,54,3)" fg:x="5774" fg:w="251"/><text x="57.9554%" y="255.50">op..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="60.2339%" y="245" width="0.0300%" height="15" fill="rgb(241,173,43)" fg:x="6027" fg:w="3"/><text x="60.4839%" y="255.50"></text></g><g><title>oprf`_rjem_je_malloc_default (2 samples, 0.02%)</title><rect x="60.2638%" y="245" width="0.0200%" height="15" fill="rgb(215,190,9)" fg:x="6030" fg:w="2"/><text x="60.5138%" y="255.50"></text></g><g><title>oprf`_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="60.2638%" y="229" width="0.0200%" height="15" fill="rgb(242,101,16)" fg:x="6030" fg:w="2"/><text x="60.5138%" y="239.50"></text></g><g><title>oprf`_rjem_je_arena_cache_bin_fill_small (2 samples, 0.02%)</title><rect x="60.2638%" y="213" width="0.0200%" height="15" fill="rgb(223,190,21)" fg:x="6030" fg:w="2"/><text x="60.5138%" y="223.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (290 samples, 2.90%)</title><rect x="57.4355%" y="277" width="2.8983%" height="15" fill="rgb(215,228,25)" fg:x="5747" fg:w="290"/><text x="57.6855%" y="287.50">op..</text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (12 samples, 0.12%)</title><rect x="60.2139%" y="261" width="0.1199%" height="15" fill="rgb(225,36,22)" fg:x="6025" fg:w="12"/><text x="60.4639%" y="271.50"></text></g><g><title>oprf`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.04%)</title><rect x="60.2938%" y="245" width="0.0400%" height="15" fill="rgb(251,106,46)" fg:x="6033" fg:w="4"/><text x="60.5438%" y="255.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="60.3338%" y="277" width="0.0200%" height="15" fill="rgb(208,90,1)" fg:x="6037" fg:w="2"/><text x="60.5838%" y="287.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::create_with (14 samples, 0.14%)</title><rect x="60.3538%" y="277" width="0.1399%" height="15" fill="rgb(243,10,4)" fg:x="6039" fg:w="14"/><text x="60.6038%" y="287.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (5 samples, 0.05%)</title><rect x="60.4437%" y="261" width="0.0500%" height="15" fill="rgb(212,137,27)" fg:x="6048" fg:w="5"/><text x="60.6937%" y="271.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (4 samples, 0.04%)</title><rect x="60.4937%" y="277" width="0.0400%" height="15" fill="rgb(231,220,49)" fg:x="6053" fg:w="4"/><text x="60.7437%" y="287.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_new_span (5 samples, 0.05%)</title><rect x="60.5437%" y="277" width="0.0500%" height="15" fill="rgb(237,96,20)" fg:x="6058" fg:w="5"/><text x="60.7937%" y="287.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_rwlock_rdlock (2 samples, 0.02%)</title><rect x="60.5737%" y="261" width="0.0200%" height="15" fill="rgb(239,229,30)" fg:x="6061" fg:w="2"/><text x="60.8237%" y="271.50"></text></g><g><title>oprf`tracing_subscriber::registry::SpanRef&lt;R&gt;::parent (2 samples, 0.02%)</title><rect x="60.5936%" y="277" width="0.0200%" height="15" fill="rgb(219,65,33)" fg:x="6063" fg:w="2"/><text x="60.8436%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (523 samples, 5.23%)</title><rect x="55.4167%" y="293" width="5.2269%" height="15" fill="rgb(243,134,7)" fg:x="5545" fg:w="523"/><text x="55.6667%" y="303.50">oprf`&lt;..</text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (3 samples, 0.03%)</title><rect x="60.6136%" y="277" width="0.0300%" height="15" fill="rgb(216,177,54)" fg:x="6065" fg:w="3"/><text x="60.8636%" y="287.50"></text></g><g><title>oprf`&lt;ipa::secret_sharing::replicated::semi_honest::additive_share::AdditiveShare&lt;F&gt; as ipa::protocol::basics::mul::SecureMul&lt;C&gt;&gt;::multiply_sparse::_{{closure}} (2,237 samples, 22.36%)</title><rect x="38.3170%" y="341" width="22.3566%" height="15" fill="rgb(211,160,20)" fg:x="3834" fg:w="2237"/><text x="38.5670%" y="351.50">oprf`&lt;ipa::secret_sharing::replicat..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (540 samples, 5.40%)</title><rect x="55.2768%" y="325" width="5.3968%" height="15" fill="rgb(239,85,39)" fg:x="5531" fg:w="540"/><text x="55.5268%" y="335.50">oprf`tr..</text></g><g><title>oprf`tracing::span::Span::make_with (530 samples, 5.30%)</title><rect x="55.3768%" y="309" width="5.2968%" height="15" fill="rgb(232,125,22)" fg:x="5541" fg:w="530"/><text x="55.6268%" y="319.50">oprf`t..</text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_new_span (3 samples, 0.03%)</title><rect x="60.6436%" y="293" width="0.0300%" height="15" fill="rgb(244,57,34)" fg:x="6068" fg:w="3"/><text x="60.8936%" y="303.50"></text></g><g><title>oprf`_rjem_je_sdallocx_default (2 samples, 0.02%)</title><rect x="60.6936%" y="341" width="0.0200%" height="15" fill="rgb(214,203,32)" fg:x="6073" fg:w="2"/><text x="60.9436%" y="351.50"></text></g><g><title>oprf`_rjem_je_tcache_bin_flush_small (2 samples, 0.02%)</title><rect x="60.6936%" y="325" width="0.0200%" height="15" fill="rgb(207,58,43)" fg:x="6073" fg:w="2"/><text x="60.9436%" y="335.50"></text></g><g><title>oprf`tcache_bin_flush_edatas_lookup (2 samples, 0.02%)</title><rect x="60.6936%" y="309" width="0.0200%" height="15" fill="rgb(215,193,15)" fg:x="6073" fg:w="2"/><text x="60.9436%" y="319.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="60.7136%" y="341" width="0.0200%" height="15" fill="rgb(232,15,44)" fg:x="6075" fg:w="2"/><text x="60.9636%" y="351.50"></text></g><g><title>oprf`_rjem_sdallocx (3 samples, 0.03%)</title><rect x="60.7336%" y="341" width="0.0300%" height="15" fill="rgb(212,3,48)" fg:x="6077" fg:w="3"/><text x="60.9836%" y="351.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (3 samples, 0.03%)</title><rect x="60.7635%" y="341" width="0.0300%" height="15" fill="rgb(218,128,7)" fg:x="6080" fg:w="3"/><text x="61.0135%" y="351.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (4 samples, 0.04%)</title><rect x="60.8035%" y="341" width="0.0400%" height="15" fill="rgb(226,216,39)" fg:x="6084" fg:w="4"/><text x="61.0535%" y="351.50"></text></g><g><title>oprf`ipa::protocol::basics::mul::sparse::ZeroPositions::work (5 samples, 0.05%)</title><rect x="60.8435%" y="341" width="0.0500%" height="15" fill="rgb(243,47,51)" fg:x="6088" fg:w="5"/><text x="61.0935%" y="351.50"></text></g><g><title>oprf`ipa::protocol::basics::if_else::if_else::_{{closure}} (2,362 samples, 23.61%)</title><rect x="37.3076%" y="373" width="23.6058%" height="15" fill="rgb(241,183,40)" fg:x="3733" fg:w="2362"/><text x="37.5576%" y="383.50">oprf`ipa::protocol::basics::if_else::i..</text></g><g><title>oprf`ipa::protocol::basics::mul::SecureMul::multiply::_{{closure}} (2,275 samples, 22.74%)</title><rect x="38.1771%" y="357" width="22.7364%" height="15" fill="rgb(231,217,32)" fg:x="3820" fg:w="2275"/><text x="38.4271%" y="367.50">oprf`ipa::protocol::basics::mul::Sec..</text></g><g><title>oprf`&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,366 samples, 23.65%)</title><rect x="37.2776%" y="389" width="23.6458%" height="15" fill="rgb(229,61,38)" fg:x="3730" fg:w="2366"/><text x="37.5276%" y="399.50">oprf`&lt;futures_util::future::try_maybe_..</text></g><g><title>oprf`&lt;futures_util::future::try_join::TryJoin&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (2,368 samples, 23.67%)</title><rect x="37.2676%" y="405" width="23.6658%" height="15" fill="rgb(225,210,5)" fg:x="3729" fg:w="2368"/><text x="37.5176%" y="415.50">oprf`&lt;futures_util::future::try_join::..</text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (5 samples, 0.05%)</title><rect x="60.9434%" y="389" width="0.0500%" height="15" fill="rgb(231,79,45)" fg:x="6098" fg:w="5"/><text x="61.1934%" y="399.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (23 samples, 0.23%)</title><rect x="60.9434%" y="405" width="0.2299%" height="15" fill="rgb(224,100,7)" fg:x="6098" fg:w="23"/><text x="61.1934%" y="415.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (18 samples, 0.18%)</title><rect x="60.9934%" y="389" width="0.1799%" height="15" fill="rgb(241,198,18)" fg:x="6103" fg:w="18"/><text x="61.2434%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="61.3132%" y="373" width="0.0200%" height="15" fill="rgb(252,97,53)" fg:x="6135" fg:w="2"/><text x="61.5632%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="61.3332%" y="373" width="0.0400%" height="15" fill="rgb(220,88,7)" fg:x="6137" fg:w="4"/><text x="61.5832%" y="383.50"></text></g><g><title>oprf`&lt;ipa::ff::galois_field::bit_array_1::Gf2 as core::ops::arith::Mul&gt;::mul (21 samples, 0.21%)</title><rect x="61.3732%" y="373" width="0.2099%" height="15" fill="rgb(213,176,14)" fg:x="6141" fg:w="21"/><text x="61.6232%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="61.5930%" y="357" width="0.0200%" height="15" fill="rgb(246,73,7)" fg:x="6163" fg:w="2"/><text x="61.8430%" y="367.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="61.6530%" y="341" width="0.0899%" height="15" fill="rgb(245,64,36)" fg:x="6169" fg:w="9"/><text x="61.9030%" y="351.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::prss (18 samples, 0.18%)</title><rect x="61.5930%" y="373" width="0.1799%" height="15" fill="rgb(245,80,10)" fg:x="6163" fg:w="18"/><text x="61.8430%" y="383.50"></text></g><g><title>oprf`ipa::protocol::prss::Endpoint::indexed (15 samples, 0.15%)</title><rect x="61.6230%" y="357" width="0.1499%" height="15" fill="rgb(232,107,50)" fg:x="6166" fg:w="15"/><text x="61.8730%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="61.7829%" y="357" width="0.0400%" height="15" fill="rgb(253,3,0)" fg:x="6182" fg:w="4"/><text x="62.0329%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="61.8329%" y="341" width="0.0200%" height="15" fill="rgb(212,99,53)" fg:x="6187" fg:w="2"/><text x="62.0829%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="61.8629%" y="325" width="0.0400%" height="15" fill="rgb(249,111,54)" fg:x="6190" fg:w="4"/><text x="62.1129%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="61.9029%" y="325" width="0.0400%" height="15" fill="rgb(249,55,30)" fg:x="6194" fg:w="4"/><text x="62.1529%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.10%)</title><rect x="61.9928%" y="309" width="0.0999%" height="15" fill="rgb(237,47,42)" fg:x="6203" fg:w="10"/><text x="62.2428%" y="319.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (18 samples, 0.18%)</title><rect x="61.9628%" y="325" width="0.1799%" height="15" fill="rgb(211,20,18)" fg:x="6200" fg:w="18"/><text x="62.2128%" y="335.50"></text></g><g><title>oprf`hashbrown::map::make_hash (5 samples, 0.05%)</title><rect x="62.0927%" y="309" width="0.0500%" height="15" fill="rgb(231,203,46)" fg:x="6213" fg:w="5"/><text x="62.3427%" y="319.50"></text></g><g><title>oprf`hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="62.1427%" y="325" width="0.0200%" height="15" fill="rgb(237,142,3)" fg:x="6218" fg:w="2"/><text x="62.3927%" y="335.50"></text></g><g><title>oprf`ipa::helpers::gateway::receive::GatewayReceivers&lt;T&gt;::get_or_create (32 samples, 0.32%)</title><rect x="61.8629%" y="341" width="0.3198%" height="15" fill="rgb(241,107,1)" fg:x="6190" fg:w="32"/><text x="62.1129%" y="351.50"></text></g><g><title>oprf`ipa::helpers::buffers::unordered_receiver::UnorderedReceiver&lt;S,C&gt;::new (2 samples, 0.02%)</title><rect x="62.1627%" y="325" width="0.0200%" height="15" fill="rgb(229,83,13)" fg:x="6220" fg:w="2"/><text x="62.4127%" y="335.50"></text></g><g><title>oprf`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.02%)</title><rect x="62.1627%" y="309" width="0.0200%" height="15" fill="rgb(241,91,40)" fg:x="6220" fg:w="2"/><text x="62.4127%" y="319.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_receiver (39 samples, 0.39%)</title><rect x="61.8229%" y="357" width="0.3898%" height="15" fill="rgb(225,3,45)" fg:x="6186" fg:w="39"/><text x="62.0729%" y="367.50"></text></g><g><title>oprf`ipa::helpers::gateway::transport::RoleResolvingTransport&lt;T&gt;::role (3 samples, 0.03%)</title><rect x="62.1827%" y="341" width="0.0300%" height="15" fill="rgb(244,223,14)" fg:x="6222" fg:w="3"/><text x="62.4327%" y="351.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::recv_channel (45 samples, 0.45%)</title><rect x="61.7729%" y="373" width="0.4497%" height="15" fill="rgb(224,124,37)" fg:x="6181" fg:w="45"/><text x="62.0229%" y="383.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="62.2427%" y="341" width="0.0200%" height="15" fill="rgb(251,171,30)" fg:x="6228" fg:w="2"/><text x="62.4927%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="62.2826%" y="325" width="0.0200%" height="15" fill="rgb(236,46,54)" fg:x="6232" fg:w="2"/><text x="62.5326%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="62.3026%" y="325" width="0.0700%" height="15" fill="rgb(245,213,5)" fg:x="6234" fg:w="7"/><text x="62.5526%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.11%)</title><rect x="62.4825%" y="309" width="0.1099%" height="15" fill="rgb(230,144,27)" fg:x="6252" fg:w="11"/><text x="62.7325%" y="319.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (22 samples, 0.22%)</title><rect x="62.4026%" y="325" width="0.2199%" height="15" fill="rgb(220,86,6)" fg:x="6244" fg:w="22"/><text x="62.6526%" y="335.50"></text></g><g><title>oprf`hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="62.5924%" y="309" width="0.0300%" height="15" fill="rgb(240,20,13)" fg:x="6263" fg:w="3"/><text x="62.8424%" y="319.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::send_channel (41 samples, 0.41%)</title><rect x="62.2227%" y="373" width="0.4098%" height="15" fill="rgb(217,89,34)" fg:x="6226" fg:w="41"/><text x="62.4727%" y="383.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_sender (40 samples, 0.40%)</title><rect x="62.2327%" y="357" width="0.3998%" height="15" fill="rgb(229,13,5)" fg:x="6227" fg:w="40"/><text x="62.4827%" y="367.50"></text></g><g><title>oprf`ipa::helpers::gateway::send::GatewaySenders::get_or_create (36 samples, 0.36%)</title><rect x="62.2726%" y="341" width="0.3598%" height="15" fill="rgb(244,67,35)" fg:x="6231" fg:w="36"/><text x="62.5226%" y="351.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (11 samples, 0.11%)</title><rect x="62.6324%" y="373" width="0.1099%" height="15" fill="rgb(221,40,2)" fg:x="6267" fg:w="11"/><text x="62.8824%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="62.7623%" y="357" width="0.0200%" height="15" fill="rgb(237,157,21)" fg:x="6280" fg:w="2"/><text x="63.0123%" y="367.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (20 samples, 0.20%)</title><rect x="62.8423%" y="341" width="0.1999%" height="15" fill="rgb(222,94,11)" fg:x="6288" fg:w="20"/><text x="63.0923%" y="351.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (9 samples, 0.09%)</title><rect x="63.0722%" y="325" width="0.0899%" height="15" fill="rgb(249,113,6)" fg:x="6311" fg:w="9"/><text x="63.3222%" y="335.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (13 samples, 0.13%)</title><rect x="63.0422%" y="341" width="0.1299%" height="15" fill="rgb(238,137,36)" fg:x="6308" fg:w="13"/><text x="63.2922%" y="351.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="63.1721%" y="325" width="0.0300%" height="15" fill="rgb(210,102,26)" fg:x="6321" fg:w="3"/><text x="63.4221%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.21%)</title><rect x="63.2121%" y="309" width="0.2099%" height="15" fill="rgb(218,30,30)" fg:x="6325" fg:w="21"/><text x="63.4621%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.09%)</title><rect x="63.5119%" y="293" width="0.0899%" height="15" fill="rgb(214,67,26)" fg:x="6355" fg:w="9"/><text x="63.7619%" y="303.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="63.6118%" y="293" width="0.0200%" height="15" fill="rgb(251,9,53)" fg:x="6365" fg:w="2"/><text x="63.8618%" y="303.50"></text></g><g><title>oprf`_rjem_sdallocx (3 samples, 0.03%)</title><rect x="63.6418%" y="293" width="0.0300%" height="15" fill="rgb(228,204,25)" fg:x="6368" fg:w="3"/><text x="63.8918%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="63.6718%" y="277" width="0.0400%" height="15" fill="rgb(207,153,8)" fg:x="6371" fg:w="4"/><text x="63.9218%" y="287.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (31 samples, 0.31%)</title><rect x="63.4219%" y="309" width="0.3098%" height="15" fill="rgb(242,9,16)" fg:x="6346" fg:w="31"/><text x="63.6719%" y="319.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (6 samples, 0.06%)</title><rect x="63.6718%" y="293" width="0.0600%" height="15" fill="rgb(217,211,10)" fg:x="6371" fg:w="6"/><text x="63.9218%" y="303.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="63.7118%" y="277" width="0.0200%" height="15" fill="rgb(219,228,52)" fg:x="6375" fg:w="2"/><text x="63.9618%" y="287.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (57 samples, 0.57%)</title><rect x="63.2021%" y="325" width="0.5697%" height="15" fill="rgb(231,92,29)" fg:x="6324" fg:w="57"/><text x="63.4521%" y="335.50"></text></g><g><title>oprf`metrics::key::key_hasher_impl (4 samples, 0.04%)</title><rect x="63.7318%" y="309" width="0.0400%" height="15" fill="rgb(232,8,23)" fg:x="6377" fg:w="4"/><text x="63.9818%" y="319.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (102 samples, 1.02%)</title><rect x="62.7823%" y="357" width="1.0194%" height="15" fill="rgb(216,211,34)" fg:x="6282" fg:w="102"/><text x="63.0323%" y="367.50"></text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (63 samples, 0.63%)</title><rect x="63.1721%" y="341" width="0.6296%" height="15" fill="rgb(236,151,0)" fg:x="6321" fg:w="63"/><text x="63.4221%" y="351.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (3 samples, 0.03%)</title><rect x="63.7717%" y="325" width="0.0300%" height="15" fill="rgb(209,168,3)" fg:x="6381" fg:w="3"/><text x="64.0217%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="63.8217%" y="341" width="0.0400%" height="15" fill="rgb(208,129,28)" fg:x="6386" fg:w="4"/><text x="64.0717%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (2 samples, 0.02%)</title><rect x="63.8617%" y="341" width="0.0200%" height="15" fill="rgb(229,78,22)" fg:x="6390" fg:w="2"/><text x="64.1117%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.09%)</title><rect x="63.9316%" y="325" width="0.0899%" height="15" fill="rgb(228,187,13)" fg:x="6397" fg:w="9"/><text x="64.1816%" y="335.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (16 samples, 0.16%)</title><rect x="63.8817%" y="341" width="0.1599%" height="15" fill="rgb(240,119,24)" fg:x="6392" fg:w="16"/><text x="64.1317%" y="351.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="64.0216%" y="325" width="0.0200%" height="15" fill="rgb(209,194,42)" fg:x="6406" fg:w="2"/><text x="64.2716%" y="335.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (24 samples, 0.24%)</title><rect x="63.8117%" y="357" width="0.2399%" height="15" fill="rgb(247,200,46)" fg:x="6385" fg:w="24"/><text x="64.0617%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="64.0516%" y="341" width="0.0300%" height="15" fill="rgb(218,76,16)" fg:x="6409" fg:w="3"/><text x="64.3016%" y="351.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (135 samples, 1.35%)</title><rect x="62.7424%" y="373" width="1.3492%" height="15" fill="rgb(225,21,48)" fg:x="6278" fg:w="135"/><text x="62.9924%" y="383.50"></text></g><g><title>oprf`tracing_core::dispatcher::get_default (4 samples, 0.04%)</title><rect x="64.0516%" y="357" width="0.0400%" height="15" fill="rgb(239,223,50)" fg:x="6409" fg:w="4"/><text x="64.3016%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.03%)</title><rect x="64.1815%" y="341" width="0.0300%" height="15" fill="rgb(244,45,21)" fg:x="6422" fg:w="3"/><text x="64.4315%" y="351.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::ordering_sender::Send&lt;M&gt; as core::future::future::Future&gt;::poll (7 samples, 0.07%)</title><rect x="64.1715%" y="357" width="0.0700%" height="15" fill="rgb(232,33,43)" fg:x="6421" fg:w="7"/><text x="64.4215%" y="367.50"></text></g><g><title>oprf`ipa::helpers::buffers::ordering_sender::Waiting::wake (2 samples, 0.02%)</title><rect x="64.2215%" y="341" width="0.0200%" height="15" fill="rgb(209,8,3)" fg:x="6426" fg:w="2"/><text x="64.4715%" y="351.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::unordered_receiver::Receiver&lt;S,C,M&gt; as core::future::future::Future&gt;::poll (8 samples, 0.08%)</title><rect x="64.2415%" y="357" width="0.0800%" height="15" fill="rgb(214,25,53)" fg:x="6428" fg:w="8"/><text x="64.4915%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="64.3314%" y="341" width="0.0200%" height="15" fill="rgb(254,186,54)" fg:x="6437" fg:w="2"/><text x="64.5814%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (4 samples, 0.04%)</title><rect x="64.3514%" y="341" width="0.0400%" height="15" fill="rgb(208,174,49)" fg:x="6439" fg:w="4"/><text x="64.6014%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (5 samples, 0.05%)</title><rect x="64.3914%" y="341" width="0.0500%" height="15" fill="rgb(233,191,51)" fg:x="6443" fg:w="5"/><text x="64.6414%" y="351.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (4 samples, 0.04%)</title><rect x="64.4014%" y="325" width="0.0400%" height="15" fill="rgb(222,134,10)" fg:x="6444" fg:w="4"/><text x="64.6514%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (4 samples, 0.04%)</title><rect x="64.4413%" y="341" width="0.0400%" height="15" fill="rgb(230,226,20)" fg:x="6448" fg:w="4"/><text x="64.6913%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (17 samples, 0.17%)</title><rect x="64.3314%" y="357" width="0.1699%" height="15" fill="rgb(251,111,25)" fg:x="6437" fg:w="17"/><text x="64.5814%" y="367.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_enter (2 samples, 0.02%)</title><rect x="64.4813%" y="341" width="0.0200%" height="15" fill="rgb(224,40,46)" fg:x="6452" fg:w="2"/><text x="64.7313%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="64.5013%" y="341" width="0.0600%" height="15" fill="rgb(236,108,47)" fg:x="6454" fg:w="6"/><text x="64.7513%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.05%)</title><rect x="64.6012%" y="309" width="0.0500%" height="15" fill="rgb(234,93,0)" fg:x="6464" fg:w="5"/><text x="64.8512%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.04%)</title><rect x="64.6512%" y="293" width="0.0400%" height="15" fill="rgb(224,213,32)" fg:x="6469" fg:w="4"/><text x="64.9012%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.03%)</title><rect x="64.6912%" y="277" width="0.0300%" height="15" fill="rgb(251,11,48)" fg:x="6473" fg:w="3"/><text x="64.9412%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="64.7212%" y="277" width="0.0200%" height="15" fill="rgb(236,173,5)" fg:x="6476" fg:w="2"/><text x="64.9712%" y="287.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (6 samples, 0.06%)</title><rect x="64.6912%" y="293" width="0.0600%" height="15" fill="rgb(230,95,12)" fg:x="6473" fg:w="6"/><text x="64.9412%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (12 samples, 0.12%)</title><rect x="64.6512%" y="309" width="0.1199%" height="15" fill="rgb(232,209,1)" fg:x="6469" fg:w="12"/><text x="64.9012%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (20 samples, 0.20%)</title><rect x="64.5813%" y="325" width="0.1999%" height="15" fill="rgb(232,6,1)" fg:x="6462" fg:w="20"/><text x="64.8313%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (24 samples, 0.24%)</title><rect x="64.5613%" y="341" width="0.2399%" height="15" fill="rgb(210,224,50)" fg:x="6460" fg:w="24"/><text x="64.8113%" y="351.50"></text></g><g><title>oprf`tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="64.7811%" y="325" width="0.0200%" height="15" fill="rgb(228,127,35)" fg:x="6482" fg:w="2"/><text x="65.0311%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (32 samples, 0.32%)</title><rect x="64.5013%" y="357" width="0.3198%" height="15" fill="rgb(245,102,45)" fg:x="6454" fg:w="32"/><text x="64.7513%" y="367.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_exit (2 samples, 0.02%)</title><rect x="64.8011%" y="341" width="0.0200%" height="15" fill="rgb(214,1,49)" fg:x="6484" fg:w="2"/><text x="65.0511%" y="351.50"></text></g><g><title>oprf`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.74%)</title><rect x="64.0915%" y="373" width="0.7396%" height="15" fill="rgb(226,163,40)" fg:x="6413" fg:w="74"/><text x="64.3415%" y="383.50"></text></g><g><title>oprf`_rjem_sdallocx (3 samples, 0.03%)</title><rect x="64.8511%" y="373" width="0.0300%" height="15" fill="rgb(239,212,28)" fg:x="6489" fg:w="3"/><text x="65.1011%" y="383.50"></text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (3 samples, 0.03%)</title><rect x="64.9011%" y="357" width="0.0300%" height="15" fill="rgb(220,20,13)" fg:x="6494" fg:w="3"/><text x="65.1511%" y="367.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (45 samples, 0.45%)</title><rect x="64.8911%" y="373" width="0.4497%" height="15" fill="rgb(210,164,35)" fg:x="6493" fg:w="45"/><text x="65.1411%" y="383.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (41 samples, 0.41%)</title><rect x="64.9310%" y="357" width="0.4098%" height="15" fill="rgb(248,109,41)" fg:x="6497" fg:w="41"/><text x="65.1810%" y="367.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (4 samples, 0.04%)</title><rect x="65.3408%" y="373" width="0.0400%" height="15" fill="rgb(238,23,50)" fg:x="6538" fg:w="4"/><text x="65.5908%" y="383.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="65.4108%" y="357" width="0.0200%" height="15" fill="rgb(211,48,49)" fg:x="6545" fg:w="2"/><text x="65.6608%" y="367.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics::key::Key&gt; (6 samples, 0.06%)</title><rect x="65.3808%" y="373" width="0.0600%" height="15" fill="rgb(223,36,21)" fg:x="6542" fg:w="6"/><text x="65.6308%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.04%)</title><rect x="65.4407%" y="341" width="0.0400%" height="15" fill="rgb(207,123,46)" fg:x="6548" fg:w="4"/><text x="65.6907%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.04%)</title><rect x="65.4807%" y="325" width="0.0400%" height="15" fill="rgb(240,218,32)" fg:x="6552" fg:w="4"/><text x="65.7307%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.04%)</title><rect x="65.5507%" y="309" width="0.0400%" height="15" fill="rgb(252,5,43)" fg:x="6559" fg:w="4"/><text x="65.8007%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (7 samples, 0.07%)</title><rect x="65.5906%" y="309" width="0.0700%" height="15" fill="rgb(252,84,19)" fg:x="6563" fg:w="7"/><text x="65.8406%" y="319.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (4 samples, 0.04%)</title><rect x="65.6206%" y="293" width="0.0400%" height="15" fill="rgb(243,152,39)" fg:x="6566" fg:w="4"/><text x="65.8706%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (3 samples, 0.03%)</title><rect x="65.6606%" y="293" width="0.0300%" height="15" fill="rgb(234,160,15)" fg:x="6570" fg:w="3"/><text x="65.9106%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (18 samples, 0.18%)</title><rect x="65.5307%" y="325" width="0.1799%" height="15" fill="rgb(237,34,20)" fg:x="6557" fg:w="18"/><text x="65.7807%" y="335.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_close (5 samples, 0.05%)</title><rect x="65.6606%" y="309" width="0.0500%" height="15" fill="rgb(229,97,13)" fg:x="6570" fg:w="5"/><text x="65.9106%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (2 samples, 0.02%)</title><rect x="65.6906%" y="293" width="0.0200%" height="15" fill="rgb(234,71,50)" fg:x="6573" fg:w="2"/><text x="65.9406%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (25 samples, 0.25%)</title><rect x="65.4807%" y="341" width="0.2499%" height="15" fill="rgb(253,155,4)" fg:x="6552" fg:w="25"/><text x="65.7307%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="65.8005%" y="293" width="0.0200%" height="15" fill="rgb(222,185,37)" fg:x="6584" fg:w="2"/><text x="66.0505%" y="303.50"></text></g><g><title>oprf`_rjem_sdallocx (3 samples, 0.03%)</title><rect x="65.8305%" y="293" width="0.0300%" height="15" fill="rgb(251,177,13)" fg:x="6587" fg:w="3"/><text x="66.0805%" y="303.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (16 samples, 0.16%)</title><rect x="65.7505%" y="341" width="0.1599%" height="15" fill="rgb(250,179,40)" fg:x="6579" fg:w="16"/><text x="66.0005%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (16 samples, 0.16%)</title><rect x="65.7505%" y="325" width="0.1599%" height="15" fill="rgb(242,44,2)" fg:x="6579" fg:w="16"/><text x="66.0005%" y="335.50"></text></g><g><title>oprf`hashbrown::raw::RawTable&lt;T,A&gt;::clear (13 samples, 0.13%)</title><rect x="65.7805%" y="309" width="0.1299%" height="15" fill="rgb(216,177,13)" fg:x="6582" fg:w="13"/><text x="66.0305%" y="319.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_tracing_context::tracing_integration::Labels&gt; (5 samples, 0.05%)</title><rect x="65.8605%" y="293" width="0.0500%" height="15" fill="rgb(216,106,43)" fg:x="6590" fg:w="5"/><text x="66.1105%" y="303.50"></text></g><g><title>oprf`core::ops::function::Fn::call (3 samples, 0.03%)</title><rect x="65.8805%" y="277" width="0.0300%" height="15" fill="rgb(216,183,2)" fg:x="6592" fg:w="3"/><text x="66.1305%" y="287.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="65.8905%" y="261" width="0.0200%" height="15" fill="rgb(249,75,3)" fg:x="6593" fg:w="2"/><text x="66.1405%" y="271.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (49 samples, 0.49%)</title><rect x="65.4407%" y="357" width="0.4897%" height="15" fill="rgb(219,67,39)" fg:x="6548" fg:w="49"/><text x="65.6907%" y="367.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_remote (2 samples, 0.02%)</title><rect x="65.9105%" y="341" width="0.0200%" height="15" fill="rgb(253,228,2)" fg:x="6595" fg:w="2"/><text x="66.1605%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (2 samples, 0.02%)</title><rect x="65.9105%" y="325" width="0.0200%" height="15" fill="rgb(235,138,27)" fg:x="6595" fg:w="2"/><text x="66.1605%" y="335.50"></text></g><g><title>oprf`hashbrown::raw::RawTable&lt;T,A&gt;::clear (2 samples, 0.02%)</title><rect x="65.9105%" y="309" width="0.0200%" height="15" fill="rgb(236,97,51)" fg:x="6595" fg:w="2"/><text x="66.1605%" y="319.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="65.9105%" y="293" width="0.0200%" height="15" fill="rgb(240,80,30)" fg:x="6595" fg:w="2"/><text x="66.1605%" y="303.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (51 samples, 0.51%)</title><rect x="65.4407%" y="373" width="0.5097%" height="15" fill="rgb(230,178,19)" fg:x="6548" fg:w="51"/><text x="65.6907%" y="383.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (2 samples, 0.02%)</title><rect x="65.9304%" y="357" width="0.0200%" height="15" fill="rgb(210,190,27)" fg:x="6597" fg:w="2"/><text x="66.1804%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (5 samples, 0.05%)</title><rect x="65.9904%" y="357" width="0.0500%" height="15" fill="rgb(222,107,31)" fg:x="6603" fg:w="5"/><text x="66.2404%" y="367.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (13 samples, 0.13%)</title><rect x="66.0404%" y="357" width="0.1299%" height="15" fill="rgb(216,127,34)" fg:x="6608" fg:w="13"/><text x="66.2904%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="66.1903%" y="341" width="0.0200%" height="15" fill="rgb(234,116,52)" fg:x="6623" fg:w="2"/><text x="66.4403%" y="351.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (11 samples, 0.11%)</title><rect x="66.2103%" y="325" width="0.1099%" height="15" fill="rgb(222,124,15)" fg:x="6625" fg:w="11"/><text x="66.4603%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="66.3602%" y="293" width="0.0200%" height="15" fill="rgb(231,179,28)" fg:x="6640" fg:w="2"/><text x="66.6102%" y="303.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (8 samples, 0.08%)</title><rect x="66.3202%" y="325" width="0.0800%" height="15" fill="rgb(226,93,45)" fg:x="6636" fg:w="8"/><text x="66.5702%" y="335.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (6 samples, 0.06%)</title><rect x="66.3402%" y="309" width="0.0600%" height="15" fill="rgb(215,8,51)" fg:x="6638" fg:w="6"/><text x="66.5902%" y="319.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="66.3802%" y="293" width="0.0200%" height="15" fill="rgb(223,106,5)" fg:x="6642" fg:w="2"/><text x="66.6302%" y="303.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.11%)</title><rect x="66.4201%" y="293" width="0.1099%" height="15" fill="rgb(250,191,5)" fg:x="6646" fg:w="11"/><text x="66.6701%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.06%)</title><rect x="66.5501%" y="277" width="0.0600%" height="15" fill="rgb(242,132,44)" fg:x="6659" fg:w="6"/><text x="66.8001%" y="287.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="66.6200%" y="277" width="0.0200%" height="15" fill="rgb(251,152,29)" fg:x="6666" fg:w="2"/><text x="66.8700%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="66.6400%" y="261" width="0.0200%" height="15" fill="rgb(218,179,5)" fg:x="6668" fg:w="2"/><text x="66.8900%" y="271.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (46 samples, 0.46%)</title><rect x="66.2103%" y="341" width="0.4597%" height="15" fill="rgb(227,67,19)" fg:x="6625" fg:w="46"/><text x="66.4603%" y="351.50"></text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (27 samples, 0.27%)</title><rect x="66.4002%" y="325" width="0.2698%" height="15" fill="rgb(233,119,31)" fg:x="6644" fg:w="27"/><text x="66.6502%" y="335.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (26 samples, 0.26%)</title><rect x="66.4102%" y="309" width="0.2598%" height="15" fill="rgb(241,120,22)" fg:x="6645" fg:w="26"/><text x="66.6602%" y="319.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (14 samples, 0.14%)</title><rect x="66.5301%" y="293" width="0.1399%" height="15" fill="rgb(224,102,30)" fg:x="6657" fg:w="14"/><text x="66.7801%" y="303.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (3 samples, 0.03%)</title><rect x="66.6400%" y="277" width="0.0300%" height="15" fill="rgb(210,164,37)" fg:x="6668" fg:w="3"/><text x="66.8900%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="66.7000%" y="325" width="0.0300%" height="15" fill="rgb(226,191,16)" fg:x="6674" fg:w="3"/><text x="66.9500%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="66.7599%" y="309" width="0.0400%" height="15" fill="rgb(214,40,45)" fg:x="6680" fg:w="4"/><text x="67.0099%" y="319.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (7 samples, 0.07%)</title><rect x="66.7400%" y="325" width="0.0700%" height="15" fill="rgb(244,29,26)" fg:x="6678" fg:w="7"/><text x="66.9900%" y="335.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (14 samples, 0.14%)</title><rect x="66.6800%" y="341" width="0.1399%" height="15" fill="rgb(216,16,5)" fg:x="6672" fg:w="14"/><text x="66.9300%" y="351.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (67 samples, 0.67%)</title><rect x="66.1703%" y="357" width="0.6696%" height="15" fill="rgb(249,76,35)" fg:x="6621" fg:w="67"/><text x="66.4203%" y="367.50"></text></g><g><title>oprf`tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="66.8199%" y="341" width="0.0200%" height="15" fill="rgb(207,11,44)" fg:x="6686" fg:w="2"/><text x="67.0699%" y="351.50"></text></g><g><title>oprf`aes::soft::fixslice::aes256_encrypt (139 samples, 1.39%)</title><rect x="66.8799%" y="357" width="1.3892%" height="15" fill="rgb(228,190,49)" fg:x="6692" fg:w="139"/><text x="67.1299%" y="367.50"></text></g><g><title>oprf`aes::soft::fixslice::bitslice (6 samples, 0.06%)</title><rect x="68.2690%" y="357" width="0.0600%" height="15" fill="rgb(214,173,12)" fg:x="6831" fg:w="6"/><text x="68.5190%" y="367.50"></text></g><g><title>oprf`aes::soft::fixslice::sub_bytes (104 samples, 1.04%)</title><rect x="68.3290%" y="357" width="1.0394%" height="15" fill="rgb(218,26,35)" fg:x="6837" fg:w="104"/><text x="68.5790%" y="367.50"></text></g><g><title>oprf`ipa::protocol::prss::crypto::SharedRandomness::generate_fields (342 samples, 3.42%)</title><rect x="65.9704%" y="373" width="3.4179%" height="15" fill="rgb(220,200,19)" fg:x="6601" fg:w="342"/><text x="66.2204%" y="383.50">opr..</text></g><g><title>oprf`metrics::key::Key::builder (2 samples, 0.02%)</title><rect x="69.3984%" y="373" width="0.0200%" height="15" fill="rgb(239,95,49)" fg:x="6944" fg:w="2"/><text x="69.6484%" y="383.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.02%)</title><rect x="69.5383%" y="341" width="0.0200%" height="15" fill="rgb(235,85,53)" fg:x="6958" fg:w="2"/><text x="69.7883%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="69.6482%" y="325" width="0.0200%" height="15" fill="rgb(233,133,31)" fg:x="6969" fg:w="2"/><text x="69.8982%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (3 samples, 0.03%)</title><rect x="69.6682%" y="325" width="0.0300%" height="15" fill="rgb(218,25,20)" fg:x="6971" fg:w="3"/><text x="69.9182%" y="335.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as core::default::Default&gt;::default (47 samples, 0.47%)</title><rect x="69.7482%" y="309" width="0.4697%" height="15" fill="rgb(252,210,38)" fg:x="6979" fg:w="47"/><text x="69.9982%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="70.3078%" y="213" width="0.0400%" height="15" fill="rgb(242,134,21)" fg:x="7035" fg:w="4"/><text x="70.5578%" y="223.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as tracing_core::field::Visit&gt;::record_debug (15 samples, 0.15%)</title><rect x="70.2179%" y="309" width="0.1499%" height="15" fill="rgb(213,28,48)" fg:x="7026" fg:w="15"/><text x="70.4679%" y="319.50"></text></g><g><title>oprf`alloc::fmt::format::format_inner (14 samples, 0.14%)</title><rect x="70.2279%" y="293" width="0.1399%" height="15" fill="rgb(250,196,2)" fg:x="7027" fg:w="14"/><text x="70.4779%" y="303.50"></text></g><g><title>oprf`core::fmt::write (13 samples, 0.13%)</title><rect x="70.2379%" y="277" width="0.1299%" height="15" fill="rgb(227,5,17)" fg:x="7028" fg:w="13"/><text x="70.4879%" y="287.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.12%)</title><rect x="70.2479%" y="261" width="0.1199%" height="15" fill="rgb(221,226,24)" fg:x="7029" fg:w="12"/><text x="70.4979%" y="271.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.08%)</title><rect x="70.2878%" y="245" width="0.0800%" height="15" fill="rgb(211,5,48)" fg:x="7033" fg:w="8"/><text x="70.5378%" y="255.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (8 samples, 0.08%)</title><rect x="70.2878%" y="229" width="0.0800%" height="15" fill="rgb(219,150,6)" fg:x="7033" fg:w="8"/><text x="70.5378%" y="239.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="70.3478%" y="213" width="0.0200%" height="15" fill="rgb(251,46,16)" fg:x="7039" fg:w="2"/><text x="70.5978%" y="223.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (70 samples, 0.70%)</title><rect x="69.7182%" y="325" width="0.6996%" height="15" fill="rgb(220,204,40)" fg:x="6976" fg:w="70"/><text x="69.9682%" y="335.50"></text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (3 samples, 0.03%)</title><rect x="70.3878%" y="309" width="0.0300%" height="15" fill="rgb(211,85,2)" fg:x="7043" fg:w="3"/><text x="70.6378%" y="319.50"></text></g><g><title>oprf`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="70.3978%" y="293" width="0.0200%" height="15" fill="rgb(229,17,7)" fg:x="7044" fg:w="2"/><text x="70.6478%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (2 samples, 0.02%)</title><rect x="70.4577%" y="309" width="0.0200%" height="15" fill="rgb(239,72,28)" fg:x="7050" fg:w="2"/><text x="70.7077%" y="319.50"></text></g><g><title>oprf`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="70.5477%" y="261" width="0.0200%" height="15" fill="rgb(230,47,54)" fg:x="7059" fg:w="2"/><text x="70.7977%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="70.6876%" y="229" width="0.0200%" height="15" fill="rgb(214,50,8)" fg:x="7073" fg:w="2"/><text x="70.9376%" y="239.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (6 samples, 0.06%)</title><rect x="70.7875%" y="165" width="0.0600%" height="15" fill="rgb(216,198,43)" fg:x="7083" fg:w="6"/><text x="71.0375%" y="175.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (4 samples, 0.04%)</title><rect x="70.8075%" y="149" width="0.0400%" height="15" fill="rgb(234,20,35)" fg:x="7085" fg:w="4"/><text x="71.0575%" y="159.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.15%)</title><rect x="70.7076%" y="229" width="0.1499%" height="15" fill="rgb(254,45,19)" fg:x="7075" fg:w="15"/><text x="70.9576%" y="239.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.15%)</title><rect x="70.7076%" y="213" width="0.1499%" height="15" fill="rgb(219,14,44)" fg:x="7075" fg:w="15"/><text x="70.9576%" y="223.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (13 samples, 0.13%)</title><rect x="70.7276%" y="197" width="0.1299%" height="15" fill="rgb(217,220,26)" fg:x="7077" fg:w="13"/><text x="70.9776%" y="207.50"></text></g><g><title>oprf`do_rallocx (10 samples, 0.10%)</title><rect x="70.7575%" y="181" width="0.0999%" height="15" fill="rgb(213,158,28)" fg:x="7080" fg:w="10"/><text x="71.0075%" y="191.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="70.8575%" y="229" width="0.0300%" height="15" fill="rgb(252,51,52)" fg:x="7090" fg:w="3"/><text x="71.1075%" y="239.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.05%)</title><rect x="70.9974%" y="197" width="0.0500%" height="15" fill="rgb(246,89,16)" fg:x="7104" fg:w="5"/><text x="71.2474%" y="207.50"></text></g><g><title>oprf`core::fmt::Formatter::pad (2 samples, 0.02%)</title><rect x="71.0474%" y="197" width="0.0200%" height="15" fill="rgb(216,158,49)" fg:x="7109" fg:w="2"/><text x="71.2974%" y="207.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (16 samples, 0.16%)</title><rect x="70.9674%" y="213" width="0.1599%" height="15" fill="rgb(236,107,19)" fg:x="7101" fg:w="16"/><text x="71.2174%" y="223.50"></text></g><g><title>oprf`core::fmt::write (6 samples, 0.06%)</title><rect x="71.0674%" y="197" width="0.0600%" height="15" fill="rgb(228,185,30)" fg:x="7111" fg:w="6"/><text x="71.3174%" y="207.50"></text></g><g><title>oprf`core::fmt::Formatter::write_fmt (7 samples, 0.07%)</title><rect x="71.1273%" y="213" width="0.0700%" height="15" fill="rgb(246,134,8)" fg:x="7117" fg:w="7"/><text x="71.3773%" y="223.50"></text></g><g><title>oprf`core::fmt::write (2 samples, 0.02%)</title><rect x="71.1973%" y="213" width="0.0200%" height="15" fill="rgb(214,143,50)" fg:x="7124" fg:w="2"/><text x="71.4473%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.05%)</title><rect x="71.3372%" y="181" width="0.0500%" height="15" fill="rgb(228,75,8)" fg:x="7138" fg:w="5"/><text x="71.5872%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="71.4571%" y="133" width="0.0300%" height="15" fill="rgb(207,175,4)" fg:x="7150" fg:w="3"/><text x="71.7071%" y="143.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="71.4871%" y="133" width="0.0200%" height="15" fill="rgb(205,108,24)" fg:x="7153" fg:w="2"/><text x="71.7371%" y="143.50"></text></g><g><title>oprf`_rjem_realloc (2 samples, 0.02%)</title><rect x="71.5071%" y="133" width="0.0200%" height="15" fill="rgb(244,120,49)" fg:x="7155" fg:w="2"/><text x="71.7571%" y="143.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (9 samples, 0.09%)</title><rect x="71.5571%" y="117" width="0.0899%" height="15" fill="rgb(223,47,38)" fg:x="7160" fg:w="9"/><text x="71.8071%" y="127.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (27 samples, 0.27%)</title><rect x="71.3872%" y="181" width="0.2698%" height="15" fill="rgb(229,179,11)" fg:x="7143" fg:w="27"/><text x="71.6372%" y="191.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.22%)</title><rect x="71.4371%" y="165" width="0.2199%" height="15" fill="rgb(231,122,1)" fg:x="7148" fg:w="22"/><text x="71.6871%" y="175.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (21 samples, 0.21%)</title><rect x="71.4471%" y="149" width="0.2099%" height="15" fill="rgb(245,119,9)" fg:x="7149" fg:w="21"/><text x="71.6971%" y="159.50"></text></g><g><title>oprf`do_rallocx (13 samples, 0.13%)</title><rect x="71.5271%" y="133" width="0.1299%" height="15" fill="rgb(241,163,25)" fg:x="7157" fg:w="13"/><text x="71.7771%" y="143.50"></text></g><g><title>oprf`core::fmt::write (77 samples, 0.77%)</title><rect x="70.8975%" y="229" width="0.7695%" height="15" fill="rgb(217,214,3)" fg:x="7094" fg:w="77"/><text x="71.1475%" y="239.50"></text></g><g><title>oprf`nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (45 samples, 0.45%)</title><rect x="71.2173%" y="213" width="0.4497%" height="15" fill="rgb(240,86,28)" fg:x="7126" fg:w="45"/><text x="71.4673%" y="223.50"></text></g><g><title>oprf`core::fmt::write (38 samples, 0.38%)</title><rect x="71.2872%" y="197" width="0.3798%" height="15" fill="rgb(215,47,9)" fg:x="7133" fg:w="38"/><text x="71.5372%" y="207.50"></text></g><g><title>oprf`&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (104 samples, 1.04%)</title><rect x="70.6376%" y="245" width="1.0394%" height="15" fill="rgb(252,25,45)" fg:x="7068" fg:w="104"/><text x="70.8876%" y="255.50"></text></g><g><title>oprf`tracing_core::field::ValueSet::record (121 samples, 1.21%)</title><rect x="70.4977%" y="309" width="1.2093%" height="15" fill="rgb(251,164,9)" fg:x="7054" fg:w="121"/><text x="70.7477%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (120 samples, 1.20%)</title><rect x="70.5077%" y="293" width="1.1993%" height="15" fill="rgb(233,194,0)" fg:x="7055" fg:w="120"/><text x="70.7577%" y="303.50"></text></g><g><title>oprf`core::fmt::Write::write_fmt (117 samples, 1.17%)</title><rect x="70.5377%" y="277" width="1.1693%" height="15" fill="rgb(249,111,24)" fg:x="7058" fg:w="117"/><text x="70.7877%" y="287.50"></text></g><g><title>oprf`core::fmt::write (114 samples, 1.14%)</title><rect x="70.5677%" y="261" width="1.1393%" height="15" fill="rgb(250,223,3)" fg:x="7061" fg:w="114"/><text x="70.8177%" y="271.50"></text></g><g><title>oprf`core::fmt::write (3 samples, 0.03%)</title><rect x="71.6770%" y="245" width="0.0300%" height="15" fill="rgb(236,178,37)" fg:x="7172" fg:w="3"/><text x="71.9270%" y="255.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (132 samples, 1.32%)</title><rect x="70.4277%" y="325" width="1.3192%" height="15" fill="rgb(241,158,50)" fg:x="7047" fg:w="132"/><text x="70.6777%" y="335.50"></text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (4 samples, 0.04%)</title><rect x="71.7070%" y="309" width="0.0400%" height="15" fill="rgb(213,121,41)" fg:x="7175" fg:w="4"/><text x="71.9570%" y="319.50"></text></g><g><title>oprf`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="71.7270%" y="293" width="0.0200%" height="15" fill="rgb(240,92,3)" fg:x="7177" fg:w="2"/><text x="71.9770%" y="303.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::create_with (8 samples, 0.08%)</title><rect x="71.7569%" y="325" width="0.0800%" height="15" fill="rgb(205,123,3)" fg:x="7180" fg:w="8"/><text x="72.0069%" y="335.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (2 samples, 0.02%)</title><rect x="71.8169%" y="309" width="0.0200%" height="15" fill="rgb(205,97,47)" fg:x="7186" fg:w="2"/><text x="72.0669%" y="319.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (2 samples, 0.02%)</title><rect x="71.8369%" y="325" width="0.0200%" height="15" fill="rgb(247,152,14)" fg:x="7188" fg:w="2"/><text x="72.0869%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (2 samples, 0.02%)</title><rect x="71.8669%" y="309" width="0.0200%" height="15" fill="rgb(248,195,53)" fg:x="7191" fg:w="2"/><text x="72.1169%" y="319.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_new_span (4 samples, 0.04%)</title><rect x="71.8569%" y="325" width="0.0400%" height="15" fill="rgb(226,201,16)" fg:x="7190" fg:w="4"/><text x="72.1069%" y="335.50"></text></g><g><title>oprf`&lt;ipa::secret_sharing::replicated::semi_honest::additive_share::AdditiveShare&lt;F&gt; as ipa::protocol::basics::mul::SecureMul&lt;C&gt;&gt;::multiply_sparse::_{{closure}} (1,071 samples, 10.70%)</title><rect x="61.2033%" y="389" width="10.7036%" height="15" fill="rgb(205,98,0)" fg:x="6124" fg:w="1071"/><text x="61.4533%" y="399.50">oprf`&lt;ipa::secre..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (249 samples, 2.49%)</title><rect x="69.4183%" y="373" width="2.4885%" height="15" fill="rgb(214,191,48)" fg:x="6946" fg:w="249"/><text x="69.6683%" y="383.50">op..</text></g><g><title>oprf`tracing::span::Span::make_with (241 samples, 2.41%)</title><rect x="69.4983%" y="357" width="2.4086%" height="15" fill="rgb(237,112,39)" fg:x="6954" fg:w="241"/><text x="69.7483%" y="367.50">op..</text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (235 samples, 2.35%)</title><rect x="69.5583%" y="341" width="2.3486%" height="15" fill="rgb(247,203,27)" fg:x="6960" fg:w="235"/><text x="69.8083%" y="351.50">o..</text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="71.9168%" y="389" width="0.0300%" height="15" fill="rgb(235,124,28)" fg:x="7196" fg:w="3"/><text x="72.1668%" y="399.50"></text></g><g><title>oprf`&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,477 samples, 34.75%)</title><rect x="37.2377%" y="421" width="34.7492%" height="15" fill="rgb(208,207,46)" fg:x="3726" fg:w="3477"/><text x="37.4877%" y="431.50">oprf`&lt;futures_util::future::try_maybe_done::TryMaybeDone..</text></g><g><title>oprf`ipa::protocol::basics::mul::SecureMul::multiply::_{{closure}} (1,082 samples, 10.81%)</title><rect x="61.1733%" y="405" width="10.8135%" height="15" fill="rgb(234,176,4)" fg:x="6121" fg:w="1082"/><text x="61.4233%" y="415.50">oprf`ipa::protoc..</text></g><g><title>oprf`&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (3,487 samples, 34.85%)</title><rect x="37.1477%" y="437" width="34.8491%" height="15" fill="rgb(230,133,28)" fg:x="3717" fg:w="3487"/><text x="37.3977%" y="447.50">oprf`&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; a..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="72.2167%" y="421" width="0.0300%" height="15" fill="rgb(211,137,40)" fg:x="7226" fg:w="3"/><text x="72.4667%" y="431.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="72.2467%" y="421" width="0.0200%" height="15" fill="rgb(254,35,13)" fg:x="7229" fg:w="2"/><text x="72.4967%" y="431.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="72.2766%" y="421" width="0.0200%" height="15" fill="rgb(225,49,51)" fg:x="7232" fg:w="2"/><text x="72.5266%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="72.3766%" y="389" width="0.0400%" height="15" fill="rgb(251,10,15)" fg:x="7242" fg:w="4"/><text x="72.6266%" y="399.50"></text></g><g><title>oprf`_rjem_realloc (4 samples, 0.04%)</title><rect x="72.4166%" y="389" width="0.0400%" height="15" fill="rgb(228,207,15)" fg:x="7246" fg:w="4"/><text x="72.6666%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="72.5765%" y="373" width="0.0200%" height="15" fill="rgb(241,99,19)" fg:x="7262" fg:w="2"/><text x="72.8265%" y="383.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (6 samples, 0.06%)</title><rect x="72.6964%" y="357" width="0.0600%" height="15" fill="rgb(207,104,49)" fg:x="7274" fg:w="6"/><text x="72.9464%" y="367.50"></text></g><g><title>oprf`rtree_read (2 samples, 0.02%)</title><rect x="72.7364%" y="341" width="0.0200%" height="15" fill="rgb(234,99,18)" fg:x="7278" fg:w="2"/><text x="72.9864%" y="351.50"></text></g><g><title>oprf`_rjem_je_hook_invoke_dalloc (3 samples, 0.03%)</title><rect x="72.7563%" y="357" width="0.0300%" height="15" fill="rgb(213,191,49)" fg:x="7280" fg:w="3"/><text x="73.0063%" y="367.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (20 samples, 0.20%)</title><rect x="72.5964%" y="373" width="0.1999%" height="15" fill="rgb(210,226,19)" fg:x="7264" fg:w="20"/><text x="72.8464%" y="383.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (2 samples, 0.02%)</title><rect x="72.7963%" y="373" width="0.0200%" height="15" fill="rgb(229,97,18)" fg:x="7284" fg:w="2"/><text x="73.0463%" y="383.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (54 samples, 0.54%)</title><rect x="72.2966%" y="421" width="0.5397%" height="15" fill="rgb(211,167,15)" fg:x="7234" fg:w="54"/><text x="72.5466%" y="431.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (48 samples, 0.48%)</title><rect x="72.3566%" y="405" width="0.4797%" height="15" fill="rgb(210,169,34)" fg:x="7240" fg:w="48"/><text x="72.6066%" y="415.50"></text></g><g><title>oprf`do_rallocx (38 samples, 0.38%)</title><rect x="72.4565%" y="389" width="0.3798%" height="15" fill="rgb(241,121,31)" fg:x="7250" fg:w="38"/><text x="72.7065%" y="399.50"></text></g><g><title>oprf`&lt;ipa::protocol::step::descriptive::Descriptive as ipa::protocol::step::StepNarrow&lt;S&gt;&gt;::narrow (85 samples, 0.85%)</title><rect x="72.0068%" y="437" width="0.8495%" height="15" fill="rgb(232,40,11)" fg:x="7205" fg:w="85"/><text x="72.2568%" y="447.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="72.8363%" y="421" width="0.0200%" height="15" fill="rgb(205,86,26)" fg:x="7288" fg:w="2"/><text x="73.0863%" y="431.50"></text></g><g><title>oprf`_rjem_sdallocx (5 samples, 0.05%)</title><rect x="72.8963%" y="437" width="0.0500%" height="15" fill="rgb(231,126,28)" fg:x="7294" fg:w="5"/><text x="73.1463%" y="447.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="72.9462%" y="437" width="0.0300%" height="15" fill="rgb(219,221,18)" fg:x="7299" fg:w="3"/><text x="73.1962%" y="447.50"></text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (19 samples, 0.19%)</title><rect x="73.0562%" y="421" width="0.1899%" height="15" fill="rgb(211,40,0)" fg:x="7310" fg:w="19"/><text x="73.3062%" y="431.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (169 samples, 1.69%)</title><rect x="72.9762%" y="437" width="1.6890%" height="15" fill="rgb(239,85,43)" fg:x="7302" fg:w="169"/><text x="73.2262%" y="447.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (142 samples, 1.42%)</title><rect x="73.2461%" y="421" width="1.4191%" height="15" fill="rgb(231,55,21)" fg:x="7329" fg:w="142"/><text x="73.4961%" y="431.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (4 samples, 0.04%)</title><rect x="74.6652%" y="437" width="0.0400%" height="15" fill="rgb(225,184,43)" fg:x="7471" fg:w="4"/><text x="74.9152%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="74.9051%" y="421" width="0.0300%" height="15" fill="rgb(251,158,41)" fg:x="7495" fg:w="3"/><text x="75.1551%" y="431.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::prss (2 samples, 0.02%)</title><rect x="74.9350%" y="421" width="0.0200%" height="15" fill="rgb(234,159,37)" fg:x="7498" fg:w="2"/><text x="75.1850%" y="431.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::send_channel (2 samples, 0.02%)</title><rect x="74.9550%" y="421" width="0.0200%" height="15" fill="rgb(216,204,22)" fg:x="7500" fg:w="2"/><text x="75.2050%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.05%)</title><rect x="75.2449%" y="405" width="0.0500%" height="15" fill="rgb(214,17,3)" fg:x="7529" fg:w="5"/><text x="75.4949%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (21 samples, 0.21%)</title><rect x="75.2948%" y="405" width="0.2099%" height="15" fill="rgb(212,111,17)" fg:x="7534" fg:w="21"/><text x="75.5448%" y="415.50"></text></g><g><title>oprf`&lt;ipa::ff::galois_field::bit_array_1::Gf2 as core::ops::arith::Mul&gt;::mul (45 samples, 0.45%)</title><rect x="75.5047%" y="405" width="0.4497%" height="15" fill="rgb(221,157,24)" fg:x="7555" fg:w="45"/><text x="75.7547%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="75.9644%" y="389" width="0.0300%" height="15" fill="rgb(252,16,13)" fg:x="7601" fg:w="3"/><text x="76.2144%" y="399.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.10%)</title><rect x="76.1243%" y="373" width="0.0999%" height="15" fill="rgb(221,62,2)" fg:x="7617" fg:w="10"/><text x="76.3743%" y="383.50"></text></g><g><title>oprf`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="76.2243%" y="373" width="0.0200%" height="15" fill="rgb(247,87,22)" fg:x="7627" fg:w="2"/><text x="76.4743%" y="383.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::prss (35 samples, 0.35%)</title><rect x="75.9644%" y="405" width="0.3498%" height="15" fill="rgb(215,73,9)" fg:x="7601" fg:w="35"/><text x="76.2144%" y="415.50"></text></g><g><title>oprf`ipa::protocol::prss::Endpoint::indexed (29 samples, 0.29%)</title><rect x="76.0244%" y="389" width="0.2898%" height="15" fill="rgb(207,175,33)" fg:x="7607" fg:w="29"/><text x="76.2744%" y="399.50"></text></g><g><title>oprf`sha2::sha256::compress256 (7 samples, 0.07%)</title><rect x="76.2443%" y="373" width="0.0700%" height="15" fill="rgb(243,129,54)" fg:x="7629" fg:w="7"/><text x="76.4943%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="76.3242%" y="389" width="0.0300%" height="15" fill="rgb(227,119,45)" fg:x="7637" fg:w="3"/><text x="76.5742%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="76.3642%" y="373" width="0.0200%" height="15" fill="rgb(205,109,36)" fg:x="7641" fg:w="2"/><text x="76.6142%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="76.3842%" y="373" width="0.0300%" height="15" fill="rgb(205,6,39)" fg:x="7643" fg:w="3"/><text x="76.6342%" y="383.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="76.4341%" y="373" width="0.0200%" height="15" fill="rgb(221,32,16)" fg:x="7648" fg:w="2"/><text x="76.6841%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.06%)</title><rect x="76.5141%" y="357" width="0.0600%" height="15" fill="rgb(228,144,50)" fg:x="7656" fg:w="6"/><text x="76.7641%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="76.5741%" y="357" width="0.0200%" height="15" fill="rgb(229,201,53)" fg:x="7662" fg:w="2"/><text x="76.8241%" y="367.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="76.5940%" y="357" width="0.0899%" height="15" fill="rgb(249,153,27)" fg:x="7664" fg:w="9"/><text x="76.8440%" y="367.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="76.7040%" y="357" width="0.0200%" height="15" fill="rgb(227,106,25)" fg:x="7675" fg:w="2"/><text x="76.9540%" y="367.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.18%)</title><rect x="76.7939%" y="341" width="0.1799%" height="15" fill="rgb(230,65,29)" fg:x="7684" fg:w="18"/><text x="77.0439%" y="351.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (26 samples, 0.26%)</title><rect x="76.7240%" y="357" width="0.2598%" height="15" fill="rgb(221,57,46)" fg:x="7677" fg:w="26"/><text x="76.9740%" y="367.50"></text></g><g><title>oprf`hashbrown::map::make_hash (7 samples, 0.07%)</title><rect x="76.9838%" y="357" width="0.0700%" height="15" fill="rgb(229,161,17)" fg:x="7703" fg:w="7"/><text x="77.2338%" y="367.50"></text></g><g><title>oprf`_rjem_je_malloc_default (2 samples, 0.02%)</title><rect x="77.0538%" y="325" width="0.0200%" height="15" fill="rgb(222,213,11)" fg:x="7710" fg:w="2"/><text x="77.3038%" y="335.50"></text></g><g><title>oprf`_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="77.0538%" y="309" width="0.0200%" height="15" fill="rgb(235,35,13)" fg:x="7710" fg:w="2"/><text x="77.3038%" y="319.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_receiver (73 samples, 0.73%)</title><rect x="76.3642%" y="389" width="0.7296%" height="15" fill="rgb(233,158,34)" fg:x="7641" fg:w="73"/><text x="76.6142%" y="399.50"></text></g><g><title>oprf`ipa::helpers::gateway::receive::GatewayReceivers&lt;T&gt;::get_or_create (64 samples, 0.64%)</title><rect x="76.4541%" y="373" width="0.6396%" height="15" fill="rgb(215,151,48)" fg:x="7650" fg:w="64"/><text x="76.7041%" y="383.50"></text></g><g><title>oprf`ipa::helpers::buffers::unordered_receiver::UnorderedReceiver&lt;S,C&gt;::new (4 samples, 0.04%)</title><rect x="77.0538%" y="357" width="0.0400%" height="15" fill="rgb(229,84,14)" fg:x="7710" fg:w="4"/><text x="77.3038%" y="367.50"></text></g><g><title>oprf`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (4 samples, 0.04%)</title><rect x="77.0538%" y="341" width="0.0400%" height="15" fill="rgb(229,68,14)" fg:x="7710" fg:w="4"/><text x="77.3038%" y="351.50"></text></g><g><title>oprf`alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.02%)</title><rect x="77.0738%" y="325" width="0.0200%" height="15" fill="rgb(243,106,26)" fg:x="7712" fg:w="2"/><text x="77.3238%" y="335.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::recv_channel (79 samples, 0.79%)</title><rect x="76.3142%" y="405" width="0.7895%" height="15" fill="rgb(206,45,38)" fg:x="7636" fg:w="79"/><text x="76.5642%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="77.1037%" y="389" width="0.0300%" height="15" fill="rgb(226,6,15)" fg:x="7715" fg:w="3"/><text x="77.3537%" y="399.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="77.1337%" y="389" width="0.0200%" height="15" fill="rgb(232,22,54)" fg:x="7718" fg:w="2"/><text x="77.3837%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="77.1837%" y="373" width="0.0300%" height="15" fill="rgb(229,222,32)" fg:x="7723" fg:w="3"/><text x="77.4337%" y="383.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="77.2437%" y="373" width="0.0200%" height="15" fill="rgb(228,62,29)" fg:x="7729" fg:w="2"/><text x="77.4937%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="77.2736%" y="357" width="0.0300%" height="15" fill="rgb(251,103,34)" fg:x="7732" fg:w="3"/><text x="77.5236%" y="367.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.19%)</title><rect x="77.3036%" y="357" width="0.1899%" height="15" fill="rgb(233,12,30)" fg:x="7735" fg:w="19"/><text x="77.5536%" y="367.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="77.4935%" y="357" width="0.0200%" height="15" fill="rgb(238,52,0)" fg:x="7754" fg:w="2"/><text x="77.7435%" y="367.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="77.5135%" y="357" width="0.0200%" height="15" fill="rgb(223,98,5)" fg:x="7756" fg:w="2"/><text x="77.7635%" y="367.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.19%)</title><rect x="77.5735%" y="341" width="0.1899%" height="15" fill="rgb(228,75,37)" fg:x="7762" fg:w="19"/><text x="77.8235%" y="351.50"></text></g><g><title>oprf`dashmap::DashMap&lt;K,V,S&gt;::entry (27 samples, 0.27%)</title><rect x="77.5435%" y="357" width="0.2698%" height="15" fill="rgb(205,115,49)" fg:x="7759" fg:w="27"/><text x="77.7935%" y="367.50"></text></g><g><title>oprf`hashbrown::map::make_hash (5 samples, 0.05%)</title><rect x="77.7633%" y="341" width="0.0500%" height="15" fill="rgb(250,154,43)" fg:x="7781" fg:w="5"/><text x="78.0133%" y="351.50"></text></g><g><title>oprf`ipa::helpers::gateway::send::GatewaySenders::get_or_create (62 samples, 0.62%)</title><rect x="77.2636%" y="373" width="0.6196%" height="15" fill="rgb(226,43,29)" fg:x="7731" fg:w="62"/><text x="77.5136%" y="383.50"></text></g><g><title>oprf`hashbrown::map::make_hash (7 samples, 0.07%)</title><rect x="77.8133%" y="357" width="0.0700%" height="15" fill="rgb(249,228,39)" fg:x="7786" fg:w="7"/><text x="78.0633%" y="367.50"></text></g><g><title>oprf`tokio::runtime::scheduler::Handle::spawn (2 samples, 0.02%)</title><rect x="77.8933%" y="357" width="0.0200%" height="15" fill="rgb(216,79,43)" fg:x="7794" fg:w="2"/><text x="78.1433%" y="367.50"></text></g><g><title>oprf`ipa::helpers::gateway::Gateway&lt;T&gt;::get_sender (77 samples, 0.77%)</title><rect x="77.1537%" y="389" width="0.7695%" height="15" fill="rgb(228,95,12)" fg:x="7720" fg:w="77"/><text x="77.4037%" y="399.50"></text></g><g><title>oprf`tokio::runtime::context::current::with_current (3 samples, 0.03%)</title><rect x="77.8933%" y="373" width="0.0300%" height="15" fill="rgb(249,221,15)" fg:x="7794" fg:w="3"/><text x="78.1433%" y="383.50"></text></g><g><title>oprf`&lt;ipa::protocol::context::Base as ipa::protocol::context::Context&gt;::send_channel (83 samples, 0.83%)</title><rect x="77.1037%" y="405" width="0.8295%" height="15" fill="rgb(233,34,13)" fg:x="7715" fg:w="83"/><text x="77.3537%" y="415.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (43 samples, 0.43%)</title><rect x="77.9332%" y="405" width="0.4297%" height="15" fill="rgb(214,103,39)" fg:x="7798" fg:w="43"/><text x="78.1832%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (3 samples, 0.03%)</title><rect x="78.4030%" y="389" width="0.0300%" height="15" fill="rgb(251,126,39)" fg:x="7845" fg:w="3"/><text x="78.6530%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (5 samples, 0.05%)</title><rect x="78.4329%" y="373" width="0.0500%" height="15" fill="rgb(214,216,36)" fg:x="7848" fg:w="5"/><text x="78.6829%" y="383.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (42 samples, 0.42%)</title><rect x="78.4829%" y="373" width="0.4197%" height="15" fill="rgb(220,221,8)" fg:x="7853" fg:w="42"/><text x="78.7329%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.09%)</title><rect x="78.9326%" y="357" width="0.0899%" height="15" fill="rgb(240,216,3)" fg:x="7898" fg:w="9"/><text x="79.1826%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="79.0925%" y="341" width="0.0400%" height="15" fill="rgb(232,218,17)" fg:x="7914" fg:w="4"/><text x="79.3425%" y="351.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="79.1325%" y="341" width="0.0200%" height="15" fill="rgb(229,163,45)" fg:x="7918" fg:w="2"/><text x="79.3825%" y="351.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (21 samples, 0.21%)</title><rect x="79.0226%" y="357" width="0.2099%" height="15" fill="rgb(231,110,42)" fg:x="7907" fg:w="21"/><text x="79.2726%" y="367.50"></text></g><g><title>oprf`_rjem_malloc (7 samples, 0.07%)</title><rect x="79.1625%" y="341" width="0.0700%" height="15" fill="rgb(208,170,48)" fg:x="7921" fg:w="7"/><text x="79.4125%" y="351.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (34 samples, 0.34%)</title><rect x="78.9027%" y="373" width="0.3398%" height="15" fill="rgb(239,116,25)" fg:x="7895" fg:w="34"/><text x="79.1527%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.03%)</title><rect x="79.2425%" y="357" width="0.0300%" height="15" fill="rgb(219,200,50)" fg:x="7929" fg:w="3"/><text x="79.4925%" y="367.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 samples, 0.59%)</title><rect x="79.3424%" y="341" width="0.5896%" height="15" fill="rgb(245,200,0)" fg:x="7939" fg:w="59"/><text x="79.5924%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (34 samples, 0.34%)</title><rect x="80.1019%" y="325" width="0.3398%" height="15" fill="rgb(245,119,33)" fg:x="8015" fg:w="34"/><text x="80.3519%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="80.4417%" y="325" width="0.0300%" height="15" fill="rgb(231,125,12)" fg:x="8049" fg:w="3"/><text x="80.6917%" y="335.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="80.4717%" y="325" width="0.0300%" height="15" fill="rgb(216,96,41)" fg:x="8052" fg:w="3"/><text x="80.7217%" y="335.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (3 samples, 0.03%)</title><rect x="80.5017%" y="325" width="0.0300%" height="15" fill="rgb(248,43,45)" fg:x="8055" fg:w="3"/><text x="80.7517%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="80.5717%" y="309" width="0.0400%" height="15" fill="rgb(217,222,7)" fg:x="8062" fg:w="4"/><text x="80.8217%" y="319.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (69 samples, 0.69%)</title><rect x="79.9520%" y="341" width="0.6896%" height="15" fill="rgb(233,28,6)" fg:x="8000" fg:w="69"/><text x="80.2020%" y="351.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (10 samples, 0.10%)</title><rect x="80.5417%" y="325" width="0.0999%" height="15" fill="rgb(231,218,15)" fg:x="8059" fg:w="10"/><text x="80.7917%" y="335.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="80.6216%" y="309" width="0.0200%" height="15" fill="rgb(226,171,48)" fg:x="8067" fg:w="2"/><text x="80.8716%" y="319.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (142 samples, 1.42%)</title><rect x="79.2824%" y="357" width="1.4191%" height="15" fill="rgb(235,201,9)" fg:x="7933" fg:w="142"/><text x="79.5324%" y="367.50"></text></g><g><title>oprf`metrics::key::key_hasher_impl (6 samples, 0.06%)</title><rect x="80.6416%" y="341" width="0.0600%" height="15" fill="rgb(217,80,15)" fg:x="8069" fg:w="6"/><text x="80.8916%" y="351.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (231 samples, 2.31%)</title><rect x="78.4329%" y="389" width="2.3086%" height="15" fill="rgb(219,152,8)" fg:x="7848" fg:w="231"/><text x="78.6829%" y="399.50">o..</text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (150 samples, 1.50%)</title><rect x="79.2425%" y="373" width="1.4991%" height="15" fill="rgb(243,107,38)" fg:x="7929" fg:w="150"/><text x="79.4925%" y="383.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (4 samples, 0.04%)</title><rect x="80.7016%" y="357" width="0.0400%" height="15" fill="rgb(231,17,5)" fg:x="8075" fg:w="4"/><text x="80.9516%" y="367.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (5 samples, 0.05%)</title><rect x="80.7416%" y="389" width="0.0500%" height="15" fill="rgb(209,25,54)" fg:x="8079" fg:w="5"/><text x="80.9916%" y="399.50"></text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (2 samples, 0.02%)</title><rect x="80.7915%" y="389" width="0.0200%" height="15" fill="rgb(219,0,2)" fg:x="8084" fg:w="2"/><text x="81.0415%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.13%)</title><rect x="80.8815%" y="373" width="0.1299%" height="15" fill="rgb(246,9,5)" fg:x="8093" fg:w="13"/><text x="81.1315%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (5 samples, 0.05%)</title><rect x="81.0114%" y="373" width="0.0500%" height="15" fill="rgb(226,159,4)" fg:x="8106" fg:w="5"/><text x="81.2614%" y="383.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_rwlock_rdlock (2 samples, 0.02%)</title><rect x="81.0614%" y="373" width="0.0200%" height="15" fill="rgb(219,175,34)" fg:x="8111" fg:w="2"/><text x="81.3114%" y="383.50"></text></g><g><title>oprf`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="81.0814%" y="373" width="0.0200%" height="15" fill="rgb(236,10,46)" fg:x="8113" fg:w="2"/><text x="81.3314%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.22%)</title><rect x="81.2313%" y="357" width="0.2199%" height="15" fill="rgb(240,211,16)" fg:x="8128" fg:w="22"/><text x="81.4813%" y="367.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (38 samples, 0.38%)</title><rect x="81.1013%" y="373" width="0.3798%" height="15" fill="rgb(205,3,43)" fg:x="8115" fg:w="38"/><text x="81.3513%" y="383.50"></text></g><g><title>oprf`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="81.4611%" y="357" width="0.0200%" height="15" fill="rgb(245,7,22)" fg:x="8151" fg:w="2"/><text x="81.7111%" y="367.50"></text></g><g><title>oprf`hashbrown::map::RawEntryMut&lt;K,V,S,A&gt;::or_insert_with (3 samples, 0.03%)</title><rect x="81.4811%" y="373" width="0.0300%" height="15" fill="rgb(239,132,32)" fg:x="8153" fg:w="3"/><text x="81.7311%" y="383.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="81.4911%" y="357" width="0.0200%" height="15" fill="rgb(228,202,34)" fg:x="8154" fg:w="2"/><text x="81.7411%" y="367.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (2 samples, 0.02%)</title><rect x="81.4911%" y="341" width="0.0200%" height="15" fill="rgb(254,200,22)" fg:x="8154" fg:w="2"/><text x="81.7411%" y="351.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (71 samples, 0.71%)</title><rect x="80.8115%" y="389" width="0.7096%" height="15" fill="rgb(219,10,39)" fg:x="8086" fg:w="71"/><text x="81.0615%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.05%)</title><rect x="81.5611%" y="373" width="0.0500%" height="15" fill="rgb(226,210,39)" fg:x="8161" fg:w="5"/><text x="81.8111%" y="383.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (330 samples, 3.30%)</title><rect x="78.3630%" y="405" width="3.2980%" height="15" fill="rgb(208,219,16)" fg:x="7841" fg:w="330"/><text x="78.6130%" y="415.50">opr..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (13 samples, 0.13%)</title><rect x="81.5311%" y="389" width="0.1299%" height="15" fill="rgb(216,158,51)" fg:x="8158" fg:w="13"/><text x="81.7811%" y="399.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (5 samples, 0.05%)</title><rect x="81.6110%" y="373" width="0.0500%" height="15" fill="rgb(233,14,44)" fg:x="8166" fg:w="5"/><text x="81.8610%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (5 samples, 0.05%)</title><rect x="81.8309%" y="389" width="0.0500%" height="15" fill="rgb(237,97,39)" fg:x="8188" fg:w="5"/><text x="82.0809%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="81.9208%" y="373" width="0.0200%" height="15" fill="rgb(218,198,43)" fg:x="8197" fg:w="2"/><text x="82.1708%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="81.9408%" y="373" width="0.0200%" height="15" fill="rgb(231,104,20)" fg:x="8199" fg:w="2"/><text x="82.1908%" y="383.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::ordering_sender::Send&lt;M&gt; as core::future::future::Future&gt;::poll (11 samples, 0.11%)</title><rect x="81.8809%" y="389" width="0.1099%" height="15" fill="rgb(254,36,13)" fg:x="8193" fg:w="11"/><text x="82.1309%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.04%)</title><rect x="82.1307%" y="373" width="0.0400%" height="15" fill="rgb(248,14,50)" fg:x="8218" fg:w="4"/><text x="82.3807%" y="383.50"></text></g><g><title>oprf`&lt;ipa::helpers::buffers::unordered_receiver::Receiver&lt;S,C,M&gt; as core::future::future::Future&gt;::poll (24 samples, 0.24%)</title><rect x="81.9908%" y="389" width="0.2399%" height="15" fill="rgb(217,107,29)" fg:x="8204" fg:w="24"/><text x="82.2408%" y="399.50"></text></g><g><title>oprf`ipa::helpers::buffers::unordered_receiver::OperatingState&lt;S,C&gt;::wake_next (5 samples, 0.05%)</title><rect x="82.1807%" y="373" width="0.0500%" height="15" fill="rgb(251,169,33)" fg:x="8223" fg:w="5"/><text x="82.4307%" y="383.50"></text></g><g><title>oprf`tokio::runtime::task::waker::wake_by_val (3 samples, 0.03%)</title><rect x="82.2007%" y="357" width="0.0300%" height="15" fill="rgb(217,108,32)" fg:x="8225" fg:w="3"/><text x="82.4507%" y="367.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (2 samples, 0.02%)</title><rect x="82.2307%" y="389" width="0.0200%" height="15" fill="rgb(219,66,42)" fg:x="8228" fg:w="2"/><text x="82.4807%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.06%)</title><rect x="82.2506%" y="373" width="0.0600%" height="15" fill="rgb(206,180,7)" fg:x="8230" fg:w="6"/><text x="82.5006%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="82.3106%" y="373" width="0.0200%" height="15" fill="rgb(208,226,31)" fg:x="8236" fg:w="2"/><text x="82.5606%" y="383.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (31 samples, 0.31%)</title><rect x="82.3306%" y="373" width="0.3098%" height="15" fill="rgb(218,26,49)" fg:x="8238" fg:w="31"/><text x="82.5806%" y="383.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (26 samples, 0.26%)</title><rect x="82.3806%" y="357" width="0.2598%" height="15" fill="rgb(233,197,48)" fg:x="8243" fg:w="26"/><text x="82.6306%" y="367.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 0.02%)</title><rect x="82.6404%" y="373" width="0.0200%" height="15" fill="rgb(252,181,51)" fg:x="8269" fg:w="2"/><text x="82.8904%" y="383.50"></text></g><g><title>oprf`std::sys::unix::locks::pthread_rwlock::RwLock::read (2 samples, 0.02%)</title><rect x="82.6604%" y="373" width="0.0200%" height="15" fill="rgb(253,90,19)" fg:x="8271" fg:w="2"/><text x="82.9104%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (46 samples, 0.46%)</title><rect x="82.7603%" y="357" width="0.4597%" height="15" fill="rgb(215,171,30)" fg:x="8281" fg:w="46"/><text x="83.0103%" y="367.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_rwlock_rdlock (3 samples, 0.03%)</title><rect x="83.2201%" y="357" width="0.0300%" height="15" fill="rgb(214,222,9)" fg:x="8327" fg:w="3"/><text x="83.4701%" y="367.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (103 samples, 1.03%)</title><rect x="82.2506%" y="389" width="1.0294%" height="15" fill="rgb(223,3,22)" fg:x="8230" fg:w="103"/><text x="82.5006%" y="399.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_enter (60 samples, 0.60%)</title><rect x="82.6804%" y="373" width="0.5996%" height="15" fill="rgb(225,196,46)" fg:x="8273" fg:w="60"/><text x="82.9304%" y="383.50"></text></g><g><title>oprf`std::sys::unix::locks::pthread_rwlock::RwLock::read (3 samples, 0.03%)</title><rect x="83.2500%" y="357" width="0.0300%" height="15" fill="rgb(209,110,37)" fg:x="8330" fg:w="3"/><text x="83.5000%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.09%)</title><rect x="83.2800%" y="373" width="0.0899%" height="15" fill="rgb(249,89,12)" fg:x="8333" fg:w="9"/><text x="83.5300%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="83.3700%" y="373" width="0.0400%" height="15" fill="rgb(226,27,33)" fg:x="8342" fg:w="4"/><text x="83.6200%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.08%)</title><rect x="83.5299%" y="341" width="0.0800%" height="15" fill="rgb(213,82,22)" fg:x="8358" fg:w="8"/><text x="83.7799%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.07%)</title><rect x="83.6198%" y="325" width="0.0700%" height="15" fill="rgb(248,140,0)" fg:x="8367" fg:w="7"/><text x="83.8698%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.04%)</title><rect x="83.6998%" y="309" width="0.0400%" height="15" fill="rgb(228,106,3)" fg:x="8375" fg:w="4"/><text x="83.9498%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="83.7398%" y="309" width="0.0300%" height="15" fill="rgb(209,23,37)" fg:x="8379" fg:w="3"/><text x="83.9898%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (6 samples, 0.06%)</title><rect x="83.7697%" y="309" width="0.0600%" height="15" fill="rgb(241,93,50)" fg:x="8382" fg:w="6"/><text x="84.0197%" y="319.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (3 samples, 0.03%)</title><rect x="83.7997%" y="293" width="0.0300%" height="15" fill="rgb(253,46,43)" fg:x="8385" fg:w="3"/><text x="84.0497%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (15 samples, 0.15%)</title><rect x="83.6898%" y="325" width="0.1499%" height="15" fill="rgb(226,206,43)" fg:x="8374" fg:w="15"/><text x="83.9398%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (24 samples, 0.24%)</title><rect x="83.6098%" y="341" width="0.2399%" height="15" fill="rgb(217,54,7)" fg:x="8366" fg:w="24"/><text x="83.8598%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (35 samples, 0.35%)</title><rect x="83.5299%" y="357" width="0.3498%" height="15" fill="rgb(223,5,52)" fg:x="8358" fg:w="35"/><text x="83.7799%" y="367.50"></text></g><g><title>oprf`tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="83.8597%" y="341" width="0.0200%" height="15" fill="rgb(206,52,46)" fg:x="8391" fg:w="2"/><text x="84.1097%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (58 samples, 0.58%)</title><rect x="83.4100%" y="373" width="0.5797%" height="15" fill="rgb(253,136,11)" fg:x="8346" fg:w="58"/><text x="83.6600%" y="383.50"></text></g><g><title>oprf`tracing_core::dispatcher::get_default (10 samples, 0.10%)</title><rect x="83.8897%" y="357" width="0.0999%" height="15" fill="rgb(208,106,33)" fg:x="8394" fg:w="10"/><text x="84.1397%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (10 samples, 0.10%)</title><rect x="84.0096%" y="357" width="0.0999%" height="15" fill="rgb(206,54,4)" fg:x="8406" fg:w="10"/><text x="84.2596%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (7 samples, 0.07%)</title><rect x="84.1495%" y="341" width="0.0700%" height="15" fill="rgb(213,3,15)" fg:x="8420" fg:w="7"/><text x="84.3995%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (95 samples, 0.95%)</title><rect x="83.2800%" y="389" width="0.9494%" height="15" fill="rgb(252,211,39)" fg:x="8333" fg:w="95"/><text x="83.5300%" y="399.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_exit (22 samples, 0.22%)</title><rect x="84.0096%" y="373" width="0.2199%" height="15" fill="rgb(223,6,36)" fg:x="8406" fg:w="22"/><text x="84.2596%" y="383.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (12 samples, 0.12%)</title><rect x="84.1095%" y="357" width="0.1199%" height="15" fill="rgb(252,169,45)" fg:x="8416" fg:w="12"/><text x="84.3595%" y="367.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="84.2594%" y="389" width="0.0200%" height="15" fill="rgb(212,48,26)" fg:x="8431" fg:w="2"/><text x="84.5094%" y="399.50"></text></g><g><title>oprf`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (267 samples, 2.67%)</title><rect x="81.6610%" y="405" width="2.6684%" height="15" fill="rgb(251,102,48)" fg:x="8171" fg:w="267"/><text x="81.9110%" y="415.50">op..</text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_enter (3 samples, 0.03%)</title><rect x="84.2994%" y="389" width="0.0300%" height="15" fill="rgb(243,208,16)" fg:x="8435" fg:w="3"/><text x="84.5494%" y="399.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (2 samples, 0.02%)</title><rect x="84.3294%" y="405" width="0.0200%" height="15" fill="rgb(219,96,24)" fg:x="8438" fg:w="2"/><text x="84.5794%" y="415.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="84.3694%" y="405" width="0.0200%" height="15" fill="rgb(219,33,29)" fg:x="8442" fg:w="2"/><text x="84.6194%" y="415.50"></text></g><g><title>oprf`_rjem_malloc (4 samples, 0.04%)</title><rect x="84.3894%" y="405" width="0.0400%" height="15" fill="rgb(223,176,5)" fg:x="8444" fg:w="4"/><text x="84.6394%" y="415.50"></text></g><g><title>oprf`_rjem_sdallocx (3 samples, 0.03%)</title><rect x="84.4293%" y="405" width="0.0300%" height="15" fill="rgb(228,140,14)" fg:x="8448" fg:w="3"/><text x="84.6793%" y="415.50"></text></g><g><title>oprf`aes::soft::fixslice::aes256_encrypt (2 samples, 0.02%)</title><rect x="84.4593%" y="405" width="0.0200%" height="15" fill="rgb(217,179,31)" fg:x="8451" fg:w="2"/><text x="84.7093%" y="415.50"></text></g><g><title>oprf`&lt;bool as core::ops::bit::BitXor&gt;::bitxor (18 samples, 0.18%)</title><rect x="84.5093%" y="389" width="0.1799%" height="15" fill="rgb(230,9,30)" fg:x="8456" fg:w="18"/><text x="84.7593%" y="399.50"></text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (109 samples, 1.09%)</title><rect x="84.4793%" y="405" width="1.0893%" height="15" fill="rgb(230,136,20)" fg:x="8453" fg:w="109"/><text x="84.7293%" y="415.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (88 samples, 0.88%)</title><rect x="84.6892%" y="389" width="0.8795%" height="15" fill="rgb(215,210,22)" fg:x="8474" fg:w="88"/><text x="84.9392%" y="399.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (3 samples, 0.03%)</title><rect x="85.5687%" y="405" width="0.0300%" height="15" fill="rgb(218,43,5)" fg:x="8562" fg:w="3"/><text x="85.8187%" y="415.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;ipa::secret_sharing::replicated::semi_honest::additive_share::AdditiveShare&lt;ipa::ff::galois_field::bit_array_1::Gf2&gt;,ipa::error::Error&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="85.5986%" y="405" width="0.0300%" height="15" fill="rgb(216,11,5)" fg:x="8565" fg:w="3"/><text x="85.8486%" y="415.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;ipa::helpers::gateway::receive::ReceivingEnd&lt;alloc::sync::Weak&lt;ipa::helpers::transport::in_memory::transport::InMemoryTransport&gt;,ipa::ff::galois_field::bit_array_1::Gf2&gt;::receive::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="85.6286%" y="405" width="0.0200%" height="15" fill="rgb(209,82,29)" fg:x="8568" fg:w="2"/><text x="85.8786%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="85.7086%" y="389" width="0.0200%" height="15" fill="rgb(244,115,12)" fg:x="8576" fg:w="2"/><text x="85.9586%" y="399.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics::key::Key&gt; (9 samples, 0.09%)</title><rect x="85.6586%" y="405" width="0.0899%" height="15" fill="rgb(222,82,18)" fg:x="8571" fg:w="9"/><text x="85.9086%" y="415.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="85.7286%" y="389" width="0.0200%" height="15" fill="rgb(249,227,8)" fg:x="8578" fg:w="2"/><text x="85.9786%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.12%)</title><rect x="85.7685%" y="373" width="0.1199%" height="15" fill="rgb(253,141,45)" fg:x="8582" fg:w="12"/><text x="86.0185%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.07%)</title><rect x="85.9284%" y="357" width="0.0700%" height="15" fill="rgb(234,184,4)" fg:x="8598" fg:w="7"/><text x="86.1784%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.08%)</title><rect x="86.0184%" y="341" width="0.0800%" height="15" fill="rgb(218,194,23)" fg:x="8607" fg:w="8"/><text x="86.2684%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (4 samples, 0.04%)</title><rect x="86.0983%" y="341" width="0.0400%" height="15" fill="rgb(235,66,41)" fg:x="8615" fg:w="4"/><text x="86.3483%" y="351.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (3 samples, 0.03%)</title><rect x="86.1083%" y="325" width="0.0300%" height="15" fill="rgb(245,217,1)" fg:x="8616" fg:w="3"/><text x="86.3583%" y="335.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="86.1783%" y="325" width="0.0200%" height="15" fill="rgb(229,91,1)" fg:x="8623" fg:w="2"/><text x="86.4283%" y="335.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_close (10 samples, 0.10%)</title><rect x="86.1483%" y="341" width="0.0999%" height="15" fill="rgb(207,101,30)" fg:x="8620" fg:w="10"/><text x="86.3983%" y="351.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::cares_about_span (5 samples, 0.05%)</title><rect x="86.1983%" y="325" width="0.0500%" height="15" fill="rgb(223,82,49)" fg:x="8625" fg:w="5"/><text x="86.4483%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (3 samples, 0.03%)</title><rect x="86.2183%" y="309" width="0.0300%" height="15" fill="rgb(218,167,17)" fg:x="8627" fg:w="3"/><text x="86.4683%" y="319.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (36 samples, 0.36%)</title><rect x="85.8985%" y="373" width="0.3598%" height="15" fill="rgb(208,103,14)" fg:x="8595" fg:w="36"/><text x="86.1485%" y="383.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (25 samples, 0.25%)</title><rect x="86.0084%" y="357" width="0.2499%" height="15" fill="rgb(238,20,8)" fg:x="8606" fg:w="25"/><text x="86.2584%" y="367.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (2 samples, 0.02%)</title><rect x="86.2582%" y="373" width="0.0200%" height="15" fill="rgb(218,80,54)" fg:x="8631" fg:w="2"/><text x="86.5082%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.05%)</title><rect x="86.3582%" y="341" width="0.0500%" height="15" fill="rgb(240,144,17)" fg:x="8641" fg:w="5"/><text x="86.6082%" y="351.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="86.4181%" y="341" width="0.0200%" height="15" fill="rgb(245,27,50)" fg:x="8647" fg:w="2"/><text x="86.6681%" y="351.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_tracing_context::tracing_integration::Labels&gt; (3 samples, 0.03%)</title><rect x="86.4381%" y="341" width="0.0300%" height="15" fill="rgb(251,51,7)" fg:x="8649" fg:w="3"/><text x="86.6881%" y="351.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;tracing_subscriber::fmt::fmt_layer::FormattedFields&lt;tracing_subscriber::fmt::format::DefaultFields&gt;&gt; (2 samples, 0.02%)</title><rect x="86.4681%" y="341" width="0.0200%" height="15" fill="rgb(245,217,29)" fg:x="8652" fg:w="2"/><text x="86.7181%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (5 samples, 0.05%)</title><rect x="86.5381%" y="325" width="0.0500%" height="15" fill="rgb(221,176,29)" fg:x="8659" fg:w="5"/><text x="86.7881%" y="335.50"></text></g><g><title>oprf`_rjem_sdallocx (20 samples, 0.20%)</title><rect x="86.5980%" y="325" width="0.1999%" height="15" fill="rgb(212,180,24)" fg:x="8665" fg:w="20"/><text x="86.8480%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="86.8479%" y="293" width="0.0400%" height="15" fill="rgb(254,24,2)" fg:x="8690" fg:w="4"/><text x="87.0979%" y="303.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (54 samples, 0.54%)</title><rect x="86.3582%" y="357" width="0.5397%" height="15" fill="rgb(230,100,2)" fg:x="8641" fg:w="54"/><text x="86.6082%" y="367.50"></text></g><g><title>oprf`hashbrown::raw::RawTable&lt;T,A&gt;::clear (41 samples, 0.41%)</title><rect x="86.4881%" y="341" width="0.4098%" height="15" fill="rgb(219,142,25)" fg:x="8654" fg:w="41"/><text x="86.7381%" y="351.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_tracing_context::tracing_integration::Labels&gt; (9 samples, 0.09%)</title><rect x="86.8079%" y="325" width="0.0899%" height="15" fill="rgb(240,73,43)" fg:x="8686" fg:w="9"/><text x="87.0579%" y="335.50"></text></g><g><title>oprf`core::ops::function::Fn::call (7 samples, 0.07%)</title><rect x="86.8279%" y="309" width="0.0700%" height="15" fill="rgb(214,114,15)" fg:x="8688" fg:w="7"/><text x="87.0779%" y="319.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (62 samples, 0.62%)</title><rect x="86.2882%" y="373" width="0.6196%" height="15" fill="rgb(207,130,4)" fg:x="8634" fg:w="62"/><text x="86.5382%" y="383.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (117 samples, 1.17%)</title><rect x="85.7585%" y="389" width="1.1693%" height="15" fill="rgb(221,25,40)" fg:x="8581" fg:w="117"/><text x="86.0085%" y="399.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (121 samples, 1.21%)</title><rect x="85.7486%" y="405" width="1.2093%" height="15" fill="rgb(241,184,7)" fg:x="8580" fg:w="121"/><text x="85.9986%" y="415.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (3 samples, 0.03%)</title><rect x="86.9278%" y="389" width="0.0300%" height="15" fill="rgb(235,159,4)" fg:x="8698" fg:w="3"/><text x="87.1778%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="86.9978%" y="389" width="0.0300%" height="15" fill="rgb(214,87,48)" fg:x="8705" fg:w="3"/><text x="87.2478%" y="399.50"></text></g><g><title>oprf`&lt;metrics::common::KeyHasher as core::hash::Hasher&gt;::write (18 samples, 0.18%)</title><rect x="87.0278%" y="389" width="0.1799%" height="15" fill="rgb(246,198,24)" fg:x="8708" fg:w="18"/><text x="87.2778%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (3 samples, 0.03%)</title><rect x="87.2177%" y="373" width="0.0300%" height="15" fill="rgb(209,66,40)" fg:x="8727" fg:w="3"/><text x="87.4677%" y="383.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (10 samples, 0.10%)</title><rect x="87.2576%" y="357" width="0.0999%" height="15" fill="rgb(233,147,39)" fg:x="8731" fg:w="10"/><text x="87.5076%" y="367.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::clone::Clone&gt;::clone (11 samples, 0.11%)</title><rect x="87.3576%" y="357" width="0.1099%" height="15" fill="rgb(231,145,52)" fg:x="8741" fg:w="11"/><text x="87.6076%" y="367.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (10 samples, 0.10%)</title><rect x="87.3676%" y="341" width="0.0999%" height="15" fill="rgb(206,20,26)" fg:x="8742" fg:w="10"/><text x="87.6176%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="87.4475%" y="325" width="0.0200%" height="15" fill="rgb(238,220,4)" fg:x="8750" fg:w="2"/><text x="87.6975%" y="335.50"></text></g><g><title>oprf`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.32%)</title><rect x="87.5175%" y="325" width="0.3198%" height="15" fill="rgb(252,195,42)" fg:x="8757" fg:w="32"/><text x="87.7675%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.10%)</title><rect x="87.8973%" y="309" width="0.0999%" height="15" fill="rgb(209,10,6)" fg:x="8795" fg:w="10"/><text x="88.1473%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="87.9972%" y="309" width="0.0300%" height="15" fill="rgb(229,3,52)" fg:x="8805" fg:w="3"/><text x="88.2472%" y="319.50"></text></g><g><title>oprf`&lt;metrics::key::Key as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="88.0272%" y="309" width="0.0300%" height="15" fill="rgb(253,49,37)" fg:x="8808" fg:w="3"/><text x="88.2772%" y="319.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="88.0572%" y="309" width="0.0200%" height="15" fill="rgb(240,103,49)" fg:x="8811" fg:w="2"/><text x="88.3072%" y="319.50"></text></g><g><title>oprf`indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (28 samples, 0.28%)</title><rect x="87.8473%" y="325" width="0.2798%" height="15" fill="rgb(250,182,30)" fg:x="8790" fg:w="28"/><text x="88.0973%" y="335.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics_util::key::CompositeKey&gt; (4 samples, 0.04%)</title><rect x="88.0871%" y="309" width="0.0400%" height="15" fill="rgb(248,8,30)" fg:x="8814" fg:w="4"/><text x="88.3371%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (3 samples, 0.03%)</title><rect x="88.0971%" y="293" width="0.0300%" height="15" fill="rgb(237,120,30)" fg:x="8815" fg:w="3"/><text x="88.3471%" y="303.50"></text></g><g><title>oprf`indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (66 samples, 0.66%)</title><rect x="87.4875%" y="341" width="0.6596%" height="15" fill="rgb(221,146,34)" fg:x="8754" fg:w="66"/><text x="87.7375%" y="351.50"></text></g><g><title>oprf`metrics::key::key_hasher_impl (2 samples, 0.02%)</title><rect x="88.1271%" y="325" width="0.0200%" height="15" fill="rgb(242,55,13)" fg:x="8818" fg:w="2"/><text x="88.3771%" y="335.50"></text></g><g><title>oprf`&lt;metrics_util::debugging::DebuggingRecorder as metrics::recorder::Recorder&gt;::register_counter (92 samples, 0.92%)</title><rect x="87.2477%" y="373" width="0.9194%" height="15" fill="rgb(242,112,31)" fg:x="8730" fg:w="92"/><text x="87.4977%" y="383.50"></text></g><g><title>oprf`metrics_util::debugging::DebuggingRecorder::track_metric (69 samples, 0.69%)</title><rect x="87.4775%" y="357" width="0.6896%" height="15" fill="rgb(249,192,27)" fg:x="8753" fg:w="69"/><text x="87.7275%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.06%)</title><rect x="88.1871%" y="357" width="0.0600%" height="15" fill="rgb(208,204,44)" fg:x="8824" fg:w="6"/><text x="88.4371%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (2 samples, 0.02%)</title><rect x="88.2471%" y="357" width="0.0200%" height="15" fill="rgb(208,93,54)" fg:x="8830" fg:w="2"/><text x="88.4971%" y="367.50"></text></g><g><title>oprf`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.03%)</title><rect x="88.2770%" y="357" width="0.0300%" height="15" fill="rgb(242,1,31)" fg:x="8833" fg:w="3"/><text x="88.5270%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.10%)</title><rect x="88.3470%" y="341" width="0.0999%" height="15" fill="rgb(241,83,25)" fg:x="8840" fg:w="10"/><text x="88.5970%" y="351.50"></text></g><g><title>oprf`DYLD-STUB$$memcmp (3 samples, 0.03%)</title><rect x="88.4469%" y="341" width="0.0300%" height="15" fill="rgb(205,169,50)" fg:x="8850" fg:w="3"/><text x="88.6969%" y="351.50"></text></g><g><title>oprf`hashbrown::map::RawEntryBuilder&lt;K,V,S,A&gt;::search (22 samples, 0.22%)</title><rect x="88.3070%" y="357" width="0.2199%" height="15" fill="rgb(239,186,37)" fg:x="8836" fg:w="22"/><text x="88.5570%" y="367.50"></text></g><g><title>oprf`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.05%)</title><rect x="88.4769%" y="341" width="0.0500%" height="15" fill="rgb(205,221,10)" fg:x="8853" fg:w="5"/><text x="88.7269%" y="351.50"></text></g><g><title>oprf`&lt;[metrics::label::Label] as metrics::cow::Cowable&gt;::clone_from_parts (2 samples, 0.02%)</title><rect x="88.5269%" y="341" width="0.0200%" height="15" fill="rgb(218,196,15)" fg:x="8858" fg:w="2"/><text x="88.7769%" y="351.50"></text></g><g><title>oprf`hashbrown::map::RawEntryMut&lt;K,V,S,A&gt;::or_insert_with (3 samples, 0.03%)</title><rect x="88.5269%" y="357" width="0.0300%" height="15" fill="rgb(218,196,35)" fg:x="8858" fg:w="3"/><text x="88.7769%" y="367.50"></text></g><g><title>oprf`metrics_util::registry::Registry&lt;K,S&gt;::get_or_create_counter (38 samples, 0.38%)</title><rect x="88.1871%" y="373" width="0.3798%" height="15" fill="rgb(233,63,24)" fg:x="8824" fg:w="38"/><text x="88.4371%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="88.6068%" y="357" width="0.0200%" height="15" fill="rgb(225,8,4)" fg:x="8866" fg:w="2"/><text x="88.8568%" y="367.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::TracingContext&lt;R,F&gt; as metrics::recorder::Recorder&gt;::register_counter (143 samples, 1.43%)</title><rect x="87.2077%" y="389" width="1.4291%" height="15" fill="rgb(234,105,35)" fg:x="8726" fg:w="143"/><text x="87.4577%" y="399.50"></text></g><g><title>oprf`tracing_core::dispatcher::get_default (7 samples, 0.07%)</title><rect x="88.5669%" y="373" width="0.0700%" height="15" fill="rgb(236,21,32)" fg:x="8862" fg:w="7"/><text x="88.8169%" y="383.50"></text></g><g><title>oprf`_rjem_malloc (5 samples, 0.05%)</title><rect x="88.6468%" y="389" width="0.0500%" height="15" fill="rgb(228,109,6)" fg:x="8870" fg:w="5"/><text x="88.8968%" y="399.50"></text></g><g><title>oprf`_rjem_sdallocx (3 samples, 0.03%)</title><rect x="88.6968%" y="389" width="0.0300%" height="15" fill="rgb(229,215,31)" fg:x="8875" fg:w="3"/><text x="88.9468%" y="399.50"></text></g><g><title>oprf`aes::soft::fixslice::aes256_encrypt (278 samples, 2.78%)</title><rect x="88.7268%" y="389" width="2.7783%" height="15" fill="rgb(221,52,54)" fg:x="8878" fg:w="278"/><text x="88.9768%" y="399.50">op..</text></g><g><title>oprf`aes::soft::fixslice::bitslice (5 samples, 0.05%)</title><rect x="91.5051%" y="389" width="0.0500%" height="15" fill="rgb(252,129,43)" fg:x="9156" fg:w="5"/><text x="91.7551%" y="399.50"></text></g><g><title>oprf`aes::soft::fixslice::sub_bytes (215 samples, 2.15%)</title><rect x="91.5551%" y="389" width="2.1487%" height="15" fill="rgb(248,183,27)" fg:x="9161" fg:w="215"/><text x="91.8051%" y="399.50">o..</text></g><g><title>oprf`core::ptr::drop_in_place&lt;metrics::key::Key&gt; (4 samples, 0.04%)</title><rect x="93.7038%" y="389" width="0.0400%" height="15" fill="rgb(250,0,22)" fg:x="9376" fg:w="4"/><text x="93.9538%" y="399.50"></text></g><g><title>oprf`_rjem_sdallocx (2 samples, 0.02%)</title><rect x="93.7238%" y="373" width="0.0200%" height="15" fill="rgb(213,166,10)" fg:x="9378" fg:w="2"/><text x="93.9738%" y="383.50"></text></g><g><title>oprf`ipa::protocol::prss::crypto::SharedRandomness::generate_fields (682 samples, 6.82%)</title><rect x="86.9778%" y="405" width="6.8159%" height="15" fill="rgb(207,163,36)" fg:x="8703" fg:w="682"/><text x="87.2278%" y="415.50">oprf`ipa:..</text></g><g><title>oprf`metrics::key::Key::builder (5 samples, 0.05%)</title><rect x="93.7438%" y="389" width="0.0500%" height="15" fill="rgb(208,122,22)" fg:x="9380" fg:w="5"/><text x="93.9938%" y="399.50"></text></g><g><title>oprf`metrics::key::Key::builder (5 samples, 0.05%)</title><rect x="93.7937%" y="405" width="0.0500%" height="15" fill="rgb(207,104,49)" fg:x="9385" fg:w="5"/><text x="94.0437%" y="415.50"></text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.03%)</title><rect x="94.0636%" y="389" width="0.0300%" height="15" fill="rgb(248,211,50)" fg:x="9412" fg:w="3"/><text x="94.3136%" y="399.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.02%)</title><rect x="94.1135%" y="373" width="0.0200%" height="15" fill="rgb(217,13,45)" fg:x="9417" fg:w="2"/><text x="94.3635%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.14%)</title><rect x="94.2435%" y="357" width="0.1399%" height="15" fill="rgb(211,216,49)" fg:x="9430" fg:w="14"/><text x="94.4935%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (11 samples, 0.11%)</title><rect x="94.3834%" y="357" width="0.1099%" height="15" fill="rgb(221,58,53)" fg:x="9444" fg:w="11"/><text x="94.6334%" y="367.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="94.4933%" y="357" width="0.0200%" height="15" fill="rgb(220,112,41)" fg:x="9455" fg:w="2"/><text x="94.7433%" y="367.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as tracing_core::field::Visit&gt;::record_debug (2 samples, 0.02%)</title><rect x="94.5133%" y="357" width="0.0200%" height="15" fill="rgb(236,38,28)" fg:x="9457" fg:w="2"/><text x="94.7633%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (3 samples, 0.03%)</title><rect x="94.5733%" y="341" width="0.0300%" height="15" fill="rgb(227,195,22)" fg:x="9463" fg:w="3"/><text x="94.8233%" y="351.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as core::default::Default&gt;::default (68 samples, 0.68%)</title><rect x="94.6032%" y="341" width="0.6796%" height="15" fill="rgb(214,55,33)" fg:x="9466" fg:w="68"/><text x="94.8532%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.02%)</title><rect x="95.5327%" y="245" width="0.0200%" height="15" fill="rgb(248,80,13)" fg:x="9559" fg:w="2"/><text x="95.7827%" y="255.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.11%)</title><rect x="95.4927%" y="277" width="0.1099%" height="15" fill="rgb(238,52,6)" fg:x="9555" fg:w="11"/><text x="95.7427%" y="287.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (11 samples, 0.11%)</title><rect x="95.4927%" y="261" width="0.1099%" height="15" fill="rgb(224,198,47)" fg:x="9555" fg:w="11"/><text x="95.7427%" y="271.50"></text></g><g><title>oprf`_rjem_malloc (4 samples, 0.04%)</title><rect x="95.5627%" y="245" width="0.0400%" height="15" fill="rgb(233,171,20)" fg:x="9562" fg:w="4"/><text x="95.8127%" y="255.50"></text></g><g><title>oprf`alloc::fmt::format::format_inner (29 samples, 0.29%)</title><rect x="95.3328%" y="325" width="0.2898%" height="15" fill="rgb(241,30,25)" fg:x="9539" fg:w="29"/><text x="95.5828%" y="335.50"></text></g><g><title>oprf`core::fmt::write (26 samples, 0.26%)</title><rect x="95.3628%" y="309" width="0.2598%" height="15" fill="rgb(207,171,38)" fg:x="9542" fg:w="26"/><text x="95.6128%" y="319.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (23 samples, 0.23%)</title><rect x="95.3928%" y="293" width="0.2299%" height="15" fill="rgb(234,70,1)" fg:x="9545" fg:w="23"/><text x="95.6428%" y="303.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="95.6026%" y="277" width="0.0200%" height="15" fill="rgb(232,178,18)" fg:x="9566" fg:w="2"/><text x="95.8526%" y="287.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::Labels as tracing_core::field::Visit&gt;::record_debug (35 samples, 0.35%)</title><rect x="95.2828%" y="341" width="0.3498%" height="15" fill="rgb(241,78,40)" fg:x="9534" fg:w="35"/><text x="95.5328%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (4 samples, 0.04%)</title><rect x="95.6626%" y="325" width="0.0400%" height="15" fill="rgb(222,35,25)" fg:x="9572" fg:w="4"/><text x="95.9126%" y="335.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="95.7026%" y="325" width="0.0200%" height="15" fill="rgb(207,92,16)" fg:x="9576" fg:w="2"/><text x="95.9526%" y="335.50"></text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="95.7226%" y="325" width="0.0200%" height="15" fill="rgb(216,59,51)" fg:x="9578" fg:w="2"/><text x="95.9726%" y="335.50"></text></g><g><title>oprf`&lt;metrics_tracing_context::tracing_integration::MetricsLayer&lt;S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (124 samples, 1.24%)</title><rect x="94.5333%" y="357" width="1.2393%" height="15" fill="rgb(213,80,28)" fg:x="9459" fg:w="124"/><text x="94.7833%" y="367.50"></text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (11 samples, 0.11%)</title><rect x="95.6626%" y="341" width="0.1099%" height="15" fill="rgb(220,93,7)" fg:x="9572" fg:w="11"/><text x="95.9126%" y="351.50"></text></g><g><title>oprf`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.03%)</title><rect x="95.7426%" y="325" width="0.0300%" height="15" fill="rgb(225,24,44)" fg:x="9580" fg:w="3"/><text x="95.9926%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_wrlock (5 samples, 0.05%)</title><rect x="95.8325%" y="341" width="0.0500%" height="15" fill="rgb(243,74,40)" fg:x="9589" fg:w="5"/><text x="96.0825%" y="351.50"></text></g><g><title>oprf`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="95.8825%" y="341" width="0.0200%" height="15" fill="rgb(228,39,7)" fg:x="9594" fg:w="2"/><text x="96.1325%" y="351.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::get (3 samples, 0.03%)</title><rect x="95.9025%" y="341" width="0.0300%" height="15" fill="rgb(227,79,8)" fg:x="9596" fg:w="3"/><text x="96.1525%" y="351.50"></text></g><g><title>oprf`&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.05%)</title><rect x="96.0724%" y="293" width="0.0500%" height="15" fill="rgb(236,58,11)" fg:x="9613" fg:w="5"/><text x="96.3224%" y="303.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.07%)</title><rect x="96.2323%" y="277" width="0.0700%" height="15" fill="rgb(249,63,35)" fg:x="9629" fg:w="7"/><text x="96.4823%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.07%)</title><rect x="96.4022%" y="261" width="0.0700%" height="15" fill="rgb(252,114,16)" fg:x="9646" fg:w="7"/><text x="96.6522%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (5 samples, 0.05%)</title><rect x="96.5121%" y="213" width="0.0500%" height="15" fill="rgb(254,151,24)" fg:x="9657" fg:w="5"/><text x="96.7621%" y="223.50"></text></g><g><title>oprf`_rjem_realloc (3 samples, 0.03%)</title><rect x="96.5621%" y="213" width="0.0300%" height="15" fill="rgb(253,54,39)" fg:x="9662" fg:w="3"/><text x="96.8121%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="96.6720%" y="197" width="0.0200%" height="15" fill="rgb(243,25,45)" fg:x="9673" fg:w="2"/><text x="96.9220%" y="207.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (5 samples, 0.05%)</title><rect x="96.7519%" y="181" width="0.0500%" height="15" fill="rgb(234,134,9)" fg:x="9681" fg:w="5"/><text x="97.0019%" y="191.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (15 samples, 0.15%)</title><rect x="96.6920%" y="197" width="0.1499%" height="15" fill="rgb(227,166,31)" fg:x="9675" fg:w="15"/><text x="96.9420%" y="207.50"></text></g><g><title>oprf`_rjem_je_tcache_alloc_small_hard (3 samples, 0.03%)</title><rect x="96.8119%" y="181" width="0.0300%" height="15" fill="rgb(245,143,41)" fg:x="9687" fg:w="3"/><text x="97.0619%" y="191.50"></text></g><g><title>oprf`_rjem_je_arena_cache_bin_fill_small (3 samples, 0.03%)</title><rect x="96.8119%" y="165" width="0.0300%" height="15" fill="rgb(238,181,32)" fg:x="9687" fg:w="3"/><text x="97.0619%" y="175.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (38 samples, 0.38%)</title><rect x="96.4821%" y="229" width="0.3798%" height="15" fill="rgb(224,113,18)" fg:x="9654" fg:w="38"/><text x="96.7321%" y="239.50"></text></g><g><title>oprf`do_rallocx (27 samples, 0.27%)</title><rect x="96.5920%" y="213" width="0.2698%" height="15" fill="rgb(240,229,28)" fg:x="9665" fg:w="27"/><text x="96.8420%" y="223.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (42 samples, 0.42%)</title><rect x="96.4721%" y="245" width="0.4197%" height="15" fill="rgb(250,185,3)" fg:x="9653" fg:w="42"/><text x="96.7221%" y="255.50"></text></g><g><title>oprf`do_rallocx (3 samples, 0.03%)</title><rect x="96.8619%" y="229" width="0.0300%" height="15" fill="rgb(212,59,25)" fg:x="9692" fg:w="3"/><text x="97.1119%" y="239.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (43 samples, 0.43%)</title><rect x="96.4721%" y="261" width="0.4297%" height="15" fill="rgb(221,87,20)" fg:x="9653" fg:w="43"/><text x="96.7221%" y="271.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="96.9019%" y="261" width="0.0300%" height="15" fill="rgb(213,74,28)" fg:x="9696" fg:w="3"/><text x="97.1519%" y="271.50"></text></g><g><title>oprf`core::fmt::Formatter::pad (3 samples, 0.03%)</title><rect x="97.1517%" y="229" width="0.0300%" height="15" fill="rgb(224,132,34)" fg:x="9721" fg:w="3"/><text x="97.4017%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.06%)</title><rect x="97.2417%" y="213" width="0.0600%" height="15" fill="rgb(222,101,24)" fg:x="9730" fg:w="6"/><text x="97.4917%" y="223.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="97.3016%" y="213" width="0.0200%" height="15" fill="rgb(254,142,4)" fg:x="9736" fg:w="2"/><text x="97.5516%" y="223.50"></text></g><g><title>oprf`DYLD-STUB$$memcpy (2 samples, 0.02%)</title><rect x="97.3216%" y="213" width="0.0200%" height="15" fill="rgb(230,229,49)" fg:x="9738" fg:w="2"/><text x="97.5716%" y="223.50"></text></g><g><title>oprf`&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (25 samples, 0.25%)</title><rect x="97.1217%" y="245" width="0.2499%" height="15" fill="rgb(238,70,47)" fg:x="9718" fg:w="25"/><text x="97.3717%" y="255.50"></text></g><g><title>oprf`core::fmt::write (19 samples, 0.19%)</title><rect x="97.1817%" y="229" width="0.1899%" height="15" fill="rgb(231,160,17)" fg:x="9724" fg:w="19"/><text x="97.4317%" y="239.50"></text></g><g><title>oprf`core::fmt::Formatter::pad (3 samples, 0.03%)</title><rect x="97.3416%" y="213" width="0.0300%" height="15" fill="rgb(218,68,53)" fg:x="9740" fg:w="3"/><text x="97.5916%" y="223.50"></text></g><g><title>oprf`core::fmt::Formatter::write_fmt (5 samples, 0.05%)</title><rect x="97.3716%" y="245" width="0.0500%" height="15" fill="rgb(236,111,10)" fg:x="9743" fg:w="5"/><text x="97.6216%" y="255.50"></text></g><g><title>oprf`core::fmt::write (5 samples, 0.05%)</title><rect x="97.4215%" y="245" width="0.0500%" height="15" fill="rgb(224,34,41)" fg:x="9748" fg:w="5"/><text x="97.6715%" y="255.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_char (2 samples, 0.02%)</title><rect x="97.6514%" y="229" width="0.0200%" height="15" fill="rgb(241,118,19)" fg:x="9771" fg:w="2"/><text x="97.9014%" y="239.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="97.6714%" y="229" width="0.0400%" height="15" fill="rgb(238,129,25)" fg:x="9773" fg:w="4"/><text x="97.9214%" y="239.50"></text></g><g><title>oprf`&lt;char as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="97.7114%" y="229" width="0.0300%" height="15" fill="rgb(238,22,31)" fg:x="9777" fg:w="3"/><text x="97.9614%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.11%)</title><rect x="97.9512%" y="213" width="0.1099%" height="15" fill="rgb(222,174,48)" fg:x="9801" fg:w="11"/><text x="98.2012%" y="223.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_char (4 samples, 0.04%)</title><rect x="98.0612%" y="213" width="0.0400%" height="15" fill="rgb(206,152,40)" fg:x="9812" fg:w="4"/><text x="98.3112%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (11 samples, 0.11%)</title><rect x="98.2111%" y="165" width="0.1099%" height="15" fill="rgb(218,99,54)" fg:x="9827" fg:w="11"/><text x="98.4611%" y="175.50"></text></g><g><title>oprf`_rjem_malloc (3 samples, 0.03%)</title><rect x="98.3510%" y="165" width="0.0300%" height="15" fill="rgb(220,174,26)" fg:x="9841" fg:w="3"/><text x="98.6010%" y="175.50"></text></g><g><title>oprf`_rjem_realloc (2 samples, 0.02%)</title><rect x="98.3810%" y="165" width="0.0200%" height="15" fill="rgb(245,116,9)" fg:x="9844" fg:w="2"/><text x="98.6310%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="98.4909%" y="149" width="0.0400%" height="15" fill="rgb(209,72,35)" fg:x="9855" fg:w="4"/><text x="98.7409%" y="159.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (48 samples, 0.48%)</title><rect x="98.2011%" y="181" width="0.4797%" height="15" fill="rgb(226,126,21)" fg:x="9826" fg:w="48"/><text x="98.4511%" y="191.50"></text></g><g><title>oprf`do_rallocx (28 samples, 0.28%)</title><rect x="98.4010%" y="165" width="0.2798%" height="15" fill="rgb(227,192,1)" fg:x="9846" fg:w="28"/><text x="98.6510%" y="175.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc (14 samples, 0.14%)</title><rect x="98.5409%" y="149" width="0.1399%" height="15" fill="rgb(237,180,29)" fg:x="9860" fg:w="14"/><text x="98.7909%" y="159.50"></text></g><g><title>oprf`_rjem_je_arena_ralloc_no_move (4 samples, 0.04%)</title><rect x="98.6408%" y="133" width="0.0400%" height="15" fill="rgb(230,197,35)" fg:x="9870" fg:w="4"/><text x="98.8908%" y="143.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.50%)</title><rect x="98.1911%" y="197" width="0.4997%" height="15" fill="rgb(246,193,31)" fg:x="9825" fg:w="50"/><text x="98.4411%" y="207.50"></text></g><g><title>oprf`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (62 samples, 0.62%)</title><rect x="98.1011%" y="213" width="0.6196%" height="15" fill="rgb(241,36,4)" fg:x="9816" fg:w="62"/><text x="98.3511%" y="223.50"></text></g><g><title>oprf`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="98.6908%" y="197" width="0.0300%" height="15" fill="rgb(241,130,17)" fg:x="9875" fg:w="3"/><text x="98.9408%" y="207.50"></text></g><g><title>oprf`DYLD-STUB$$memcpy (3 samples, 0.03%)</title><rect x="98.7208%" y="213" width="0.0300%" height="15" fill="rgb(206,137,32)" fg:x="9878" fg:w="3"/><text x="98.9708%" y="223.50"></text></g><g><title>oprf`core::fmt::write (184 samples, 1.84%)</title><rect x="96.9318%" y="261" width="1.8389%" height="15" fill="rgb(237,228,51)" fg:x="9699" fg:w="184"/><text x="97.1818%" y="271.50">o..</text></g><g><title>oprf`nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (130 samples, 1.30%)</title><rect x="97.4715%" y="245" width="1.2992%" height="15" fill="rgb(243,6,42)" fg:x="9753" fg:w="130"/><text x="97.7215%" y="255.50"></text></g><g><title>oprf`core::fmt::write (103 samples, 1.03%)</title><rect x="97.7414%" y="229" width="1.0294%" height="15" fill="rgb(251,74,28)" fg:x="9780" fg:w="103"/><text x="97.9914%" y="239.50"></text></g><g><title>oprf`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="98.7507%" y="213" width="0.0200%" height="15" fill="rgb(218,20,49)" fg:x="9881" fg:w="2"/><text x="99.0007%" y="223.50"></text></g><g><title>oprf`&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (249 samples, 2.49%)</title><rect x="96.3022%" y="277" width="2.4885%" height="15" fill="rgb(238,28,14)" fg:x="9636" fg:w="249"/><text x="96.5522%" y="287.50">op..</text></g><g><title>oprf`nu_ansi_term::ansi::_&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (2 samples, 0.02%)</title><rect x="98.7707%" y="261" width="0.0200%" height="15" fill="rgb(229,40,46)" fg:x="9883" fg:w="2"/><text x="99.0207%" y="271.50"></text></g><g><title>oprf`tracing_core::field::ValueSet::record (292 samples, 2.92%)</title><rect x="95.9324%" y="341" width="2.9182%" height="15" fill="rgb(244,195,20)" fg:x="9599" fg:w="292"/><text x="96.1824%" y="351.50">op..</text></g><g><title>oprf`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (288 samples, 2.88%)</title><rect x="95.9724%" y="325" width="2.8783%" height="15" fill="rgb(253,56,35)" fg:x="9603" fg:w="288"/><text x="96.2224%" y="335.50">op..</text></g><g><title>oprf`core::fmt::Write::write_fmt (281 samples, 2.81%)</title><rect x="96.0424%" y="309" width="2.8083%" height="15" fill="rgb(210,149,44)" fg:x="9610" fg:w="281"/><text x="96.2924%" y="319.50">op..</text></g><g><title>oprf`core::fmt::write (272 samples, 2.72%)</title><rect x="96.1323%" y="293" width="2.7184%" height="15" fill="rgb(240,135,12)" fg:x="9619" fg:w="272"/><text x="96.3823%" y="303.50">op..</text></g><g><title>oprf`core::fmt::write (5 samples, 0.05%)</title><rect x="98.8007%" y="277" width="0.0500%" height="15" fill="rgb(251,24,50)" fg:x="9886" fg:w="5"/><text x="99.0507%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (5 samples, 0.05%)</title><rect x="98.8607%" y="325" width="0.0500%" height="15" fill="rgb(243,200,47)" fg:x="9892" fg:w="5"/><text x="99.1107%" y="335.50"></text></g><g><title>oprf`DYLD-STUB$$pthread_getspecific (2 samples, 0.02%)</title><rect x="98.9107%" y="325" width="0.0200%" height="15" fill="rgb(224,166,26)" fg:x="9897" fg:w="2"/><text x="99.1607%" y="335.50"></text></g><g><title>oprf`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (317 samples, 3.17%)</title><rect x="95.7725%" y="357" width="3.1681%" height="15" fill="rgb(233,0,47)" fg:x="9583" fg:w="317"/><text x="96.0225%" y="367.50">opr..</text></g><g><title>oprf`tracing_subscriber::registry::extensions::ExtensionsMut::insert (9 samples, 0.09%)</title><rect x="98.8507%" y="341" width="0.0899%" height="15" fill="rgb(253,80,5)" fg:x="9891" fg:w="9"/><text x="99.1007%" y="351.50"></text></g><g><title>oprf`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (5 samples, 0.05%)</title><rect x="98.9406%" y="357" width="0.0500%" height="15" fill="rgb(214,133,25)" fg:x="9900" fg:w="5"/><text x="99.1906%" y="367.50"></text></g><g><title>oprf`sharded_slab::pool::Pool&lt;T,C&gt;::create_with (16 samples, 0.16%)</title><rect x="98.9906%" y="357" width="0.1599%" height="15" fill="rgb(209,27,14)" fg:x="9905" fg:w="16"/><text x="99.2406%" y="367.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (3 samples, 0.03%)</title><rect x="99.1205%" y="341" width="0.0300%" height="15" fill="rgb(219,102,51)" fg:x="9918" fg:w="3"/><text x="99.3705%" y="351.50"></text></g><g><title>oprf`sharded_slab::shard::Shard&lt;T,C&gt;::init_with (2 samples, 0.02%)</title><rect x="99.1505%" y="357" width="0.0200%" height="15" fill="rgb(237,18,16)" fg:x="9921" fg:w="2"/><text x="99.4005%" y="367.50"></text></g><g><title>oprf`tracing_subscriber::filter::env::EnvFilter::on_new_span (6 samples, 0.06%)</title><rect x="99.1805%" y="357" width="0.0600%" height="15" fill="rgb(241,85,17)" fg:x="9924" fg:w="6"/><text x="99.4305%" y="367.50"></text></g><g><title>oprf`&lt;ipa::secret_sharing::replicated::semi_honest::additive_share::AdditiveShare&lt;F&gt; as ipa::protocol::basics::mul::SecureMul&lt;C&gt;&gt;::multiply_sparse::_{{closure}} (2,429 samples, 24.28%)</title><rect x="74.9750%" y="421" width="24.2754%" height="15" fill="rgb(236,90,42)" fg:x="7502" fg:w="2429"/><text x="75.2250%" y="431.50">oprf`&lt;ipa::secret_sharing::replicated::..</text></g><g><title>oprf`tracing_core::dispatcher::get_default (539 samples, 5.39%)</title><rect x="93.8637%" y="405" width="5.3868%" height="15" fill="rgb(249,57,21)" fg:x="9392" fg:w="539"/><text x="94.1137%" y="415.50">oprf`tr..</text></g><g><title>oprf`tracing::span::Span::make_with (516 samples, 5.16%)</title><rect x="94.0935%" y="389" width="5.1569%" height="15" fill="rgb(243,12,36)" fg:x="9415" fg:w="516"/><text x="94.3435%" y="399.50">oprf`t..</text></g><g><title>oprf`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (512 samples, 5.12%)</title><rect x="94.1335%" y="373" width="5.1169%" height="15" fill="rgb(253,128,47)" fg:x="9419" fg:w="512"/><text x="94.3835%" y="383.50">oprf`&lt;..</text></g><g><title>oprf`_rjem_malloc (2 samples, 0.02%)</title><rect x="99.2804%" y="421" width="0.0200%" height="15" fill="rgb(207,33,20)" fg:x="9934" fg:w="2"/><text x="99.5304%" y="431.50"></text></g><g><title>oprf`_rjem_sdallocx (4 samples, 0.04%)</title><rect x="99.3004%" y="421" width="0.0400%" height="15" fill="rgb(233,215,35)" fg:x="9936" fg:w="4"/><text x="99.5504%" y="431.50"></text></g><g><title>oprf`ipa::protocol::basics::mul::SecureMul::multiply::_{{closure}} (2,465 samples, 24.64%)</title><rect x="74.7352%" y="437" width="24.6352%" height="15" fill="rgb(249,188,52)" fg:x="7478" fg:w="2465"/><text x="74.9852%" y="447.50">oprf`ipa::protocol::basics::mul::Secure..</text></g><g><title>oprf`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (9,888 samples, 98.82%)</title><rect x="0.8095%" y="485" width="98.8207%" height="15" fill="rgb(225,12,32)" fg:x="81" fg:w="9888"/><text x="1.0595%" y="495.50">oprf`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll</text></g><g><title>oprf`&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (9,886 samples, 98.80%)</title><rect x="0.8295%" y="469" width="98.8007%" height="15" fill="rgb(247,98,14)" fg:x="83" fg:w="9886"/><text x="1.0795%" y="479.50">oprf`&lt;S as futures_core::stream::TryStream&gt;::try_poll_next</text></g><g><title>oprf`ipa::seq_join::ActiveItem&lt;F&gt;::check_ready (9,877 samples, 98.71%)</title><rect x="0.9194%" y="453" width="98.7108%" height="15" fill="rgb(247,219,48)" fg:x="92" fg:w="9877"/><text x="1.1694%" y="463.50">oprf`ipa::seq_join::ActiveItem&lt;F&gt;::check_ready</text></g><g><title>oprf`ipa::secret_sharing::decomposed::BitDecomposed&lt;S&gt;::decompose (25 samples, 0.25%)</title><rect x="99.3804%" y="437" width="0.2499%" height="15" fill="rgb(253,60,48)" fg:x="9944" fg:w="25"/><text x="99.6304%" y="447.50"></text></g><g><title>oprf`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.25%)</title><rect x="99.3804%" y="421" width="0.2499%" height="15" fill="rgb(245,15,52)" fg:x="9944" fg:w="25"/><text x="99.6304%" y="431.50"></text></g><g><title>oprf`&lt;ipa::ff::galois_field::bit_array_5::Gf5Bit as core::ops::index::Index&lt;usize&gt;&gt;::index (20 samples, 0.20%)</title><rect x="99.4303%" y="405" width="0.1999%" height="15" fill="rgb(220,133,28)" fg:x="9949" fg:w="20"/><text x="99.6803%" y="415.50"></text></g><g><title>oprf`&lt;futures_util::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (9,890 samples, 98.84%)</title><rect x="0.7995%" y="501" width="98.8407%" height="15" fill="rgb(217,180,4)" fg:x="80" fg:w="9890"/><text x="1.0495%" y="511.50">oprf`&lt;futures_util::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll</text></g><g><title>oprf`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (9,891 samples, 98.85%)</title><rect x="0.7995%" y="533" width="98.8507%" height="15" fill="rgb(251,24,1)" fg:x="80" fg:w="9891"/><text x="1.0495%" y="543.50">oprf`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>oprf`&lt;futures_util::future::join_all::JoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (9,891 samples, 98.85%)</title><rect x="0.7995%" y="517" width="98.8507%" height="15" fill="rgb(212,185,49)" fg:x="80" fg:w="9891"/><text x="1.0495%" y="527.50">oprf`&lt;futures_util::future::join_all::JoinAll&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>oprf`bitvec::array::ops::_&lt;impl core::ops::bit::BitXorAssign&lt;bitvec::array::BitArray&lt;A,O&gt;&gt; for bitvec::slice::BitSlice&lt;&lt;A as bitvec::view::BitView&gt;::Store,O&gt;&gt;::bitxor_assign (9 samples, 0.09%)</title><rect x="99.6702%" y="469" width="0.0899%" height="15" fill="rgb(215,175,22)" fg:x="9973" fg:w="9"/><text x="99.9202%" y="479.50"></text></g><g><title>oprf`bitvec::slice::specialization::lsb0::_&lt;impl bitvec::slice::BitSlice&lt;T&gt;&gt;::sp_bitop_assign (8 samples, 0.08%)</title><rect x="99.6802%" y="453" width="0.0800%" height="15" fill="rgb(250,205,14)" fg:x="9974" fg:w="8"/><text x="99.9302%" y="463.50"></text></g><g><title>oprf`core::iter::traits::iterator::Iterator::unzip (12 samples, 0.12%)</title><rect x="99.6502%" y="533" width="0.1199%" height="15" fill="rgb(225,211,22)" fg:x="9971" fg:w="12"/><text x="99.9002%" y="543.50"></text></g><g><title>oprf`&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (12 samples, 0.12%)</title><rect x="99.6502%" y="517" width="0.1199%" height="15" fill="rgb(251,179,42)" fg:x="9971" fg:w="12"/><text x="99.9002%" y="527.50"></text></g><g><title>oprf`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.12%)</title><rect x="99.6502%" y="501" width="0.1199%" height="15" fill="rgb(208,216,51)" fg:x="9971" fg:w="12"/><text x="99.9002%" y="511.50"></text></g><g><title>oprf`&lt;ipa::protocol::prf_sharding::tests::PreShardedAndSortedOPRFTestInput&lt;BK,TV&gt; as ipa::secret_sharing::into_shares::IntoShares&lt;ipa::protocol::prf_sharding::PrfShardedIpaInputRow&lt;BK,TV&gt;&gt;&gt;::share_with (11 samples, 0.11%)</title><rect x="99.6602%" y="485" width="0.1099%" height="15" fill="rgb(235,36,11)" fg:x="9972" fg:w="11"/><text x="99.9102%" y="495.50"></text></g><g><title>oprf`&lt;ipa::test_fixture::world::TestWorld as ipa::test_fixture::world::Runner&gt;::semi_honest::_{{closure}} (9,904 samples, 98.98%)</title><rect x="0.7995%" y="549" width="98.9806%" height="15" fill="rgb(213,189,28)" fg:x="80" fg:w="9904"/><text x="1.0495%" y="559.50">oprf`&lt;ipa::test_fixture::world::TestWorld as ipa::test_fixture::world::Runner&gt;::semi_honest::_{{closure}}</text></g><g><title>oprf`_rjem_je_sdallocx_default (2 samples, 0.02%)</title><rect x="99.7901%" y="549" width="0.0200%" height="15" fill="rgb(227,203,42)" fg:x="9985" fg:w="2"/><text x="100.0401%" y="559.50"></text></g><g><title>oprf`_rjem_je_sdallocx_default (2 samples, 0.02%)</title><rect x="99.8601%" y="453" width="0.0200%" height="15" fill="rgb(244,72,36)" fg:x="9992" fg:w="2"/><text x="100.1101%" y="463.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;ipa::helpers::gateway::receive::GatewayReceivers&lt;alloc::sync::Weak&lt;ipa::helpers::transport::in_memory::transport::InMemoryTransport&gt;&gt;&gt; (8 samples, 0.08%)</title><rect x="99.8101%" y="501" width="0.0800%" height="15" fill="rgb(213,53,17)" fg:x="9987" fg:w="8"/><text x="100.0601%" y="511.50"></text></g><g><title>oprf`alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.07%)</title><rect x="99.8201%" y="485" width="0.0700%" height="15" fill="rgb(207,167,3)" fg:x="9988" fg:w="7"/><text x="100.0701%" y="495.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;ipa::helpers::buffers::unordered_receiver::OperatingState&lt;ipa::helpers::transport::receive::ReceiveRecords&lt;ipa::helpers::transport::in_memory::transport::InMemoryStream&gt;,alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (7 samples, 0.07%)</title><rect x="99.8201%" y="469" width="0.0700%" height="15" fill="rgb(216,98,30)" fg:x="9988" fg:w="7"/><text x="100.0701%" y="479.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;[ipa::helpers::gateway::Gateway (10 samples, 0.10%)</title><rect x="99.8101%" y="533" width="0.0999%" height="15" fill="rgb(236,123,15)" fg:x="9987" fg:w="10"/><text x="100.0601%" y="543.50"></text></g><g><title> 3]&gt; (10 samples, 0.10%)</title><rect x="99.8101%" y="517" width="0.0999%" height="15" fill="rgb(248,81,50)" fg:x="9987" fg:w="10"/><text x="100.0601%" y="527.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;ipa::helpers::gateway::send::GatewaySenders&gt; (2 samples, 0.02%)</title><rect x="99.8901%" y="501" width="0.0200%" height="15" fill="rgb(214,120,4)" fg:x="9995" fg:w="2"/><text x="100.1401%" y="511.50"></text></g><g><title>oprf`core::ptr::drop_in_place&lt;ipa::test_fixture::world::TestWorld&gt; (11 samples, 0.11%)</title><rect x="99.8101%" y="549" width="0.1099%" height="15" fill="rgb(208,179,34)" fg:x="9987" fg:w="11"/><text x="100.0601%" y="559.50"></text></g><g><title>oprf`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (9,937 samples, 99.31%)</title><rect x="0.6296%" y="597" width="99.3104%" height="15" fill="rgb(227,140,7)" fg:x="63" fg:w="9937"/><text x="0.8796%" y="607.50">oprf`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>oprf`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9,936 samples, 99.30%)</title><rect x="0.6396%" y="581" width="99.3004%" height="15" fill="rgb(214,22,6)" fg:x="64" fg:w="9936"/><text x="0.8896%" y="591.50">oprf`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>oprf`oprf::run::_{{closure}} (9,921 samples, 99.15%)</title><rect x="0.7895%" y="565" width="99.1505%" height="15" fill="rgb(207,137,27)" fg:x="79" fg:w="9921"/><text x="1.0395%" y="575.50">oprf`oprf::run::_{{closure}}</text></g><g><title>oprf`ipa::test_fixture::world::TestWorld::new_with (2 samples, 0.02%)</title><rect x="99.9200%" y="549" width="0.0200%" height="15" fill="rgb(210,8,46)" fg:x="9998" fg:w="2"/><text x="100.1700%" y="559.50"></text></g><g><title>oprf`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (9,946 samples, 99.40%)</title><rect x="0.5497%" y="629" width="99.4004%" height="15" fill="rgb(240,16,54)" fg:x="55" fg:w="9946"/><text x="0.7997%" y="639.50">oprf`tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>oprf`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9,938 samples, 99.32%)</title><rect x="0.6296%" y="613" width="99.3204%" height="15" fill="rgb(211,209,29)" fg:x="63" fg:w="9938"/><text x="0.8796%" y="623.50">oprf`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>oprf`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (9,980 samples, 99.74%)</title><rect x="0.2299%" y="645" width="99.7402%" height="15" fill="rgb(226,228,24)" fg:x="23" fg:w="9980"/><text x="0.4799%" y="655.50">oprf`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>oprf`tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (2 samples, 0.02%)</title><rect x="99.9500%" y="629" width="0.0200%" height="15" fill="rgb(222,84,9)" fg:x="10001" fg:w="2"/><text x="100.2000%" y="639.50"></text></g><g><title>all (10,006 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(234,203,30)" fg:x="0" fg:w="10006"/><text x="0.2500%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (10,000 samples, 99.94%)</title><rect x="0.0600%" y="821" width="99.9400%" height="15" fill="rgb(238,109,14)" fg:x="6" fg:w="10000"/><text x="0.3100%" y="831.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (10,000 samples, 99.94%)</title><rect x="0.0600%" y="805" width="99.9400%" height="15" fill="rgb(233,206,34)" fg:x="6" fg:w="10000"/><text x="0.3100%" y="815.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>oprf`std::sys::unix::thread::Thread::new::thread_start (9,986 samples, 99.80%)</title><rect x="0.1999%" y="789" width="99.8001%" height="15" fill="rgb(220,167,47)" fg:x="20" fg:w="9986"/><text x="0.4499%" y="799.50">oprf`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>oprf`core::ops::function::FnOnce::call_once{{vtable.shim}} (9,986 samples, 99.80%)</title><rect x="0.1999%" y="773" width="99.8001%" height="15" fill="rgb(238,105,10)" fg:x="20" fg:w="9986"/><text x="0.4499%" y="783.50">oprf`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>oprf`std::sys_common::backtrace::__rust_begin_short_backtrace (9,986 samples, 99.80%)</title><rect x="0.1999%" y="757" width="99.8001%" height="15" fill="rgb(213,227,17)" fg:x="20" fg:w="9986"/><text x="0.4499%" y="767.50">oprf`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>oprf`tokio::runtime::blocking::pool::Inner::run (9,986 samples, 99.80%)</title><rect x="0.1999%" y="741" width="99.8001%" height="15" fill="rgb(217,132,38)" fg:x="20" fg:w="9986"/><text x="0.4499%" y="751.50">oprf`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>oprf`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9,986 samples, 99.80%)</title><rect x="0.1999%" y="725" width="99.8001%" height="15" fill="rgb(242,146,4)" fg:x="20" fg:w="9986"/><text x="0.4499%" y="735.50">oprf`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>oprf`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (9,986 samples, 99.80%)</title><rect x="0.1999%" y="709" width="99.8001%" height="15" fill="rgb(212,61,9)" fg:x="20" fg:w="9986"/><text x="0.4499%" y="719.50">oprf`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>oprf`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9,986 samples, 99.80%)</title><rect x="0.1999%" y="693" width="99.8001%" height="15" fill="rgb(247,126,22)" fg:x="20" fg:w="9986"/><text x="0.4499%" y="703.50">oprf`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>oprf`tokio::runtime::scheduler::multi_thread::worker::run (9,986 samples, 99.80%)</title><rect x="0.1999%" y="677" width="99.8001%" height="15" fill="rgb(220,196,2)" fg:x="20" fg:w="9986"/><text x="0.4499%" y="687.50">oprf`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>oprf`tokio::runtime::context::runtime::enter_runtime (9,986 samples, 99.80%)</title><rect x="0.1999%" y="661" width="99.8001%" height="15" fill="rgb(208,46,4)" fg:x="20" fg:w="9986"/><text x="0.4499%" y="671.50">oprf`tokio::runtime::context::runtime::enter_runtime</text></g></svg></svg>