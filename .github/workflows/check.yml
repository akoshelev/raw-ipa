name: CI
on: [push, pull_request]
jobs:

  toolchain:
    name: Setup Rust toolchain
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

  rust-lint:
    name: Code lints
    runs-on: ubuntu-latest
    needs: toolchain

    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Check formatting
        if: ${{ success() || failure() }}
        run: cargo fmt --all -- --check

      - name: Clippy
        if: ${{ success() || failure() }}
        run: cargo clippy --tests

  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: toolchain

    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Run Tests
        run: cargo test
        
  build:
    name: Build code
    runs-on: ubuntu-latest
    needs: toolchain

    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: -D warnings
      RUSTDOCFLAGS: -D warnings

    steps:
      - name: Build
        run: cargo build --tests

      - name: Release Build
        run: cargo build --release

      - name: Build benchmarks
        run: cargo build --benches --all-features

